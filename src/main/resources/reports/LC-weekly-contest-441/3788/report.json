{"data":[{"1":[{"id":"1","fileName":"1575079296.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = sorted(list(set(nums)))\n        if s[-1] < 0:\n            return s[-1]\n        while s[0] < 0:\n            s.pop(0)\n        return sum(s)","author":"Noah Schenk","submissionId":"1575079296"},[]]},{"3":[{"id":"3","fileName":"1575079259.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for i in range(len(nums)):\n            if nums[i] > 0:\n                s.add(nums[i])\n        res = 0\n        for x in s:\n            res += x\n        if len(s)==0:\n            return max(nums)\n        return res","author":"jacobj2","submissionId":"1575079259"},[]]},{"4":[{"id":"4","fileName":"1575079313.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(v<=0 for v in nums): return max(nums)\n        return sum(v for v in set(nums) if v>=0)\n        ","author":"Nguyễn Thảo","submissionId":"1575079313"},[{"id":"8","similarity":0.8,"totOverlap":28,"longestOverlap":7},{"id":"11","similarity":0.8235294117647058,"totOverlap":28,"longestOverlap":7},{"id":"1536","similarity":0.7096774193548387,"totOverlap":22,"longestOverlap":10}]],"8":[{"id":"8","fileName":"1575079414.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        return max(nums) if max(nums)<0 else sum(v for v in set(nums) if v>=0)","author":"technique_god","submissionId":"1575079414"},[{"id":"4","similarity":0.8,"totOverlap":28,"longestOverlap":7}]],"11":[{"id":"11","fileName":"1575079455.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n        return sum(el for el in set(nums) if el >= 0)","author":"Abhishek Choudhary","submissionId":"1575079455"},[{"id":"4","similarity":0.8235294117647058,"totOverlap":28,"longestOverlap":7}]],"1536":[{"id":"1536","fileName":"611227209.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n        return sum(x for x in set(nums) if x > 0)\n","author":"鸭梨","submissionId":"611227209"},[{"id":"11","similarity":0.7096774193548387,"totOverlap":22,"longestOverlap":10}]]},{"5":[{"id":"5","fileName":"1575079365.txt","sourceCode":"class Solution {\n    fun maxSum(nums: IntArray): Int =\n        nums.filter { it > 0 }\n            .toSet()\n            .takeIf { it.isNotEmpty() }\n            ?.sum() ?: nums.maxOrNull()!!\n}","author":"Mukhamed Issa","submissionId":"1575079365"},[]]},{"9":[{"id":"9","fileName":"1575079371.txt","sourceCode":"\n\n// COPY ALL MACROS BELOW\n\n\ntypedef long long LL;\n#define MP make_pair\n#define PB push_back\n#define F first\n#define S second\n#define LB lower_bound\n#define UB upper_bound\n#define SZ(x) ((int)x.size())\n#define LEN(x) ((int)x.length())\n#define ALL(x) begin(x), end(x)\n#define RSZ resize\n#define ASS assign\n#define REV(x) reverse(x.begin(), x.end());\n#define trav(a, x) for (auto& a : x)\ntypedef pair<LL, LL> PL;\ntypedef vector<LL> VL;\ntypedef vector<PL> VPL;\ntypedef vector<VL> VVL;\ntypedef vector<VVL> VVVL;\ntypedef vector<VVVL> VVVVL;\ntypedef vector<string> VS;\ntypedef pair<int, int> PI;\ntypedef vector<int> VI;\ntypedef vector<PI> VPI;\ntypedef vector<vector<int>> VVI;\ntypedef vector<vector<PI>> VVPI;\n#define MAX(x) *max_element(ALL(x))\n#define MIN(x) *min_element(ALL(x))\n#define FOR(i, n) for (int i = 0; i < n; i++) \n#define FOR1(i, n) for (int i = 1; i <= n; i++) \n#define SORT(x) sort(x.begin(), x.end())\n#define RSORT(x) sort(x.rbegin(), x.rend())\n#define SUM(x) accumulate(x.begin(), x.end(), 0LL)\n#define MMAX(n, x)  n = max(n, x)\n#define MMIN(n, x)  n = min(n, x)\n\nclass Solution {\npublic:\n\tint maxSum(vector<int>& nums) {\n\t\tset<LL> s;\n\t\tfor (auto p : nums) s.insert(p);\n\n\t\tint ans = 0;\n\t\tif (*s.rbegin() < 0) ans = *s.rbegin();\n\t\telse {\n\t\t\tfor (auto p : s) {\n\t\t\t\tif (p > 0) ans += p;\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n}; \n\n","author":"Wanjun Li","submissionId":"1575079371"},[]]},{"10":[{"id":"10","fileName":"1575079449.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        return sum(set([x for x in nums if x>=0])) if max(nums)>=0 else max(nums)","author":"glump1","submissionId":"1575079449"},[{"id":"1307","similarity":0.8484848484848485,"totOverlap":28,"longestOverlap":7},{"id":"1273","similarity":0.8387096774193549,"totOverlap":26,"longestOverlap":7},{"id":"1273","similarity":0.8125,"totOverlap":26,"longestOverlap":7},{"id":"1645","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":12}]],"979":[{"id":"979","fileName":"1575086716.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        for n in nums:\n            if n > 0:\n                break\n        else:\n            return max(nums)\n        return sum(set([n for n in nums if n >= 0]))","author":"woaibaobao","submissionId":"1575086716"},[{"id":"979","similarity":0.8125,"totOverlap":26,"longestOverlap":7}]],"1273":[{"id":"1273","fileName":"611225506.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n        return sum(set([i for i in nums if i >= 0]))","author":"好想喝羊肉汤啊","submissionId":"611225506"},[{"id":"10","similarity":0.8387096774193549,"totOverlap":26,"longestOverlap":7}]],"1307":[{"id":"1307","fileName":"611225714.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        return sum(list(set([x for x in nums if x >= 0]))) if max(nums) >= 0 else max(nums)","author":"速冻小鹿包","submissionId":"611225714"},[{"id":"10","similarity":0.8484848484848485,"totOverlap":28,"longestOverlap":7}]],"1645":[{"id":"1645","fileName":"611228486.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0: return max(nums)\n        return sum(set([n if n > 0 else 0 for n in nums]))","author":"程俊宏","submissionId":"611228486"},[{"id":"1273","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":12}]]},{"12":[{"id":"12","fileName":"1575079495.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        nums.resize(unique(nums.begin(), nums.end()) - nums.begin());\n        reverse(nums.begin(), nums.end());\n        if(nums[0] < 0) return nums[0];\n        int ans = 0;\n        for(int x: nums) ans += max(0, x);\n        return ans;\n    }\n};","author":"Daulet","submissionId":"1575079495"},[{"id":"1422","similarity":0.7222222222222222,"totOverlap":52,"longestOverlap":14}]],"1422":[{"id":"1422","fileName":"611226461.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> vis;\n        sort(nums.rbegin(), nums.rend());\n        if(nums[0] <= 0)  return nums[0]; \n        int res = 0;\n        for(int num : nums) {\n            if(num < 0) break;\n            if(vis.find(num) == vis.end()) res+= num;\n            vis.insert(num);\n        }\n\n        return res;\n\n      \n    }\n};","author":"陈小斌","submissionId":"611226461"},[{"id":"12","similarity":0.7222222222222222,"totOverlap":52,"longestOverlap":14}]]},{"14":[{"id":"14","fileName":"1575079517.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        used = {max(nums)}\n        total = max(nums)\n        for num in nums:\n            if num not in used and num > 0:\n                total += num\n                used.add(num)\n        return total","author":"Eliot H","submissionId":"1575079517"},[]]},{"15":[{"id":"15","fileName":"1575079524.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n        ans = 0\n        flag = False\n        for i in s:\n            if i > 0: \n                flag = True\n                ans += i\n        if not flag: ans += max(s)\n        return ans","author":"Alexander Wen","submissionId":"1575079524"},[{"id":"114","similarity":1.0,"totOverlap":40,"longestOverlap":20},{"id":"1340","similarity":0.8780487804878049,"totOverlap":36,"longestOverlap":11},{"id":"1285","similarity":0.7567567567567568,"totOverlap":28,"longestOverlap":8},{"id":"1325","similarity":0.75,"totOverlap":24,"longestOverlap":10}]],"114":[{"id":"114","fileName":"1575080656.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        counts = Counter(nums)\n        v = 0\n        added = False\n        for c in counts:\n            if c >= 0:\n                v += c\n                added = True\n\n        if not added: v = max(nums)\n        return v","author":"Andrew H. Pometta","submissionId":"1575080656"},[{"id":"15","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"1285":[{"id":"1285","fileName":"611225537.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums=set(nums)\n        res=0\n        flag=False\n        for i in nums:\n            if i>0:\n                res+=i\n                flag=True\n        if not flag:\n            return max(nums)\n        return res\n        ","author":"刘鑫","submissionId":"611225537"},[{"id":"15","similarity":0.7567567567567568,"totOverlap":28,"longestOverlap":8}]],"1325":[{"id":"1325","fileName":"611225796.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums) \n        ans = 0 \n        flag = 0 \n        for num in s:\n            if num >= 0:\n                flag = 1 \n                ans += num\n        if not flag:return max(nums) \n        return ans ","author":"好朋友","submissionId":"611225796"},[{"id":"1285","similarity":0.75,"totOverlap":24,"longestOverlap":10}]],"1340":[{"id":"1340","fileName":"611225928.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        new_nums = list(set(nums))\n        res = 0\n        flag = False\n        for n in new_nums:\n            if n >= 0:\n                res += n\n                flag = True\n        if not flag:\n            res = max(new_nums)\n\n        return res","author":"黄XC","submissionId":"611225928"},[{"id":"15","similarity":0.8780487804878049,"totOverlap":36,"longestOverlap":11}]]},{"16":[{"id":"16","fileName":"1575079536.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> g;\n        for(int i : nums) g.insert(i);\n        int re = 0;\n        bool pos = 0;\n        for(int x : g) if(x > 0) re += x, pos = 1;\n        sort(nums.begin(), nums.end());\n        if(!pos){\n            re = nums.back();\n        }\n        \n        return re;\n    }\n};","author":"lukewu28","submissionId":"1575079536"},[{"id":"216","similarity":0.7012987012987013,"totOverlap":54,"longestOverlap":6},{"id":"273","similarity":0.7014925373134329,"totOverlap":47,"longestOverlap":13}]],"216":[{"id":"216","fileName":"1575081484.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        if (n == 1) {\n            return nums[0];\n        }\n        sort(nums.begin(), nums.end());\n        set<int> st;\n        for (int val: nums) {\n            st.insert(val);\n        }\n\n        int ans = 0;\n        int select = 0;\n        for (int val: st) {\n            if (val >= 0) {\n                select = 1;\n                ans += val;\n            }\n        }\n        if (select == 0) {\n            ans = nums.back();\n        }\n        return ans;\n    }\n};","author":"dumpfile","submissionId":"1575081484"},[{"id":"16","similarity":0.7012987012987013,"totOverlap":54,"longestOverlap":6}]],"273":[{"id":"273","fileName":"1575081837.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(int x: nums){\n            st.insert(x);\n        }\n        int ans = 0;\n        int cnt = 0;\n        for(int x: st){\n            if(x>0) {\n                cnt++;\n                ans+=x;\n            }\n        }\n        if(cnt==0){\n            ans = *st.rbegin();\n        }\n        return ans;\n    }\n};","author":"Parag Goyal","submissionId":"1575081837"},[{"id":"216","similarity":0.7014925373134329,"totOverlap":47,"longestOverlap":13}]]},{"18":[{"id":"18","fileName":"1575079586.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(x < 0 for x in nums): return max(nums)\n        s = set(nums)\n        return sum(x for x in s if x >= 0)","author":"delphih","submissionId":"1575079586"},[{"id":"162","similarity":0.8947368421052632,"totOverlap":34,"longestOverlap":17},{"id":"1248","similarity":0.7894736842105263,"totOverlap":30,"longestOverlap":12},{"id":"1621","similarity":0.7894736842105263,"totOverlap":30,"longestOverlap":12}]],"162":[{"id":"162","fileName":"1575080994.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(num < 0 for num in nums):\n            return max(nums)\n        values = set(nums)\n        return sum(num for num in values if num > 0)","author":"Michael Yu","submissionId":"1575080994"},[{"id":"18","similarity":0.8947368421052632,"totOverlap":34,"longestOverlap":17}]],"1248":[{"id":"1248","fileName":"611225147.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(v<0 for v in nums):\n            return max(nums)\n        return sum(set([v for v in nums if v >=0]))","author":"陆鸢","submissionId":"611225147"},[{"id":"1547","similarity":1.0,"totOverlap":36,"longestOverlap":18},{"id":"18","similarity":0.7894736842105263,"totOverlap":30,"longestOverlap":12}]],"1547":[{"id":"1547","fileName":"611227325.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(i<0 for i in nums):\n            return max(nums)\n        \n        return sum(set([i for i in nums if i>=0]))\n        ","author":"Perlman","submissionId":"611227325"},[{"id":"1248","similarity":1.0,"totOverlap":36,"longestOverlap":18}]],"1621":[{"id":"1621","fileName":"611228115.txt","sourceCode":"class Solution:\n    def maxSum(self, A: List[int]) -> int:\n        if all(a < 0 for a in A):\n            return max(A)\n        s = set(a for a in A if a > 0)\n        return sum(s)\n        \n        ","author":"Han3000","submissionId":"611228115"},[{"id":"18","similarity":0.7894736842105263,"totOverlap":30,"longestOverlap":12}]]},{"19":[{"id":"19","fileName":"1575079598.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n\n        mx = max(nums)\n        if mx <= 0:\n            return mx\n\n        st = set()\n        for num in nums:\n            if num > 0:\n                st.add(num)\n\n        return sum(st)","author":"Kanak Tanwar","submissionId":"1575079598"},[]]},{"21":[{"id":"21","fileName":"1575079571.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        if n == 1: return nums[0]\n        non_nums = [x for x in nums if x > 0]\n        if len(non_nums) == 0: return max(nums)\n        return sum(set(non_nums))","author":"monkeylogic","submissionId":"1575079571"},[]]},{"23":[{"id":"23","fileName":"1575079639.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        lst = []\n        for n in nums:\n            if n > 0 and n not in lst:\n                lst.append(n)\n        if not lst: return max(nums)\n        return sum(lst)","author":"Geoffrey","submissionId":"1575079639"},[{"id":"451","similarity":1.0,"totOverlap":36,"longestOverlap":18},{"id":"1237","similarity":1.0,"totOverlap":36,"longestOverlap":18},{"id":"650","similarity":0.8648648648648649,"totOverlap":32,"longestOverlap":9}]],"451":[{"id":"451","fileName":"1575083003.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        array = []\n        for num in nums:\n            if num > 0 and num not in array:\n                array.append(num)\n        if not array:\n            return max(nums)\n        else:\n            return sum(array)","author":"Oh a clown","submissionId":"1575083003"},[{"id":"23","similarity":1.0,"totOverlap":36,"longestOverlap":18}]],"650":[{"id":"650","fileName":"1575084352.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen_nums = set()\n        for num in nums:\n            if num > 0 and num not in seen_nums:\n                seen_nums.add(num)\n        if not seen_nums:\n            return max(nums)\n        else:\n            return sum(seen_nums)","author":"AlTalib","submissionId":"1575084352"},[{"id":"655","similarity":1.0,"totOverlap":38,"longestOverlap":19},{"id":"23","similarity":0.8648648648648649,"totOverlap":32,"longestOverlap":9}]],"655":[{"id":"655","fileName":"1575084365.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        \n        for num in nums:\n            if num > 0 and num not in seen:\n                seen.add(num)\n\n        if not seen:\n            return max(nums)\n        return sum(seen)","author":"seanzhoujobs","submissionId":"1575084365"},[{"id":"650","similarity":1.0,"totOverlap":38,"longestOverlap":19}]],"1237":[{"id":"1237","fileName":"611225034.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        t = []\n        for n in nums:\n            if n > 0 and n not in t:\n                t.append(n)\n        if not t:\n            return max(nums)\n        return sum(t)","author":"下次认真取名","submissionId":"611225034"},[{"id":"23","similarity":1.0,"totOverlap":36,"longestOverlap":18}]]},{"25":[{"id":"25","fileName":"1575079684.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        result = 0\n        found = set()\n        for num in nums:\n            if num > 0 and num not in found:\n                found.add(num)\n                result += num\n        if result == 0:\n            return max(nums)\n        return result","author":"swrush98","submissionId":"1575079684"},[]]},{"27":[{"id":"27","fileName":"1575079730.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.rbegin(),nums.rend());\n        int ans = nums[0];\n        int n = nums.size();\n        for(int i=1;i<n;i++){\n            if(nums[i]<0){\n                break;\n            }\n            if(nums[i]==nums[i-1]){\n                continue;\n            }\n            ans+= nums[i];\n        }\n        return ans;\n    }\n};","author":"Alok Priydarshi","submissionId":"1575079730"},[{"id":"1178","similarity":0.7027027027027027,"totOverlap":52,"longestOverlap":11},{"id":"1580","similarity":0.7428571428571429,"totOverlap":52,"longestOverlap":13}]],"1178":[{"id":"1178","fileName":"1575088781.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        reverse(nums.begin(), nums.end());\n\n        int ans = nums[0];\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums[i] <= 0) break;\n            if (nums[i] == nums[i - 1]) continue;\n            ans += nums[i];\n        }\n\n        return ans;\n    }\n}; ","author":"Zhe Hou","submissionId":"1575088781"},[{"id":"27","similarity":0.7027027027027027,"totOverlap":52,"longestOverlap":11}]],"1580":[{"id":"1580","fileName":"611227623.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = 0;\n        sort(nums.begin(), nums.end(), greater<int>{});\n        res += nums[0];\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums[i] < 0) {\n                break;\n            }\n            if (nums[i] == nums[i - 1]) {\n                continue;\n            }\n            res += nums[i];\n        }\n        return res;\n    }\n};","author":"Jepe","submissionId":"611227623"},[{"id":"27","similarity":0.7428571428571429,"totOverlap":52,"longestOverlap":13}]]},{"0":[{"id":"0","fileName":"1575079247.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for num in nums:\n            if num > 0:\n                s.add(num)\n        if not s:\n            return max(nums)\n        return sum(s)","author":"Richard","submissionId":"1575079247"},[{"id":"53","similarity":1.0,"totOverlap":30,"longestOverlap":15},{"id":"94","similarity":1.0,"totOverlap":30,"longestOverlap":15},{"id":"397","similarity":1.0,"totOverlap":30,"longestOverlap":15},{"id":"791","similarity":1.0,"totOverlap":30,"longestOverlap":15},{"id":"1166","similarity":1.0,"totOverlap":30,"longestOverlap":15},{"id":"74","similarity":0.8,"totOverlap":24,"longestOverlap":6},{"id":"0","similarity":0.7419354838709677,"totOverlap":23,"longestOverlap":11}]],"2":[{"id":"2","fileName":"1575079273.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        \n        \n        basis = set([i for i in nums if i >= 0])\n        \n        if len(basis) == 0:\n            return max(nums)\n        return sum(basis)","author":"JJZin","submissionId":"1575079273"},[{"id":"270","similarity":1.0,"totOverlap":30,"longestOverlap":15},{"id":"20","similarity":0.9333333333333333,"totOverlap":28,"longestOverlap":8},{"id":"143","similarity":0.8,"totOverlap":24,"longestOverlap":10},{"id":"530","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":12},{"id":"767","similarity":0.7272727272727273,"totOverlap":24,"longestOverlap":7},{"id":"143","similarity":0.8571428571428571,"totOverlap":24,"longestOverlap":11},{"id":"619","similarity":0.9230769230769231,"totOverlap":24,"longestOverlap":8},{"id":"793","similarity":0.8571428571428571,"totOverlap":24,"longestOverlap":12},{"id":"832","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":7},{"id":"82","similarity":0.7666666666666667,"totOverlap":23,"longestOverlap":8}]],"20":[{"id":"20","fileName":"1575079630.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        \n        s = set([num for num in nums if num > 0])\n        if len(s) == 0:\n            return max(nums)\n        return sum(s)","author":"wansong123","submissionId":"1575079630"},[{"id":"2","similarity":0.9333333333333333,"totOverlap":28,"longestOverlap":8}]],"22":[{"id":"22","fileName":"1575079634.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        st = set()\n        for each in nums: \n            if each > 0:\n                st.add(each)\n        \n        if len(st) == 0:\n            return max(nums)\n        \n        return sum(list(st))","author":"Vivek Kumar","submissionId":"1575079634"},[{"id":"22","similarity":0.8837209302325582,"totOverlap":38,"longestOverlap":18}]],"24":[{"id":"24","fileName":"1575079659.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for n in nums:\n            if n < 0:\n                continue\n            s.add(n)\n        if len(s) == 0:\n            return max(nums)\n        return sum(s)","author":"Kalomidin","submissionId":"1575079659"},[{"id":"767","similarity":0.8888888888888888,"totOverlap":32,"longestOverlap":9},{"id":"1553","similarity":0.7714285714285715,"totOverlap":27,"longestOverlap":12},{"id":"1553","similarity":0.78125,"totOverlap":25,"longestOverlap":12},{"id":"20","similarity":0.7272727272727273,"totOverlap":24,"longestOverlap":7}]],"30":[{"id":"30","fileName":"1575079800.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        result = set()\n        for i in nums:\n            if i > 0:\n                result.add(i)\n\n        if len(result) != 0:\n            return sum(result)\n\n        return max(nums)","author":"KidusTegene","submissionId":"1575079800"},[{"id":"135","similarity":1.0,"totOverlap":40,"longestOverlap":20},{"id":"144","similarity":1.0,"totOverlap":40,"longestOverlap":20},{"id":"267","similarity":1.0,"totOverlap":40,"longestOverlap":20},{"id":"417","similarity":1.0,"totOverlap":40,"longestOverlap":20},{"id":"434","similarity":1.0,"totOverlap":40,"longestOverlap":20},{"id":"1243","similarity":1.0,"totOverlap":40,"longestOverlap":20},{"id":"1277","similarity":1.0,"totOverlap":40,"longestOverlap":20},{"id":"1282","similarity":1.0,"totOverlap":40,"longestOverlap":20},{"id":"30","similarity":0.8837209302325582,"totOverlap":38,"longestOverlap":18},{"id":"385","similarity":0.7555555555555555,"totOverlap":34,"longestOverlap":16},{"id":"628","similarity":0.7727272727272727,"totOverlap":34,"longestOverlap":16},{"id":"138","similarity":0.7272727272727273,"totOverlap":32,"longestOverlap":13},{"id":"385","similarity":0.7045454545454546,"totOverlap":31,"longestOverlap":6},{"id":"487","similarity":0.8108108108108109,"totOverlap":30,"longestOverlap":10},{"id":"542","similarity":0.7692307692307693,"totOverlap":30,"longestOverlap":10},{"id":"1883","similarity":0.7142857142857143,"totOverlap":30,"longestOverlap":6},{"id":"1883","similarity":0.75,"totOverlap":30,"longestOverlap":8},{"id":"1260","similarity":0.7894736842105263,"totOverlap":30,"longestOverlap":10},{"id":"1454","similarity":0.7777777777777778,"totOverlap":28,"longestOverlap":8},{"id":"205","similarity":0.7567567567567568,"totOverlap":28,"longestOverlap":10},{"id":"165","similarity":0.7027027027027027,"totOverlap":26,"longestOverlap":10},{"id":"897","similarity":0.7878787878787878,"totOverlap":26,"longestOverlap":7},{"id":"1829","similarity":0.7428571428571429,"totOverlap":26,"longestOverlap":10},{"id":"205","similarity":0.7419354838709677,"totOverlap":23,"longestOverlap":11},{"id":"1509","similarity":0.7096774193548387,"totOverlap":22,"longestOverlap":6},{"id":"205","similarity":0.7096774193548387,"totOverlap":22,"longestOverlap":4},{"id":"860","similarity":0.7333333333333333,"totOverlap":22,"longestOverlap":9},{"id":"832","similarity":0.7857142857142857,"totOverlap":22,"longestOverlap":10},{"id":"1063","similarity":0.7692307692307693,"totOverlap":20,"longestOverlap":6}]],"38":[{"id":"38","fileName":"1575079849.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(i < 0 for i in nums):\n            return max(nums)\n        nums = [i for i in nums if i > 0]\n        return sum(set(nums))","author":"allen_nie","submissionId":"1575079849"},[{"id":"1366","similarity":0.7142857142857143,"totOverlap":30,"longestOverlap":8},{"id":"1555","similarity":0.75,"totOverlap":30,"longestOverlap":8},{"id":"1314","similarity":0.717948717948718,"totOverlap":28,"longestOverlap":11},{"id":"220","similarity":0.7428571428571429,"totOverlap":26,"longestOverlap":13}]],"53":[{"id":"53","fileName":"1575079976.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for n in nums:\n            if n>=0:s.add(n)\n        if not s: return max(nums)\n        return sum(s)","author":"marktr53","submissionId":"1575079976"},[{"id":"0","similarity":1.0,"totOverlap":30,"longestOverlap":15}]],"72":[{"id":"72","fileName":"1575080198.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set([x for x in nums if x > 0])\n        return sum(s) if s else max(nums)","author":"Siddh","submissionId":"1575080198"},[{"id":"1338","similarity":1.0,"totOverlap":26,"longestOverlap":13},{"id":"72","similarity":0.8571428571428571,"totOverlap":24,"longestOverlap":11}]],"74":[{"id":"74","fileName":"1575080242.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = []\n        s = set(nums)\n        for x in s:\n            if x >= 0:\n                ans.append(x)\n        if not ans:\n            return max(nums)\n        else:\n            return sum(ans)","author":"MC_Stone","submissionId":"1575080242"},[{"id":"694","similarity":0.8125,"totOverlap":26,"longestOverlap":6},{"id":"0","similarity":0.8,"totOverlap":24,"longestOverlap":6}]],"82":[{"id":"82","fileName":"1575080320.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        answer = max(nums)\n        \n        s = set(nums)\n        ss = [x for x in s if x >= 0]\n        \n        if not ss:\n            return answer\n        return sum(ss)","author":"Maruzensky","submissionId":"1575080320"},[{"id":"725","similarity":0.8387096774193549,"totOverlap":26,"longestOverlap":13},{"id":"725","similarity":0.7575757575757576,"totOverlap":25,"longestOverlap":8}]],"94":[{"id":"94","fileName":"1575080454.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for n in nums:\n            if n > 0:\n                s.add(n)\n        if not s:\n            return max(nums)\n        else:\n            return sum(s)","author":"Jason Wang","submissionId":"1575080454"},[{"id":"0","similarity":1.0,"totOverlap":30,"longestOverlap":15}]],"100":[{"id":"100","fileName":"1575080535.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = 0\n        visited = set()\n\n        for num in nums:\n            if num > 0 and num not in visited:\n                ans += num\n                visited.add(num)\n\n        return ans if max(nums) >= 0 else max(nums)","author":"syji","submissionId":"1575080535"},[{"id":"100","similarity":0.7906976744186046,"totOverlap":34,"longestOverlap":16}]],"104":[{"id":"104","fileName":"1575080557.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        if all(n < 0 for n in nums): return max(nums)\n        return sum(set(n for n in nums if n >= 0))","author":"mcmcmc","submissionId":"1575080557"},[{"id":"104","similarity":0.7647058823529411,"totOverlap":26,"longestOverlap":7}]],"111":[{"id":"111","fileName":"1575080647.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n\n        s = set()\n        for x in nums:\n            if x >= 0:\n                s.add(x)\n\n        return sum(s)\n        ","author":"momocowcow","submissionId":"1575080647"},[{"id":"605","similarity":1.0,"totOverlap":36,"longestOverlap":18},{"id":"786","similarity":1.0,"totOverlap":36,"longestOverlap":18},{"id":"968","similarity":1.0,"totOverlap":36,"longestOverlap":18},{"id":"1256","similarity":1.0,"totOverlap":36,"longestOverlap":18},{"id":"565","similarity":0.8648648648648649,"totOverlap":32,"longestOverlap":16},{"id":"111","similarity":0.75,"totOverlap":30,"longestOverlap":8}]],"117":[{"id":"117","fileName":"1575080653.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        a = max([e for e in nums if e < 0] or [0])\n\n        nums =set([e for e in nums if e >= 0])\n        if len(nums):\n            return sum(nums)\n        return a","author":"lebron87","submissionId":"1575080653"},[{"id":"117","similarity":0.7575757575757576,"totOverlap":25,"longestOverlap":7}]],"121":[{"id":"121","fileName":"1575080664.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for num in nums:\n            if num > 0:\n                s.add(num)\n\n        if len(s) > 0:\n            return sum(s)\n        else:\n            return max(nums)","author":"miqro","submissionId":"1575080664"},[{"id":"385","similarity":0.8837209302325582,"totOverlap":38,"longestOverlap":18},{"id":"22","similarity":0.7555555555555555,"totOverlap":34,"longestOverlap":16}]],"125":[{"id":"125","fileName":"1575080694.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(x < 0 for x in nums):\n            return max(nums)\n        return sum(x for x in set(nums) if x >= 0)","author":"ddveloper","submissionId":"1575080694"},[{"id":"1276","similarity":1.0,"totOverlap":34,"longestOverlap":17},{"id":"104","similarity":0.7058823529411765,"totOverlap":24,"longestOverlap":12}]],"135":[{"id":"135","fileName":"1575080833.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res = set()\n        for i in nums:\n            if i > 0:\n                res.add(i)\n        if len(res) == 0:\n            return max(nums)\n        return sum(res)","author":"Vic","submissionId":"1575080833"},[{"id":"30","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"138":[{"id":"138","fileName":"1575080846.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        uniquePos=set()\n        for x in nums:\n            if x>0:\n                uniquePos.add(x)\n        return sum(uniquePos) if len(uniquePos)>0 else max(nums)\n        ","author":"Anshuman","submissionId":"1575080846"},[{"id":"360","similarity":1.0,"totOverlap":42,"longestOverlap":21},{"id":"22","similarity":0.7272727272727273,"totOverlap":32,"longestOverlap":13}]],"143":[{"id":"143","fileName":"1575080881.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set([n for n in nums if n > 0])\n        if len(s):\n            return sum(s)\n        return max(nums)\n        ","author":"r09922a12","submissionId":"1575080881"},[{"id":"292","similarity":0.8387096774193549,"totOverlap":26,"longestOverlap":10},{"id":"143","similarity":0.7575757575757576,"totOverlap":25,"longestOverlap":7},{"id":"2","similarity":0.8,"totOverlap":24,"longestOverlap":10}]],"144":[{"id":"144","fileName":"1575080872.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for c in nums:\n            if c > 0:\n                s.add(c)\n\n        if len(s) > 0:\n            return sum(s)\n\n        return max(nums)","author":"huggin","submissionId":"1575080872"},[{"id":"30","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"160":[{"id":"160","fileName":"1575080986.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums2 = [num for num in nums if num > 0]\n        if not nums2:\n            return max(nums)\n        return sum(set(nums2))","author":"Practicer","submissionId":"1575080986"},[{"id":"160","similarity":0.8666666666666667,"totOverlap":26,"longestOverlap":8}]],"165":[{"id":"165","fileName":"1575081020.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums)<=0:\n            return max(nums)\n        ans = 0\n        seen = set()\n        for num in nums:\n            if num>0 and num not in seen:\n                ans += num\n                seen.add(num)\n        return ans","author":"Jianqiao Li","submissionId":"1575081020"},[{"id":"100","similarity":0.75,"totOverlap":30,"longestOverlap":9}]],"180":[{"id":"180","fileName":"1575081175.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        S = set()\n\n        for x in nums:\n            if x < 0:\n                continue\n            else:\n                S.add(x)\n\n        return sum(S) if S else max(nums)","author":"承緯 劉","submissionId":"1575081175"},[{"id":"180","similarity":0.78125,"totOverlap":25,"longestOverlap":12}]],"185":[{"id":"185","fileName":"1575081217.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0:\n            return max(nums)\n        n = len(nums)\n        s = set()\n        for x in nums:\n            if x > 0:\n                s.add(x)\n        return sum(list(s))\n        ","author":"xs_pg","submissionId":"1575081217"},[{"id":"1695","similarity":0.85,"totOverlap":34,"longestOverlap":9},{"id":"1695","similarity":0.8717948717948718,"totOverlap":34,"longestOverlap":17},{"id":"111","similarity":0.8648648648648649,"totOverlap":32,"longestOverlap":16}]],"205":[{"id":"205","fileName":"1575081419.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        memo = set()\n        for x in nums:\n            if x>0:\n                memo.add(x)\n\n        return sum(memo) if memo else max(nums)","author":"DietCoke","submissionId":"1575081419"},[{"id":"319","similarity":1.0,"totOverlap":32,"longestOverlap":16},{"id":"406","similarity":1.0,"totOverlap":32,"longestOverlap":16},{"id":"470","similarity":1.0,"totOverlap":32,"longestOverlap":16},{"id":"138","similarity":0.7567567567567568,"totOverlap":28,"longestOverlap":10}]],"206":[{"id":"206","fileName":"1575081391.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = [i for i in nums if i >= 0]\n        if not s:\n            return max(nums)\n        return sum(set(s))","author":"ziw0372","submissionId":"1575081391"},[{"id":"379","similarity":1.0,"totOverlap":32,"longestOverlap":16},{"id":"617","similarity":0.9411764705882353,"totOverlap":32,"longestOverlap":16},{"id":"1009","similarity":1.0,"totOverlap":32,"longestOverlap":16},{"id":"206","similarity":0.8666666666666667,"totOverlap":26,"longestOverlap":8},{"id":"1488","similarity":0.896551724137931,"totOverlap":26,"longestOverlap":13},{"id":"206","similarity":0.7272727272727273,"totOverlap":24,"longestOverlap":7}]],"220":[{"id":"220","fileName":"1575081509.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s=set(nums)\n        if all(x<0 for x in s):return max(s)\n        return sum(x for x in s if x>=0)","author":"Lokeshwar","submissionId":"1575081509"},[{"id":"220","similarity":0.8484848484848485,"totOverlap":28,"longestOverlap":14}]],"223":[{"id":"223","fileName":"1575081504.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        # return sum(list(set(nums)))\n        uniq = set()\n        for num in nums:\n            if num >= 0:\n                uniq.add(num)\n        if uniq:\n            return sum(list(uniq))\n        else:\n            return max(nums)","author":"moodyartist28","submissionId":"1575081504"},[{"id":"223","similarity":0.7045454545454546,"totOverlap":31,"longestOverlap":6}]],"267":[{"id":"267","fileName":"1575081800.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for n in nums:\n            if n >= 0:\n                s.add(n)\n\n        if len(s) == 0:\n            return max(nums)\n\n        return sum(s)\n        ","author":"Aditya_Kathpalia","submissionId":"1575081800"},[{"id":"30","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"270":[{"id":"270","fileName":"1575081831.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        d = set([i for i in nums if i > 0])\n        if len(d) == 0:\n            return max(nums)\n        return sum(d)","author":"nemokwy","submissionId":"1575081831"},[{"id":"2","similarity":1.0,"totOverlap":30,"longestOverlap":15}]],"292":[{"id":"292","fileName":"1575081981.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res = set([v for v in nums if v > 0])\n        if res:\n            return sum(res)\n        return max(nums)","author":"Persephone","submissionId":"1575081981"},[{"id":"143","similarity":0.8387096774193549,"totOverlap":26,"longestOverlap":10}]],"319":[{"id":"319","fileName":"1575082162.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res=set()\n        for num in nums:\n            if num>0:\n                res.add(num)\n        \n        return sum(res) if res else max(nums)\n        ","author":"peaky-blinder","submissionId":"1575082162"},[{"id":"205","similarity":1.0,"totOverlap":32,"longestOverlap":16}]],"332":[{"id":"332","fileName":"1575082231.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n\n        total = 0\n        s = set()\n        for num in nums:\n            if num >= 0 and num not in s:\n                total += num\n                s.add(num)\n\n        if len(s) > 0:\n            return total\n\n        return max(nums)\n            \n        ","author":"Joker17","submissionId":"1575082231"},[{"id":"774","similarity":0.7755102040816326,"totOverlap":38,"longestOverlap":16},{"id":"332","similarity":0.7906976744186046,"totOverlap":34,"longestOverlap":16},{"id":"100","similarity":0.7804878048780488,"totOverlap":32,"longestOverlap":16}]],"360":[{"id":"360","fileName":"1575082376.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for num in nums:\n            if num > 0:\n                s.add(num)\n        return sum(s) if len(s) != 0 else max(nums)","author":"Mina Refaat","submissionId":"1575082376"},[{"id":"138","similarity":1.0,"totOverlap":42,"longestOverlap":21}]],"379":[{"id":"379","fileName":"1575082532.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        A = [x for x in nums if x > 0]\n        if not A:\n            return max(nums)\n        return sum(set(A))","author":"Jack Chen","submissionId":"1575082532"},[{"id":"206","similarity":1.0,"totOverlap":32,"longestOverlap":16}]],"385":[{"id":"385","fileName":"1575082567.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        currSet = set()\n\n        for num in nums:\n            if num > 0:\n                currSet.add(num)\n\n        if len(currSet) > 0:\n            return sum(list(currSet))\n        else:\n            return max(nums)","author":"Srinivas Boga","submissionId":"1575082567"},[{"id":"121","similarity":0.8837209302325582,"totOverlap":38,"longestOverlap":18}]],"397":[{"id":"397","fileName":"1575082667.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        unique_pos_nums = set()\n        \n        for num in nums:\n            if num > 0: unique_pos_nums.add(num)\n        if not unique_pos_nums:\n            return max(nums)\n        return sum(unique_pos_nums)","author":"Arya veer Singh Chauhan","submissionId":"1575082667"},[{"id":"0","similarity":1.0,"totOverlap":30,"longestOverlap":15}]],"406":[{"id":"406","fileName":"1575082756.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for n in nums:\n            if n > 0:\n                s.add(n)\n        return sum(s) if s else max(nums)","author":"Flo","submissionId":"1575082756"},[{"id":"205","similarity":1.0,"totOverlap":32,"longestOverlap":16}]],"414":[{"id":"414","fileName":"1575082768.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        total = 0\n        for num in nums:\n            if num > 0 and num not in s:\n                total += num\n            s.add(num)\n        if total == 0:\n            return max(nums)\n        return total\n        ","author":"Adarsh Gorai","submissionId":"1575082768"},[{"id":"414","similarity":0.7441860465116279,"totOverlap":32,"longestOverlap":8}]],"417":[{"id":"417","fileName":"1575082830.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for n in nums:\n            if n>0:\n                s.add(n)\n        if len(s)==0:\n            return max(nums)\n        return sum(s)","author":"zanbin2046python","submissionId":"1575082830"},[{"id":"30","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"428":[{"id":"428","fileName":"1575082855.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        sel = set()\n        s = 0\n        for i in nums:\n            if i >= 0 and i not in sel:\n                s += i\n                sel.add(i)\n        if 0 not in sel and s == 0:\n            return max(nums)\n        return s","author":"Sai Sathvik Reddy Bontu","submissionId":"1575082855"},[{"id":"756","similarity":0.8095238095238095,"totOverlap":34,"longestOverlap":17},{"id":"819","similarity":0.8292682926829268,"totOverlap":34,"longestOverlap":10},{"id":"819","similarity":0.7804878048780488,"totOverlap":32,"longestOverlap":16},{"id":"428","similarity":0.7441860465116279,"totOverlap":32,"longestOverlap":8},{"id":"165","similarity":0.75,"totOverlap":30,"longestOverlap":9},{"id":"507","similarity":0.75,"totOverlap":30,"longestOverlap":9},{"id":"1323","similarity":0.7692307692307693,"totOverlap":30,"longestOverlap":15},{"id":"1532","similarity":0.7692307692307693,"totOverlap":30,"longestOverlap":9},{"id":"111","similarity":0.7027027027027027,"totOverlap":26,"longestOverlap":10}]],"434":[{"id":"434","fileName":"1575082893.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        st = set()\n        for num in nums:\n            if num > 0:\n                st.add(num)\n        if len(st) == 0:\n            return max(nums)\n        return sum(st)","author":"bluehue","submissionId":"1575082893"},[{"id":"30","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"469":[{"id":"469","fileName":"1575083085.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res = max(nums)\n        res1 = set([num for num in nums if num >= 0])\n        if res1:\n            return sum(res1)\n        return res\n","author":"Iskender Berdiev","submissionId":"1575083085"},[{"id":"469","similarity":0.7857142857142857,"totOverlap":22,"longestOverlap":10}]],"470":[{"id":"470","fileName":"1575083184.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        unique_nums = set()\n     \n        for num in nums:\n            if num > 0:\n                unique_nums.add(num)\n   \n        return sum(unique_nums) if unique_nums else max(nums)","author":"Ivan Vasilenko","submissionId":"1575083184"},[{"id":"205","similarity":1.0,"totOverlap":32,"longestOverlap":16}]],"487":[{"id":"487","fileName":"1575083384.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        d = set()\n        for i in nums:\n            if i > 0:\n                d.add(i)\n        if d:\n            return sum(d)\n        return max(nums)","author":"Carisa-Li","submissionId":"1575083384"},[{"id":"1078","similarity":1.0,"totOverlap":34,"longestOverlap":17},{"id":"30","similarity":0.8108108108108109,"totOverlap":30,"longestOverlap":10}]],"507":[{"id":"507","fileName":"1575083508.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n        added = set()\n        ans = 0\n        for num in nums:\n            if num > 0 and num not in added:\n                ans += num\n                added.add(num)\n        return ans","author":"tuanbi97","submissionId":"1575083508"},[{"id":"165","similarity":0.75,"totOverlap":30,"longestOverlap":9}]],"530":[{"id":"530","fileName":"1575083622.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        unq=set([x for x in nums if x>0])\n        if len(unq)==0:\n            unq.add(max(nums))\n        return sum(list(unq))\n    ","author":"Akshay","submissionId":"1575083622"},[{"id":"2","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":12}]],"542":[{"id":"542","fileName":"1575083705.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res = set()\n\n        for num in nums:\n            if num >= 0:\n                res.add(num)\n\n        if not res:\n            res = {max(nums)}\n\n        return sum(res)","author":"Akshat Joshi","submissionId":"1575083705"},[{"id":"30","similarity":0.7692307692307693,"totOverlap":30,"longestOverlap":10}]],"565":[{"id":"565","fileName":"1575083843.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n        s = set()\n        for n in nums:\n            if n >= 0:\n                s.add(n)\n        return sum([x for x in s])\n        ","author":"charlieterle","submissionId":"1575083843"},[{"id":"565","similarity":0.8717948717948718,"totOverlap":34,"longestOverlap":17}]],"605":[{"id":"605","fileName":"1575084064.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0: return max(nums)\n\n        elements = set( )\n        for num in nums:\n            if num > 0: elements.add(num)\n        return sum(elements)","author":"Benjamin Banaga","submissionId":"1575084064"},[{"id":"111","similarity":1.0,"totOverlap":36,"longestOverlap":18}]],"617":[{"id":"617","fileName":"1575084141.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n2 = [x for x in nums if x > 0]\n        if not n2:\n            return max(nums)\n        \n        return sum(list(set(n2)))","author":"padth","submissionId":"1575084141"},[{"id":"206","similarity":0.9411764705882353,"totOverlap":32,"longestOverlap":16}]],"619":[{"id":"619","fileName":"1575084170.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set([num for num in nums if num > 0])\n        return sum(s) if s else max(nums)","author":"bambi","submissionId":"1575084170"},[{"id":"72","similarity":0.9230769230769231,"totOverlap":24,"longestOverlap":8}]],"624":[{"id":"624","fileName":"1575084198.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        m = max(nums)\n        s = sum([i for i in nums if i >= 0])\n        return m if m < 0 else s","author":"Gaurav Chaurasia","submissionId":"1575084198"},[{"id":"832","similarity":0.8125,"totOverlap":26,"longestOverlap":13},{"id":"292","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":7}]],"628":[{"id":"628","fileName":"1575084248.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s=set()\n        for i in nums:\n            if i>0:\n                s.add(i)\n        if len(s)==0:\n            s.add(max(nums))\n        return sum(list(s))","author":"justDummy","submissionId":"1575084248"},[{"id":"22","similarity":0.7727272727272727,"totOverlap":34,"longestOverlap":16}]],"694":[{"id":"694","fileName":"1575084603.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        newarray = []\n\n        nums = set(nums)\n\n        for v in nums:\n            if v >= 0:\n                newarray.append(v)\n\n        if newarray:\n            return sum(newarray)\n        else:\n            return max(nums)\n\n\n            \n        ","author":"bronzekiller2017","submissionId":"1575084603"},[{"id":"74","similarity":0.8125,"totOverlap":26,"longestOverlap":6}]],"725":[{"id":"725","fileName":"1575084829.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        vec = set(nums)\n        nums = list(vec)\n        temp = [i for i in nums if i>0]\n        if not temp:\n            return max(nums)\n        else :\n            return sum(temp)\n        \n        ","author":"Chirag Gupta","submissionId":"1575084829"},[{"id":"82","similarity":0.8387096774193549,"totOverlap":26,"longestOverlap":13}]],"756":[{"id":"756","fileName":"1575085036.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        res = 0\n        for val in nums:\n            if val > 0 and val not in seen:\n                res += val\n                seen.add(val)\n        if res == 0:\n            return max(nums)\n        return res\n        ","author":"YC W","submissionId":"1575085036"},[{"id":"428","similarity":0.8095238095238095,"totOverlap":34,"longestOverlap":17}]],"767":[{"id":"767","fileName":"1575085169.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        my_set = set()\n        \n        for n in nums:\n            if n in my_set or n<0:\n                continue\n            my_set.add(n)\n        \n        if len(my_set)==0:\n            return max(nums)\n        \n        return sum(my_set)","author":"Rachit Yagnik","submissionId":"1575085169"},[{"id":"24","similarity":0.8888888888888888,"totOverlap":32,"longestOverlap":9}]],"774":[{"id":"774","fileName":"1575085223.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res=0\n        s=set()\n        \n        for n in nums:\n            if n>0 and n not in s:\n                res+= n\n                s.add(n)\n        if len(s)>0:\n            return res\n        if len(nums)==1:\n            return nums[0]\n        else:\n            return max(nums)\n            ","author":"CSris","submissionId":"1575085223"},[{"id":"332","similarity":0.7755102040816326,"totOverlap":38,"longestOverlap":16}]],"786":[{"id":"786","fileName":"1575085306.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums)<=0:\n            return max(nums)\n        s = set()\n        for each in nums:\n            if each>0:\n                s.add(each)\n        return sum(s)","author":"HappyBoy168","submissionId":"1575085306"},[{"id":"111","similarity":1.0,"totOverlap":36,"longestOverlap":18}]],"791":[{"id":"791","fileName":"1575085345.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for i in nums:\n            if i >= 0:\n                s.add(i)\n        if not s:\n            return max(nums)\n        return sum(s)","author":"Terran21","submissionId":"1575085345"},[{"id":"0","similarity":1.0,"totOverlap":30,"longestOverlap":15}]],"793":[{"id":"793","fileName":"1575085356.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set([x for x in nums if x >0])\n        return sum(s) if len(s) > 0 else max(nums)","author":"StasShkolnyi","submissionId":"1575085356"},[{"id":"72","similarity":0.8571428571428571,"totOverlap":24,"longestOverlap":12}]],"819":[{"id":"819","fileName":"1575085560.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        cnt = 0\n        m = set()\n        for n in nums:\n            if n > 0 and n not in m:\n                cnt += n\n            m.add(n)\n        if cnt == 0:\n            return max(nums)\n        return cnt\n        ","author":"slowoldman","submissionId":"1575085560"},[{"id":"1065","similarity":1.0,"totOverlap":40,"longestOverlap":20},{"id":"756","similarity":0.8292682926829268,"totOverlap":34,"longestOverlap":10}]],"832":[{"id":"832","fileName":"1575085626.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        x = set(nums)\n        ret = sum([a for a in x if a>0])\n        if ret:\n            return ret\n        if 0 in x:\n            return 0\n        return max(x)","author":"Andy Jiang","submissionId":"1575085626"},[{"id":"624","similarity":0.8125,"totOverlap":26,"longestOverlap":13}]],"860":[{"id":"860","fileName":"1575085822.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        positive = [a for a in set(nums) if a > 0]\n        if not positive: return max(nums)\n        return sum(positive)\n","author":"echeresh","submissionId":"1575085822"},[{"id":"206","similarity":0.7333333333333333,"totOverlap":22,"longestOverlap":9}]],"897":[{"id":"897","fileName":"1575086115.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n        p = []\n        for i in s:\n            if i > 0:\n                p.append(i)\n        return sum(p) if p else max(s)","author":"aespa fan","submissionId":"1575086115"},[{"id":"205","similarity":0.7878787878787878,"totOverlap":26,"longestOverlap":7}]],"968":[{"id":"968","fileName":"1575086659.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n        \n        vals = set()\n        for num in nums:\n            if num > 0:\n                vals.add(num)\n        \n        return sum(vals)\n        ","author":"SMH","submissionId":"1575086659"},[{"id":"111","similarity":1.0,"totOverlap":36,"longestOverlap":18}]],"969":[{"id":"969","fileName":"1575086661.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        c = Counter(nums)\n\n        nums = list(c.keys())\n\n        p = [ i for i in nums if i >= 0]\n\n        print(p)\n\n        if len(p)== 0:\n            return max(nums)\n        else:\n            return sum(p)\n        ","author":"Eizy","submissionId":"1575086661"},[{"id":"82","similarity":0.7058823529411765,"totOverlap":24,"longestOverlap":9}]],"1009":[{"id":"1009","fileName":"1575086955.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = [x for x in nums if x > 0]\n        if not n:\n            return max(nums)\n        return sum(set(n))","author":"henrysux","submissionId":"1575086955"},[{"id":"206","similarity":1.0,"totOverlap":32,"longestOverlap":16}]],"1019":[{"id":"1019","fileName":"1575087077.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = 0\n        added = set()\n        for num in nums:\n            if num > 0 and num not in added:\n                ans += num\n                added.add(num)\n        if len(added) == 0:\n            ans = max(nums)\n        return ans","author":"Manki Min","submissionId":"1575087077"},[{"id":"1740","similarity":0.851063829787234,"totOverlap":40,"longestOverlap":16},{"id":"1740","similarity":0.8444444444444444,"totOverlap":38,"longestOverlap":12},{"id":"1542","similarity":0.7727272727272727,"totOverlap":34,"longestOverlap":17},{"id":"1323","similarity":0.7692307692307693,"totOverlap":30,"longestOverlap":9}]],"1063":[{"id":"1063","fileName":"1575087475.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        # return max(max(nums), sum(set([num for num in nums if num > 0])))\n        s = set([num for num in nums if num > 0])\n        return sum(s) if s else max(nums)","author":"Alexey Andronov","submissionId":"1575087475"},[{"id":"619","similarity":0.7692307692307693,"totOverlap":20,"longestOverlap":6}]],"1065":[{"id":"1065","fileName":"1575087460.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res = 0\n        visited = set()\n\n        for num in nums:\n            if num > 0 and num not in visited:\n                res += num\n                visited.add(num)\n        \n        if res == 0:\n            return max(nums)\n\n        return res\n        ","author":"Lrdinsu","submissionId":"1575087460"},[{"id":"819","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"1078":[{"id":"1078","fileName":"1575087602.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        h=set()\n        for ele in nums:\n            if ele>0:\n                h.add(ele)\n        if h:\n            return sum(h)\n        return max(nums)\n        ","author":"Bay Harbour Butcher","submissionId":"1575087602"},[{"id":"487","similarity":1.0,"totOverlap":34,"longestOverlap":17}]],"1166":[{"id":"1166","fileName":"1575088630.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        target = set()\n        for x in nums:\n            if x >= 0:\n                target.add(x)\n        if not target:\n            return max(nums)\n        return sum(target)","author":"Kamanashis Roy Shuva","submissionId":"1575088630"},[{"id":"0","similarity":1.0,"totOverlap":30,"longestOverlap":15}]],"1231":[{"id":"1231","fileName":"1575089387.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for n in nums:\n            if n >= 0:\n                s.add(n)\n        result = sum(s)\n        if len(s) > 0:\n            return result\n        return max(nums)","author":"Kai Yang","submissionId":"1575089387"},[{"id":"1553","similarity":1.0,"totOverlap":33,"longestOverlap":16},{"id":"24","similarity":0.7714285714285715,"totOverlap":27,"longestOverlap":12}]],"1243":[{"id":"1243","fileName":"611225130.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        for x in nums:\n            if x > 0:\n                s.add(x)\n        if len(s) == 0:\n            return max(nums)\n        return sum(s)","author":"Shaaou","submissionId":"611225130"},[{"id":"30","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"1256":[{"id":"1256","fileName":"611225300.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n        s = set()\n        for x in nums:\n            if x > 0:\n                s.add(x)\n        return sum(s)","author":"DBaker","submissionId":"611225300"},[{"id":"111","similarity":1.0,"totOverlap":36,"longestOverlap":18}]],"1260":[{"id":"1260","fileName":"611225339.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos_nums = set()\n        for num in nums:\n            if num > 0:\n                pos_nums.add(num)\n        if pos_nums:\n            return sum(pos_nums)\n        else:\n            return max(nums)","author":"wangsc","submissionId":"611225339"},[{"id":"121","similarity":0.7894736842105263,"totOverlap":30,"longestOverlap":10}]],"1276":[{"id":"1276","fileName":"611225525.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(num < 0 for num in nums):\n            return max(nums)\n        return sum(num for num in set(nums) if num >= 0)\n        ","author":"王小豆","submissionId":"611225525"},[{"id":"125","similarity":1.0,"totOverlap":34,"longestOverlap":17}]],"1277":[{"id":"1277","fileName":"611225522.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        st = set()\n        for a in nums:\n            if a > 0:\n                st.add(a)\n        if len(st)==0:\n            return max(nums)\n        return sum(st)\n        ","author":"Tao Zhou","submissionId":"611225522"},[{"id":"30","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"1282":[{"id":"1282","fileName":"611225543.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        st = set()\n        for a in nums:\n            if a >= 0:\n                st.add(a)\n        if len(st) == 0:\n            return max(nums)\n        return sum(st)\n        ","author":"Doudle","submissionId":"611225543"},[{"id":"30","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"1294":[{"id":"1294","fileName":"611225623.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        maxval = max(nums)\n        \n        nums = [x for x in nums if x >= 0]\n        if not nums:\n            return maxval\n\n        nums = set(nums)\n        return sum(nums)\n        ","author":"涂汇康","submissionId":"611225623"},[{"id":"1294","similarity":0.7428571428571429,"totOverlap":26,"longestOverlap":7}]],"1314":[{"id":"1314","fileName":"611225753.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(x < 0 for x in nums):\n            return max(nums)\n\n        a = set(nums)\n        a = [x for x in a if x >= 0]\n        return sum(a)","author":"ABCoder","submissionId":"611225753"},[{"id":"38","similarity":0.717948717948718,"totOverlap":28,"longestOverlap":11}]],"1323":[{"id":"1323","fileName":"611225795.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        vis = set()\n        ans = 0\n        for i in nums:\n            if i>0 and i not in vis:\n                ans+=i\n                vis.add(i)\n        if not vis:\n            return max(nums)\n        return ans\n        ","author":"又不会写了","submissionId":"611225795"},[{"id":"1858","similarity":1.0,"totOverlap":36,"longestOverlap":18},{"id":"428","similarity":0.7692307692307693,"totOverlap":30,"longestOverlap":15}]],"1338":[{"id":"1338","fileName":"611225908.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        a=set([x for x in nums if x>=0])\n        return sum(a) if a else max(nums)\n        ","author":"龙战于野-其血玄黄","submissionId":"611225908"},[{"id":"72","similarity":1.0,"totOverlap":26,"longestOverlap":13}]],"1366":[{"id":"1366","fileName":"611226089.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        flag = False\n        for x in nums:\n            if x >= 0:\n                flag = True\n                break\n        if not flag:\n            return max(nums)\n        arr = [x for x in nums if x >= 0]\n        return sum(set(arr))\n","author":"Practical Edisony6X","submissionId":"611226089"},[{"id":"38","similarity":0.7142857142857143,"totOverlap":30,"longestOverlap":8}]],"1448":[{"id":"1448","fileName":"611226589.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res = max(nums)\n        nums = [i for i in nums if i >= 0]\n        if not nums:\n            return res\n        return sum(set(nums))\n        ","author":"Misaka Mikoto","submissionId":"611226589"},[{"id":"725","similarity":0.7575757575757576,"totOverlap":25,"longestOverlap":6}]],"1454":[{"id":"1454","fileName":"611226620.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        dic = set()\n        if max(nums) <= 0:\n            return max(nums)\n        for v in nums:\n            if v > 0:\n                dic.add(v)\n        return sum(dic)","author":"shimmery_firefly","submissionId":"611226620"},[{"id":"30","similarity":0.7777777777777778,"totOverlap":28,"longestOverlap":8}]],"1488":[{"id":"1488","fileName":"611226800.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        new_nums = [num for num in nums if num > 0]\n        if not new_nums:\n            return max(nums)\n        else:\n            return sum(set(new_nums))\n        ","author":"fanxing","submissionId":"611226800"},[{"id":"160","similarity":0.896551724137931,"totOverlap":26,"longestOverlap":13}]],"1509":[{"id":"1509","fileName":"611227004.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = 0\n        s= set()\n        for i in nums:\n            if i in s:\n              continue  \n            elif i>0:\n                s.add(i)\n                ans += i\n        if ans==0:\n            return max(nums)\n        else:\n            return ans\n        ","author":"(￣▼￣)","submissionId":"611227004"},[{"id":"0","similarity":0.7096774193548387,"totOverlap":22,"longestOverlap":6}]],"1532":[{"id":"1532","fileName":"611227182.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        st=set()\n        ans=0\n        for num in nums:\n            if num>0 and num not in st:\n                ans+=num\n                st.add(num)\n        num=max(nums)\n        return  num if num<0 else ans\n        ","author":"锦衣夜行0425","submissionId":"611227182"},[{"id":"1532","similarity":0.7727272727272727,"totOverlap":34,"longestOverlap":17}]],"1542":[{"id":"1542","fileName":"611227255.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s=set()\n        ans=0 \n        for x in nums:\n            if x>0 and x not in s:\n              ans+=x\n              s.add(x)\n        if ans==0:\n            ans=max(nums)\n        return ans","author":"月耑","submissionId":"611227255"},[{"id":"1542","similarity":0.8444444444444444,"totOverlap":38,"longestOverlap":12}]],"1553":[{"id":"1553","fileName":"611227340.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        dedup_nums = set()\n        for num in nums:\n            if num > 0:\n                dedup_nums.add(num)\n\n        res = sum(dedup_nums) if len(dedup_nums) > 0 else max(nums)\n\n        return res","author":"rran2023","submissionId":"611227340"},[{"id":"1231","similarity":1.0,"totOverlap":33,"longestOverlap":16}]],"1555":[{"id":"1555","fileName":"611227362.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        x = set(nums)\n        if all(i<0 for i in x):\n            return max(x)\n        x = [i for i in x if i > 0]\n        return sum(x)","author":"user4777","submissionId":"611227362"},[{"id":"38","similarity":0.75,"totOverlap":30,"longestOverlap":8}]],"1695":[{"id":"1695","fileName":"611229209.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums)<=0:\n            return max(nums)\n        se=set()\n        for e in nums:\n            if e>0:\n                se.add(e)\n        return sum(list(se))","author":"...","submissionId":"611229209"},[{"id":"185","similarity":0.85,"totOverlap":34,"longestOverlap":9}]],"1713":[{"id":"1713","fileName":"611229738.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        aux = set(nums)\n        maxv = max(nums)\n        pos = sum(x for x in aux if x > 0)\n        if pos == 0:\n            return maxv\n        return pos\n","author":"耀民Allen","submissionId":"611229738"},[{"id":"82","similarity":0.7333333333333333,"totOverlap":22,"longestOverlap":10}]],"1740":[{"id":"1740","fileName":"611230282.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res = 0\n        s = set()\n        for num in nums:\n            if num >0 and num not in s:\n                res+=num\n                s.add(num)\n\n        if res ==0:\n            res = max(nums)\n\n        return res","author":"mottc","submissionId":"611230282"},[{"id":"1019","similarity":0.851063829787234,"totOverlap":40,"longestOverlap":16}]],"1760":[{"id":"1760","fileName":"611231691.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = set(nums)\n        if all(num < 0 for num in nums):\n            return max(nums)\n        return sum(num for num in nums if num >= 0)","author":"Rong","submissionId":"611231691"},[{"id":"1864","similarity":0.9090909090909091,"totOverlap":30,"longestOverlap":14},{"id":"1760","similarity":0.8484848484848485,"totOverlap":28,"longestOverlap":14},{"id":"1760","similarity":0.7647058823529411,"totOverlap":26,"longestOverlap":7},{"id":"1555","similarity":0.7428571428571429,"totOverlap":26,"longestOverlap":13},{"id":"1314","similarity":0.7428571428571429,"totOverlap":26,"longestOverlap":7},{"id":"1294","similarity":0.7575757575757576,"totOverlap":25,"longestOverlap":8},{"id":"1448","similarity":0.7575757575757576,"totOverlap":25,"longestOverlap":6},{"id":"969","similarity":0.7058823529411765,"totOverlap":24,"longestOverlap":9},{"id":"125","similarity":0.7058823529411765,"totOverlap":24,"longestOverlap":12},{"id":"1448","similarity":0.7272727272727273,"totOverlap":24,"longestOverlap":7},{"id":"832","similarity":0.7666666666666667,"totOverlap":23,"longestOverlap":8},{"id":"1713","similarity":0.7333333333333333,"totOverlap":22,"longestOverlap":10},{"id":"180","similarity":0.7096774193548387,"totOverlap":22,"longestOverlap":4}]],"1829":[{"id":"1829","fileName":"611240480.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0:\n            return max(nums)\n        nums = [max(x, 0) for x in nums]\n        \n        return sum(set(nums))","author":"Charles_H","submissionId":"611240480"},[{"id":"1695","similarity":0.7428571428571429,"totOverlap":26,"longestOverlap":10}]],"1858":[{"id":"1858","fileName":"611247985.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        vis = set()\n        ans = 0\n        for i in nums:\n            if i>0 and i not in vis:\n                ans+=i\n                vis.add(i)\n        if not vis:\n            return max(nums)\n        return ans\n        ","author":"只会暴力","submissionId":"611247985"},[{"id":"1323","similarity":1.0,"totOverlap":36,"longestOverlap":18}]],"1864":[{"id":"1864","fileName":"611254671.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        f = set(nums)\n        if all(num < 0 for num in f):\n            return max(nums)\n        return sum(num for num in f if num > 0)","author":"老麻子8号","submissionId":"611254671"},[{"id":"1760","similarity":0.9090909090909091,"totOverlap":30,"longestOverlap":14}]],"1883":[{"id":"1883","fileName":"611271312.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        mi, mx = min(nums), max(nums)\n        if mx <= 0:\n            return mx\n        ans = set()\n        for x in nums:\n            if x > 0:\n                ans.add(x)\n        return sum(ans)","author":"星开祈灵","submissionId":"611271312"},[{"id":"30","similarity":0.7142857142857143,"totOverlap":30,"longestOverlap":6}]]},{"32":[{"id":"32","fileName":"1575079734.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        mx = max(nums)\n        if mx <= 0:\n            return mx\n        d = set()\n        for x in nums:\n            if x > 0:\n                d.add(x)\n        return sum(d)","author":"Thinkingface","submissionId":"1575079734"},[]]},{"33":[{"id":"33","fileName":"1575079755.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = set(nums)\n        nums2 = set()\n        nums2.add(max(nums))\n        for i in nums:\n            if (i >= 0):\n                nums2.add(i)\n        return sum(nums2)","author":"Evan","submissionId":"1575079755"},[]]},{"37":[{"id":"37","fileName":"1575079814.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        if(ranges::max(a) < 0) return ranges::max(a);\n        map<int,int> mp;\n        for(int& x: a) {\n            if(x >= 0) mp[x]++;\n        }\n        int ret = 0;\n        for(auto&[k,v]: mp) {\n            ret += k;\n        }\n        return ret;\n    }\n};","author":"raararaara","submissionId":"1575079814"},[]]},{"39":[{"id":"39","fileName":"1575079819.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = set(nums)\n        res = max(nums)\n        for num in nums:\n            if num > 0 and num != max(nums):\n                res += num\n\n        return res\n        ","author":"kay118","submissionId":"1575079819"},[]]},{"40":[{"id":"40","fileName":"1575079898.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        d = dict()\n        for i in nums:\n            if i > 0:\n                d[i] = 1\n        if not d:\n            return max(nums)\n        else:\n            return sum(list(d.keys()))\n        ","author":"dennis458","submissionId":"1575079898"},[]]},{"41":[{"id":"41","fileName":"1575079862.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = 0\n        pos = 0\n        s = set()\n        for i in nums:\n            if i>=0 and i not in s:\n                ans+=i\n                pos+=1\n                s.add(i)\n        if pos==0:\n            return max(nums)\n        return ans","author":"Shivam Kumar","submissionId":"1575079862"},[]]},{"43":[{"id":"43","fileName":"1575079864.txt","sourceCode":"class Solution:\n    def maxSum(self, a: List[int]) -> int:\n        n = len(a)\n        f = 0\n        d = defaultdict(int)\n        ans = 0\n        for v in a:\n            if v >= 0:\n                f = 1\n                if d[v] == 0:\n                    d[v] = 1\n                    ans += v\n        if not f:\n            ans = max(a)\n        return ans","author":"Manan Rathod","submissionId":"1575079864"},[]]},{"44":[{"id":"44","fileName":"1575079806.txt","sourceCode":"#define REP(i,n) for(int i=0;i<n;i++)\n#define TR(i,x) for(__typeof(x.begin()) i=x.begin();i!=x.end();i++)\n#define ALL(x) x.begin(),x.end()\n#define SORT(x) sort(ALL(x))\n#define CLEAR(x) memset(x,0,sizeof(x))\n#define FILL(x,c) memset(x,c,sizeof(x))\n \nusing namespace std;\n \n#define PB push_back\n#define MP make_pair\n \ntypedef map<int,int> MII;\ntypedef map<string,int> MSI;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\ntypedef vector<long double> VD;\ntypedef pair<int,int> PII;\ntypedef long long int64;\ntypedef long long LL;\ntypedef unsigned int UI;\ntypedef long double LD;\ntypedef unsigned long long ULL;\n \ntemplate <typename A, typename B>\nostream& operator <<(ostream& out, const pair<A, B>& a) {\n  out << \"(\" << a.first << \",\" << a.second << \")\";\n  return out;\n}\ntemplate <typename T, size_t N>\nostream& operator <<(ostream& out, const array<T, N>& a) {\n  out << \"[\"; bool first = true;\n  for (auto& v : a) { out << (first ? \"\" : \", \"); out << v; first = 0;} out << \"]\";\n  return out;\n}\ntemplate <typename T>\nostream& operator <<(ostream& out, const vector<T>& a) {\n  out << \"[\"; bool first = true;\n  for (auto v : a) { out << (first ? \"\" : \", \"); out << v; first = 0;} out << \"]\";\n  return out;\n}\ntemplate <typename T, class Cmp>\nostream& operator <<(ostream& out, const set<T, Cmp>* a) {\n  out << \"{\"; bool first = true;\n  for (auto& v : *a) { out << (first ? \"\" : \", \"); out << v; first = 0;} out << \"}\";\n  return out;\n}\ntemplate <typename T, class Cmp>\nostream& operator <<(ostream& out, const set<T, Cmp>& a) {\n  out << \"{\"; bool first = true;\n  for (auto& v : a) { out << (first ? \"\" : \", \"); out << v; first = 0;} out << \"}\";\n  return out;\n}\ntemplate <typename T, class Cmp>\nostream& operator <<(ostream& out, const multiset<T, Cmp>& a) {\n  out << \"{\"; bool first = true;\n  for (auto& v : a) { out << (first ? \"\" : \", \"); out << v; first = 0;} out << \"}\";\n  return out;\n}\ntemplate <typename U, typename T, class Cmp>\nostream& operator <<(ostream& out, const map<U, T, Cmp>& a) {\n  out << \"{\"; bool first = true;\n  for (auto& p : a) { out << (first ? \"\" : \", \"); out << p.first << \":\" << p.second; first = 0;} out << \"}\";\n  return out;\n}\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ret = 0;\n        \n        sort(nums.begin(), nums.end());\n        if (nums.back() <= 0) {\n            return nums.back();\n        }\n        \n        int ans = 0;\n        for (int i = 0; i < nums.size(); ++i) {\n            if (nums[i] > 0 && (i == 0 || nums[i] != nums[i - 1])) {\n                ans += nums[i];\n            }\n        }\n        return ans;\n    }\n};","author":"Yang Xiao","submissionId":"1575079806"},[]]},{"45":[{"id":"45","fileName":"1575079908.txt","sourceCode":"import java.util.HashSet;\nimport java.util.Set;\n\nclass Solution {\n    public int maxSum(int[] nums) {\n        // Use a set to record the distinct positive numbers that contribute to the sum.\n        Set<Integer> positiveSet = new HashSet<>();\n        int sum = 0;\n        boolean hasPositive = false;\n        \n        // Iterate over the array and add positive numbers (only once)\n        for (int num : nums) {\n            if (num > 0 && !positiveSet.contains(num)) {\n                sum += num;\n                positiveSet.add(num);\n                hasPositive = true;\n            }\n        }\n        \n        // If any positive numbers were found, the best subarray is their union.\n        if (hasPositive) {\n            return sum;\n        }\n        \n        // If no positive numbers, check if zero exists.\n        // Zero doesn't harm the sum, so if it's available, it's the best option.\n        for (int num : nums) {\n            if (num == 0) {\n                return 0;\n            }\n        }\n        \n        // If all numbers are negative, we choose the maximum (least negative) element.\n        int maxNum = nums[0];\n        for (int num : nums) {\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n        return maxNum;\n    }\n}\n","author":"Hari Preyadharshan S P","submissionId":"1575079908"},[]]},{"46":[{"id":"46","fileName":"1575079911.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>mp(begin(nums), end(nums));\n        if(*mp.rbegin()<0) return *mp.rbegin();\n        int ret=0;\n        for(int d: mp)ret += max(0,d);\n        return ret;\n    }\n};","author":"Ayush Saluja","submissionId":"1575079911"},[]]},{"47":[{"id":"47","fileName":"1575079931.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(int &no : nums)st.insert(no);\n        if(*st.rbegin() <= 0){\n            return (*st.rbegin());\n        }\n        else{\n            int sum = 0;\n            for(int no : st)if(no > 0)sum += no;\n            return sum;\n        }\n    }\n};","author":"Mayank Nichlani","submissionId":"1575079931"},[]]},{"49":[{"id":"49","fileName":"1575079996.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>all(nums.begin(), nums.end());\n        int maxx = *all.rbegin();\n        int ret = maxx;\n        for(auto& it:all){\n            if(it == maxx)break;\n            ret+=max(0,it);\n        }\n        return ret;\n    }\n};","author":"tonyli00000","submissionId":"1575079996"},[]]},{"52":[{"id":"52","fileName":"1575079989.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s=sorted(set(nums))\n        if s[-1]<0:\n            return s[-1]\n        return sum(x for x in s if x>0)","author":"Sandeep P","submissionId":"1575079989"},[{"id":"666","similarity":1.0,"totOverlap":36,"longestOverlap":18},{"id":"1250","similarity":1.0,"totOverlap":36,"longestOverlap":18},{"id":"1344","similarity":0.918918918918919,"totOverlap":34,"longestOverlap":14},{"id":"154","similarity":0.75,"totOverlap":30,"longestOverlap":11}]],"154":[{"id":"154","fileName":"1575080963.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        a = sorted(set(nums))\n        if a[-1] < 0:\n            return a[-1]\n        else:\n            return sum(x for x in a if x >= 0)\n","author":"Behrooz Sepehry","submissionId":"1575080963"},[{"id":"52","similarity":0.75,"totOverlap":30,"longestOverlap":11}]],"666":[{"id":"666","fileName":"1575084411.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = sorted(set(nums))\n        if nums[-1]<0:\n            return nums[-1]\n        return sum(n for n in nums if n>=0)","author":"yinboshi13","submissionId":"1575084411"},[{"id":"52","similarity":1.0,"totOverlap":36,"longestOverlap":18}]],"1250":[{"id":"1250","fileName":"611225264.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        a = sorted(set(nums))\n        if a[-1] <= 0:\n            return a[-1]\n        return sum(x for x in a if x > 0)","author":"5cm/s 🌸","submissionId":"611225264"},[{"id":"52","similarity":1.0,"totOverlap":36,"longestOverlap":18}]],"1344":[{"id":"1344","fileName":"611225947.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = sorted(set(nums))\n        if s[-1] <= 0: return s[-1]\n        return sum([a for a in s if a > 0])","author":"silvertint10","submissionId":"611225947"},[{"id":"52","similarity":0.918918918918919,"totOverlap":34,"longestOverlap":14}]]},{"55":[{"id":"55","fileName":"1575080009.txt","sourceCode":"from typing import List\n\nclass Solution:\n    def maxSum(self, ns: List[int]) -> int:\n        s = {x for x in ns if x > 0}\n        return sum(s) if s else (0 if 0 in ns else max(ns))","author":"All","submissionId":"1575080009"},[]]},{"58":[{"id":"58","fileName":"1575080096.txt","sourceCode":"class Solution(object):\n    def maxSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        m = {}\n        result = 0\n        for n in nums:\n            if n in m:\n                continue\n            if n <= 0:\n                continue\n            result += n\n            m[n] = 1\n\n        if result == 0:\n            return max(nums)\n        return result","author":"jimsshom","submissionId":"1575080096"},[]]},{"59":[{"id":"59","fileName":"1575080044.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        a=max(nums)\n        flag=True\n        lol=set()\n        for i in nums:\n            if i>=0:\n                lol.add(i)\n        \n        if len(lol)>=1:\n            return sum(lol)\n        else:\n            return a","author":"vek0r","submissionId":"1575080044"},[]]},{"61":[{"id":"61","fileName":"1575080022.txt","sourceCode":"#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef priority_queue<int> pq;\ntypedef priority_queue<int, vector<int>, greater<int>> pqg;\n#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL);\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define sz(x) (int)(x).size()\n#define rep(i, a, b) for(int i = a; i < b; ++i)\n#define repr(i, a, b) for(int i = a; i >= b; --i)\n#define deb(x) cout << #x << \" = \" << x << endl;\n#define INF 1e9\n#define LINF 1e18\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans =0;\n        int ok =0;\n        set<int> s;\n        for(auto x: nums){\n            if(x>=0){\n                ok=1;\n                s.insert(x);\n            }\n        }\n        if(!ok) return *max_element(all(nums));\n        for(auto x :s) ans+=x;\n        return ans;\n    }\n};","author":"miku","submissionId":"1575080022"},[]]},{"62":[{"id":"62","fileName":"1575080110.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        nums.sort()\n        res = 0\n        prev = -math.inf\n\n        if nums[-1] <= 0:\n            return nums[-1]\n        \n        for i in nums:\n            if i == prev or i < 0:\n                continue\n\n            prev = i\n            res += i\n\n        return res ","author":"Manyu","submissionId":"1575080110"},[]]},{"64":[{"id":"64","fileName":"1575080133.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return nums[0]\n        if max(nums) <= 0:\n            return max(nums)\n            \n        s = list(set(nums))\n        sm = sum([i for i in s if i > 0])\n        return sm","author":"Melonlord25","submissionId":"1575080133"},[]]},{"68":[{"id":"68","fileName":"1575080102.txt","sourceCode":"#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define fi first\n#define se second\n#define pb push_back\n//#define int long long\n#define sz(a) (int)a.size()\n#define all(a) begin(a),end(a)\n#define uid(a, b) uniform_int_distribution<int>(a, b)(rng)\n\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nusing ll = long long;\nusing vi = vector<int>;\nusing ar2 = array<int,2>;\nusing ar3 = array<int,3>;\n\nconst int mxN = (int)2e5+10;\nconst int INF = (int)2e9;\nconst ll LINF = (ll)2e18;\nconst int MOD = (int)1e9+7;\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> S; S.clear();\n        int ans = 0, ok = 0;\n        for(auto u : nums) S.insert(u);\n        for(auto u : S)if(u>=0)ans+=u,ok=1;\n        if(!ok) ans=*prev(end(S));\n        return ans;\n    }\n};","author":"Daniel Emeka-Ilozor","submissionId":"1575080102"},[]]},{"69":[{"id":"69","fileName":"1575080149.txt","sourceCode":"use std::collections::HashSet;\n\nimpl Solution {\n    pub fn max_sum(nums: Vec<i32>) -> i32 {\n        let mut s = HashSet::new();\n        let mut sum = 0;\n        for &n in &nums {\n            if n > 0 && s.insert(n) {\n                sum += n;\n            }\n        }\n        if sum > 0 {\n            sum\n        } else {\n            *nums.iter().max().unwrap()\n        }\n    }\n}","author":"parallel_stream","submissionId":"1575080149"},[]]},{"75":[{"id":"75","fileName":"1575080248.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = a.size(), i, res = 0, zd = -1000000000;\n        bool fu = true;\n        for (auto x : a){\n            zd = max(zd, x);\n            if (x >= 0){\n                fu = false;\n                break;\n            }\n        }\n        \n        if (fu) return zd;\n        unordered_set<int> S;\n        for (auto x : a)\n            if (x >= 0){\n                if (!S.count(x)){\n                    S.insert(x);\n                    res += x;\n                }\n            }\n        \n        return res;\n    }\n};","author":"Ma Lin","submissionId":"1575080248"},[]]},{"77":[{"id":"77","fileName":"1575080289.txt","sourceCode":"/*\n\tJAI JAGANNATH!\n*/\n//@Author : zanj0\n\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define ff              first\n#define ss              second\n#define pb              push_back\n#define MOD             1000000007\n#define inf             1e18\n\ntypedef long long int lli;\n\n\nclass Solution {\npublic:\n\tint maxSum(vector<int>& nums) {\n\t\tset<int> done;\n\t\tint ret = 0;\n\t\tbool ok = false;\n\t\tfor (auto& it : nums) {\n\t\t\tif (it >= 0) {\n\t\t\t\tif (!done.count(it)) {\n\t\t\t\t\tok = true;\n\t\t\t\t\tret += it;\n\t\t\t\t\tdone.insert(it);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!ok) ret = *max_element(nums.begin(), nums.end());\n\t\treturn ret;\n\t}\n};\n\n#ifdef LOCAL\nint main() {\n\tfreopen(\"output.txt\", \"w\", stdout);\n\tcout << \"Compiled!\" << endl;\n}\n#endif\n\n","author":"Agnibha Chakraborty","submissionId":"1575080289"},[]]},{"78":[{"id":"78","fileName":"1575080293.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, int> hm;\n        int val = -1e9;\n        for (int i : nums) {\n            hm[i]++;\n            val = max(val, i);\n        }\n\n        int ans = 0;\n        int c = 0;\n        for (auto p : hm) {\n            if (p.first>0) {\n                ans += p.first;\n                c++;\n            }\n        }\n\n        if (c==0)\n            return val;\n            \n        return ans;\n    }\n};","author":"Arcan3","submissionId":"1575080293"},[]]},{"80":[{"id":"80","fileName":"1575080332.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        \n        seen = set()\n        total = 0\n        posSeen = False\n        for n in nums:\n            if n < 0:\n                continue\n            posSeen = True\n            if n not in seen:\n                seen.add(n)\n                total += n\n        if not posSeen:\n            return max(nums)\n        return total","author":"Brandon Collins","submissionId":"1575080332"},[]]},{"81":[{"id":"81","fileName":"1575080350.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mx = *max_element(nums.begin(), nums.end());\n        if (mx <= 0) return mx;\n        vector<int> vis(101);\n        for (auto x: nums) if (x > 0) vis[x] = 1;\n        int res = 0;\n        for (int i = 1; i <= 100; i++) if (vis[i]) res += i;\n        return res;\n    }\n};","author":"__keep_it_simple__","submissionId":"1575080350"},[{"id":"1449","similarity":0.8333333333333334,"totOverlap":55,"longestOverlap":15},{"id":"1578","similarity":0.7246376811594203,"totOverlap":50,"longestOverlap":16}]],"1449":[{"id":"1449","fileName":"611226581.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mmax=*max_element(nums.begin(),nums.end());\n        if(mmax<=0){\n            return mmax;\n        }\n        vector<int> vis(101,0);\n        for(auto x:nums){\n            if(x>0){\n                vis[x]=1;\n            }\n        }\n        int ans=0;\n        for(int i=0;i<101;i++){\n            if(vis[i])ans+=i;\n        }\n        return ans;\n        \n    }\n};","author":"nihonge","submissionId":"611226581"},[{"id":"81","similarity":0.8333333333333334,"totOverlap":55,"longestOverlap":15}]],"1578":[{"id":"1578","fileName":"611227621.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int x = *max_element(nums.begin(), nums.end());\n        if (x <= 0) return x;\n        int tag[101] = {0};\n        for (int x:nums) if (x > 0) tag[x] = 1;\n        int res = 0;\n        for (int x = 1; x <= 100; ++x) res += tag[x] * x;\n        return res;\n    }\n};","author":"abyss","submissionId":"611227621"},[{"id":"81","similarity":0.7246376811594203,"totOverlap":50,"longestOverlap":16}]]},{"83":[{"id":"83","fileName":"1575080348.txt","sourceCode":"import java.util.*;\nclass Solution {\n    public int maxSum(int[] a) {\n        int s = 0;\n        boolean p = false;\n        Set<Integer> u = new HashSet<>();\n        for (int x : a) {\n            if (x > 0) {\n                p = true;\n                if (!u.contains(x)) {\n                    s += x;\n                    u.add(x);\n                }\n            }\n        }\n        if (!p) {\n            int m = a[0];\n            for (int x : a) m = Math.max(m, x);\n            return m;\n        }\n        return s;\n    }\n}\n","author":"user0685BD","submissionId":"1575080348"},[]]},{"7":[{"id":"7","fileName":"1575079424.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = set(nums)\n\n        above_0 = [x for x in nums if x > 0]\n\n        if len(above_0) == 0:\n            return max(nums)\n        else:\n            return sum(above_0)","author":"Kyle","submissionId":"1575079424"},[{"id":"1439","similarity":0.7692307692307693,"totOverlap":30,"longestOverlap":9},{"id":"440","similarity":0.7222222222222222,"totOverlap":26,"longestOverlap":7},{"id":"85","similarity":0.7647058823529411,"totOverlap":26,"longestOverlap":13}]],"26":[{"id":"26","fileName":"1575079716.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos = [x for x in nums if x > 0]\n        if pos:\n            return sum(set(pos))\n\n        if 0 in nums:\n            return 0\n\n        return max(nums)\n","author":"HardCoreSWE","submissionId":"1575079716"},[{"id":"110","similarity":0.8571428571428571,"totOverlap":30,"longestOverlap":12},{"id":"992","similarity":0.7272727272727273,"totOverlap":24,"longestOverlap":12},{"id":"1367","similarity":0.7586206896551724,"totOverlap":22,"longestOverlap":8},{"id":"992","similarity":0.7333333333333333,"totOverlap":22,"longestOverlap":9}]],"34":[{"id":"34","fileName":"1575079775.txt","sourceCode":"class Solution:\n  def maxSum(self, nums: List[int]) -> int:\n    m = max(nums)\n    if m <= 0:\n      return m\n    return sum(set(i for i in nums if i > 0))\n","author":"LeeetCode","submissionId":"1575079775"},[{"id":"763","similarity":0.8571428571428571,"totOverlap":30,"longestOverlap":11},{"id":"60","similarity":0.9032258064516129,"totOverlap":28,"longestOverlap":13},{"id":"1244","similarity":0.7567567567567568,"totOverlap":28,"longestOverlap":7},{"id":"1321","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":11},{"id":"1335","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":7},{"id":"60","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":10},{"id":"1335","similarity":0.7058823529411765,"totOverlap":24,"longestOverlap":8},{"id":"828","similarity":0.71875,"totOverlap":23,"longestOverlap":7},{"id":"112","similarity":0.7096774193548387,"totOverlap":22,"longestOverlap":7}]],"42":[{"id":"42","fileName":"1575079889.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos = [x for x in list(set(nums)) if x > 0]\n        if not pos: return max(nums)\n        return sum(pos)","author":"Jonathan de Koning","submissionId":"1575079889"},[{"id":"1478","similarity":1.0,"totOverlap":36,"longestOverlap":18},{"id":"1088","similarity":0.8108108108108109,"totOverlap":30,"longestOverlap":9},{"id":"1299","similarity":0.7692307692307693,"totOverlap":30,"longestOverlap":15},{"id":"1088","similarity":0.8529411764705882,"totOverlap":29,"longestOverlap":12},{"id":"1520","similarity":0.9310344827586207,"totOverlap":27,"longestOverlap":12},{"id":"169","similarity":0.71875,"totOverlap":23,"longestOverlap":7}]],"56":[{"id":"56","fileName":"1575080011.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        mx = max(nums)\n        if mx <= 0:\n            return mx\n        nums = set(nums)\n        return sum(num for num in nums if num >= 0)","author":"lihaicoder","submissionId":"1575080011"},[{"id":"56","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":10}]],"60":[{"id":"60","fileName":"1575080099.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        mx = max(nums)\n        if mx < 0:\n            return mx\n        return sum(set(num for num in nums if num >= 0))","author":"zsq007","submissionId":"1575080099"},[{"id":"34","similarity":0.9032258064516129,"totOverlap":28,"longestOverlap":13}]],"79":[{"id":"79","fileName":"1575080319.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        arr = [num for num in nums if num > 0]\n        if len(arr) == 0:\n            return max(nums)\n        return sum(set(arr))","author":"TODD YANG","submissionId":"1575080319"},[{"id":"989","similarity":0.8888888888888888,"totOverlap":32,"longestOverlap":8},{"id":"989","similarity":0.8108108108108109,"totOverlap":30,"longestOverlap":10},{"id":"214","similarity":0.8484848484848485,"totOverlap":28,"longestOverlap":9},{"id":"1249","similarity":0.7297297297297297,"totOverlap":27,"longestOverlap":7},{"id":"328","similarity":0.8387096774193549,"totOverlap":26,"longestOverlap":13},{"id":"85","similarity":0.7142857142857143,"totOverlap":25,"longestOverlap":7}]],"85":[{"id":"85","fileName":"1575080344.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ss=set(num for num in nums if num>0)\n        if len(ss)==0:\n            return max(nums)\n        return sum(ss)","author":"jjzzzmd","submissionId":"1575080344"},[{"id":"188","similarity":0.9696969696969697,"totOverlap":32,"longestOverlap":16},{"id":"1255","similarity":0.9696969696969697,"totOverlap":32,"longestOverlap":16},{"id":"1872","similarity":0.9696969696969697,"totOverlap":32,"longestOverlap":16},{"id":"635","similarity":0.8823529411764706,"totOverlap":30,"longestOverlap":10},{"id":"142","similarity":0.8125,"totOverlap":26,"longestOverlap":11},{"id":"440","similarity":0.7647058823529411,"totOverlap":26,"longestOverlap":13},{"id":"1249","similarity":0.7142857142857143,"totOverlap":25,"longestOverlap":7},{"id":"300","similarity":0.7058823529411765,"totOverlap":24,"longestOverlap":11},{"id":"112","similarity":0.75,"totOverlap":24,"longestOverlap":11},{"id":"210","similarity":0.7058823529411765,"totOverlap":24,"longestOverlap":7},{"id":"630","similarity":0.7272727272727273,"totOverlap":24,"longestOverlap":11},{"id":"688","similarity":0.7058823529411765,"totOverlap":24,"longestOverlap":7},{"id":"635","similarity":0.71875,"totOverlap":23,"longestOverlap":7},{"id":"1238","similarity":0.7419354838709677,"totOverlap":23,"longestOverlap":6},{"id":"141","similarity":0.7096774193548387,"totOverlap":22,"longestOverlap":7},{"id":"1520","similarity":0.7333333333333333,"totOverlap":22,"longestOverlap":9},{"id":"828","similarity":0.7241379310344828,"totOverlap":21,"longestOverlap":9}]],"110":[{"id":"110","fileName":"1575080607.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        x = [n for n in nums if n>0]\n        return sum(set(x)) if x else max(nums)","author":"faakhir","submissionId":"1575080607"},[{"id":"26","similarity":0.8571428571428571,"totOverlap":30,"longestOverlap":12}]],"112":[{"id":"112","fileName":"1575080637.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(x for x in nums if x >= 0)\n        if s:\n            return sum(s)\n        else:\n            return max(nums)","author":"Chuan-Chih Chou","submissionId":"1575080637"},[{"id":"85","similarity":0.75,"totOverlap":24,"longestOverlap":11}]],"113":[{"id":"113","fileName":"1575080619.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        set_nums = set(nums)\n        total = sum(x for x in set_nums if x > 0)\n        if total == 0:\n            return max(nums)\n        return total","author":"litely","submissionId":"1575080619"},[{"id":"1007","similarity":0.7777777777777778,"totOverlap":28,"longestOverlap":12},{"id":"1007","similarity":0.7058823529411765,"totOverlap":24,"longestOverlap":8}]],"141":[{"id":"141","fileName":"1575080884.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos = set(x for x in nums if x >= 0)\n        return sum(pos) if pos else max(nums)","author":"Jiahao","submissionId":"1575080884"},[{"id":"828","similarity":0.90625,"totOverlap":29,"longestOverlap":13},{"id":"443","similarity":0.75,"totOverlap":24,"longestOverlap":9},{"id":"148","similarity":0.71875,"totOverlap":23,"longestOverlap":7}]],"142":[{"id":"142","fileName":"1575080858.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        non_negatives = set(x for x in nums if x >= 0)\n        if non_negatives:\n            return sum(non_negatives)\n\n        return max(nums)","author":"Keerthi Rao C","submissionId":"1575080858"},[{"id":"390","similarity":0.875,"totOverlap":28,"longestOverlap":11},{"id":"85","similarity":0.8125,"totOverlap":26,"longestOverlap":11}]],"148":[{"id":"148","fileName":"1575080913.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        \n        s = sum(set( x for x in nums if x > 0))\n        if s == 0:\n            return max(nums)\n        return s","author":"abhishek vaish","submissionId":"1575080913"},[{"id":"1244","similarity":0.8235294117647058,"totOverlap":28,"longestOverlap":9},{"id":"763","similarity":0.7567567567567568,"totOverlap":28,"longestOverlap":7}]],"155":[{"id":"155","fileName":"1575080974.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        a=[i for i in nums if i>=0]\n        if(not a):\n            return max(nums)\n        return sum(set(a))\n        ","author":"Vishnu Bathla","submissionId":"1575080974"},[{"id":"155","similarity":0.8108108108108109,"totOverlap":30,"longestOverlap":10}]],"169":[{"id":"169","fileName":"1575081047.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        v = [val for val in set(nums)if val>0]\n        if not v:\n            return max(nums)\n        return sum(v)","author":"timotoa","submissionId":"1575081047"},[{"id":"1801","similarity":1.0,"totOverlap":30,"longestOverlap":15},{"id":"169","similarity":0.8529411764705882,"totOverlap":29,"longestOverlap":12}]],"188":[{"id":"188","fileName":"1575081254.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        x = set(d for d in nums if d >= 0)\n        if len(x) == 0:\n            return max(nums)\n        return sum(x)\n        ","author":"Andrei Cioara","submissionId":"1575081254"},[{"id":"85","similarity":0.9696969696969697,"totOverlap":32,"longestOverlap":16}]],"204":[{"id":"204","fileName":"1575081400.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = set(nums)\n        t = [x for x in nums if x >= 0]\n        if t:\n            return sum(t)\n        else:\n            return max(nums)\n        ","author":"Josh","submissionId":"1575081400"},[{"id":"1249","similarity":0.7941176470588235,"totOverlap":27,"longestOverlap":12},{"id":"989","similarity":0.7297297297297297,"totOverlap":27,"longestOverlap":7}]],"210":[{"id":"210","fileName":"1575081454.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos = set([x for x in nums if x > 0])\n        # print(pos)\n        if len(pos) > 0:\n            return sum(pos)\n        return max(nums)","author":"silencea","submissionId":"1575081454"},[{"id":"188","similarity":0.7058823529411765,"totOverlap":24,"longestOverlap":7}]],"214":[{"id":"214","fileName":"1575081466.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        x = [num for num in nums if num >= 0]\n        if not x: return max(nums)\n        return sum(set(x))","author":"Peter Kalugin","submissionId":"1575081466"},[{"id":"79","similarity":0.8484848484848485,"totOverlap":28,"longestOverlap":9}]],"300":[{"id":"300","fileName":"1575082026.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums2 = [num for num in nums if num > 0]\n        if len(nums2) == 0:\n            nums2.append(max(nums))\n        return sum(list(set(nums2)))\n        ","author":"Jake Barris","submissionId":"1575082026"},[{"id":"79","similarity":0.7058823529411765,"totOverlap":24,"longestOverlap":11}]],"328":[{"id":"328","fileName":"1575082201.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n        pos = [x for x in s if x > 0]\n        if pos:\n            return sum(pos)\n        if 0 in s:\n            return 0\n        return max(s)","author":"ceaxyz002","submissionId":"1575082201"},[{"id":"204","similarity":0.8387096774193549,"totOverlap":26,"longestOverlap":13}]],"390":[{"id":"390","fileName":"1575082588.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        uniq = set(num for num in nums if 0 < num)\n        if not uniq:\n            return max(nums)\n        return sum(uniq)","author":"Maxim Vasilic","submissionId":"1575082588"},[{"id":"142","similarity":0.875,"totOverlap":28,"longestOverlap":11}]],"410":[{"id":"410","fileName":"1575082761.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res = sum(x for x in set(nums) if x > 0)\n        return res if res else max(nums)","author":"sveng101","submissionId":"1575082761"},[{"id":"1387","similarity":0.8,"totOverlap":24,"longestOverlap":12},{"id":"410","similarity":0.7241379310344828,"totOverlap":21,"longestOverlap":9}]],"440":[{"id":"440","fileName":"1575082933.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(n for n in nums if n > 0)\n        if len(s) > 0:\n            return sum(s)\n        else:\n            return max(nums)\n            ","author":"Ivan Macek","submissionId":"1575082933"},[{"id":"671","similarity":0.7777777777777778,"totOverlap":28,"longestOverlap":7},{"id":"7","similarity":0.7222222222222222,"totOverlap":26,"longestOverlap":7}]],"443":[{"id":"443","fileName":"1575082949.txt","sourceCode":"class Solution:\n  def maxSum(self, nums: List[int]) -> int:\n    all_nums = set(num for num in nums if num > 0)\n    return sum(all_nums) if len(all_nums) > 0 else max(nums)","author":"hope_ma","submissionId":"1575082949"},[{"id":"141","similarity":0.75,"totOverlap":24,"longestOverlap":9}]],"533":[{"id":"533","fileName":"1575083647.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums)<=0:\n            return max(nums)\n        nums=[x for x in nums if x>0]\n        nums=set(nums)\n        return sum(nums)","author":"Sundeep Chenreddy","submissionId":"1575083647"},[{"id":"1238","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":12},{"id":"169","similarity":0.7419354838709677,"totOverlap":23,"longestOverlap":6}]],"630":[{"id":"630","fileName":"1575084250.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        positiveNums = [num for num in nums if num >= 0 ]\n        if len(positiveNums) != 0:\n            return sum(set(positiveNums))\n\n        return max(nums)\n            ","author":"Lawrence Hoerst","submissionId":"1575084250"},[{"id":"300","similarity":0.7272727272727273,"totOverlap":24,"longestOverlap":11}]],"635":[{"id":"635","fileName":"1575084270.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        lst = list(n for n in set(nums) if n > 0)\n        if len(lst) == 0:\n            return max(nums)\n        return sum(lst)","author":"hemerocalle","submissionId":"1575084270"},[{"id":"85","similarity":0.8823529411764706,"totOverlap":30,"longestOverlap":10}]],"671":[{"id":"671","fileName":"1575084466.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        if max(nums) <= 0:\n            return max(nums)\n        else:\n            return sum(x for x in nums if x > 0)","author":"jinnlu","submissionId":"1575084466"},[{"id":"440","similarity":0.7777777777777778,"totOverlap":28,"longestOverlap":7}]],"688":[{"id":"688","fileName":"1575084575.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = sum(num for num in set(nums) if num > 0)\n        if ans == 0 and 0 not in nums:\n            ans = max(nums)\n        \n        return ans","author":"twwwwwwt","submissionId":"1575084575"},[{"id":"635","similarity":0.7058823529411765,"totOverlap":24,"longestOverlap":7}]],"763":[{"id":"763","fileName":"1575085142.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        top = max(nums)\n        \n        if top <= 0:\n            return top\n            \n        return sum(list(set([n for n in nums if n >= 0])))","author":"HoaLA","submissionId":"1575085142"},[{"id":"34","similarity":0.8571428571428571,"totOverlap":30,"longestOverlap":11}]],"828":[{"id":"828","fileName":"1575085611.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        S = set(x for x in nums if x > 0)\n        return sum(x for x in S) if S else max(nums)\n        \n        ","author":"Denis Rozhkov","submissionId":"1575085611"},[{"id":"141","similarity":0.90625,"totOverlap":29,"longestOverlap":13}]],"989":[{"id":"989","fileName":"1575086784.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos_nums = [n for n in nums if n > 0]\n        if len(pos_nums) == 0:\n            return max(nums)\n        return sum(set(pos_nums))","author":"Haikyo","submissionId":"1575086784"},[{"id":"79","similarity":0.8888888888888888,"totOverlap":32,"longestOverlap":8}]],"992":[{"id":"992","fileName":"1575086841.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos = [n for n in nums if n > 0]\n        if pos:\n            return sum(list(set(pos)))\n        else:\n            return max(nums)","author":"roh019","submissionId":"1575086841"},[{"id":"26","similarity":0.7272727272727273,"totOverlap":24,"longestOverlap":12}]],"1007":[{"id":"1007","fileName":"1575086950.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums_set = set(nums)\n        max_val = max(nums_set)\n        if max_val <= 0:\n            return max_val\n        else:\n            return sum(x for x in nums_set if x > 0)\n        ","author":"Sean4843","submissionId":"1575086950"},[{"id":"113","similarity":0.7777777777777778,"totOverlap":28,"longestOverlap":12}]],"1088":[{"id":"1088","fileName":"1575087743.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        l = [num for num in set(nums) if num > 0]\n        if not l: return max(set(nums))\n        return sum(l)","author":"kwrefs","submissionId":"1575087743"},[{"id":"42","similarity":0.8108108108108109,"totOverlap":30,"longestOverlap":9}]],"1238":[{"id":"1238","fileName":"611225074.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0 :\n            return max(nums)\n        nums = [t for t in set(nums) if t > 0]\n        return sum(nums)","author":"pku_erutan","submissionId":"611225074"},[{"id":"533","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":12}]],"1244":[{"id":"1244","fileName":"611225213.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = sum(set([x for x in nums if x >= 0]))\n        if ans == 0:\n            return max(nums)\n        return ans","author":"koy33","submissionId":"611225213"},[{"id":"148","similarity":0.8235294117647058,"totOverlap":28,"longestOverlap":9}]],"1249":[{"id":"1249","fileName":"611225261.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n        p = [si for si in s if si >= 0]\n        if len(p) == 0:\n            return max(s)\n        return sum(p)","author":"牧瀬 紅莉栖","submissionId":"611225261"},[{"id":"204","similarity":0.7941176470588235,"totOverlap":27,"longestOverlap":12}]],"1255":[{"id":"1255","fileName":"611225279.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        a = set(v for v in nums if v >= 0)\n        if len(a) == 0:\n            return max(nums)\n        return sum(a)","author":"Fzldq","submissionId":"611225279"},[{"id":"85","similarity":0.9696969696969697,"totOverlap":32,"longestOverlap":16}]],"1299":[{"id":"1299","fileName":"611225640.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        arr = [v for v in list(set(nums)) if v > 0]\n        return max(nums) if len(arr) == 0 else sum(arr)","author":"cpp20","submissionId":"611225640"},[{"id":"42","similarity":0.7692307692307693,"totOverlap":30,"longestOverlap":15}]],"1321":[{"id":"1321","fileName":"611225784.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        mx = max(nums)\n        if mx <= 0:\n            return mx\n        return sum(x for x in set(nums) if x >= 0)","author":"wormchaos","submissionId":"611225784"},[{"id":"1359","similarity":0.7878787878787878,"totOverlap":26,"longestOverlap":10},{"id":"1768","similarity":0.7647058823529411,"totOverlap":26,"longestOverlap":9},{"id":"34","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":11}]],"1335":[{"id":"1335","fileName":"611225899.txt","sourceCode":"class Solution:\n    def maxSum(self, a: List[int]) -> int:\n        res = sum(set(x for x in a if x > 0))\n        return res if res else max(a)","author":"cheng-liang-yu","submissionId":"611225899"},[{"id":"34","similarity":0.7741935483870968,"totOverlap":24,"longestOverlap":7}]],"1359":[{"id":"1359","fileName":"611226030.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans=max(nums)\n        if ans<0:\n            return ans\n        a=sum(x for x in set(nums) if x>0)\n        return max(a,ans)","author":"团","submissionId":"611226030"},[{"id":"1321","similarity":0.7878787878787878,"totOverlap":26,"longestOverlap":10}]],"1367":[{"id":"1367","fileName":"611226082.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ar = [val for val in nums if val > 0]\n        if ar:\n            return sum(set(ar))\n        else:\n            return max(nums)\n        \n        ","author":"lee0560","submissionId":"611226082"},[{"id":"992","similarity":0.7586206896551724,"totOverlap":22,"longestOverlap":8}]],"1387":[{"id":"1387","fileName":"611226263.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = sum(x for x in set(nums) if x > 0)\n        return s if s > 0 else max(nums)","author":"Alex-Yan","submissionId":"611226263"},[{"id":"410","similarity":0.8,"totOverlap":24,"longestOverlap":12}]],"1439":[{"id":"1439","fileName":"611226561.txt","sourceCode":"class Solution:\n\n    def maxSum(self, nums: List[int]) -> int:\n\n        ns = sorted(set(nums))\n        filtered_ns = [i for i in ns if i >= 0]\n\n        if len(filtered_ns) == 0:\n            return max(ns)\n        else:\n            return sum(filtered_ns)\n","author":"喜乐","submissionId":"611226561"},[{"id":"7","similarity":0.7692307692307693,"totOverlap":30,"longestOverlap":9}]],"1478":[{"id":"1478","fileName":"611226771.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        arr = [num for num in list(set(nums)) if num >= 0]\n        if not arr:\n            return max(nums)\n        return sum(arr)","author":"风痕依旧","submissionId":"611226771"},[{"id":"42","similarity":1.0,"totOverlap":36,"longestOverlap":18}]],"1520":[{"id":"1520","fileName":"611227091.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        unums = [x for x in set(nums) if x > 0]\n        if unums:\n            return sum(unums)\n        else:\n            return max(nums)","author":"孔雀千人","submissionId":"611227091"},[{"id":"169","similarity":0.9310344827586207,"totOverlap":27,"longestOverlap":12}]],"1768":[{"id":"1768","fileName":"611232087.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        mx = max(nums)\n        # 如果nums中只有负数，则保留最大的负数\n        if mx < 0:\n            return mx\n        # 否则，每个正数保留一个\n        return sum(a for a in set(nums) if a > 0)","author":"JeremyZhang96","submissionId":"611232087"},[{"id":"1321","similarity":0.7647058823529411,"totOverlap":26,"longestOverlap":9}]],"1801":[{"id":"1801","fileName":"611235219.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        positives = [num for num in set(nums) if num > 0]\n        if positives:\n            return sum(positives)\n        return max(nums)\n        ","author":"Matisse","submissionId":"611235219"},[{"id":"169","similarity":1.0,"totOverlap":30,"longestOverlap":15}]],"1872":[{"id":"1872","fileName":"611257960.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        arr = set(x for x in nums if x >= 0)\n        if len(arr) == 0:\n            return max(nums)\n        return sum(arr)\n        ","author":"Sun","submissionId":"611257960"},[{"id":"85","similarity":0.9696969696969697,"totOverlap":32,"longestOverlap":16}]]},{"87":[{"id":"87","fileName":"1575080399.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        poz = False\n        for num in nums:\n            if num >= 0:\n                poz = True\n                s.add(num)\n        if poz:\n            return sum(s)\n        else:\n            return max(nums)","author":"westonsLeetcodingJourney","submissionId":"1575080399"},[]]},{"88":[{"id":"88","fileName":"1575080410.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        map<int,bool> seen;\n        int ans = 0;\n        bool ok = false;\n        for(int x: nums){\n            if(x<0)\n                continue;\n            if(seen[x])\n                continue;\n            ok = true;\n            ans+=x;\n            seen[x]=true;\n        }\n        if(!ok)\n            ans = nums[(int)nums.size()-1];\n        return ans;\n    }\n};","author":"Ritik","submissionId":"1575080410"},[]]},{"91":[{"id":"91","fileName":"1575080405.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = set(nums)\n        nums = sorted(nums, reverse=True)\n        s = 0\n        for n in nums:\n            s += n\n        while len(nums) > 1 and s-nums[-1] > s:\n            s -= nums[-1]\n            nums.pop()\n        return s","author":"arty","submissionId":"1575080405"},[]]},{"92":[{"id":"92","fileName":"1575080432.txt","sourceCode":"\nclass Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        A = SortedList(set(nums))\n        while len(A) > 1 and A[0] < 0:\n            A.pop(0)\n        return sum(A)\n        \n        ","author":"lydxlx","submissionId":"1575080432"},[{"id":"187","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"187":[{"id":"187","fileName":"1575081265.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = sorted(set(nums))\n        while len(nums) > 1 and nums[0] < 0:\n            nums.pop(0)\n        return sum(nums)","author":"Duck","submissionId":"1575081265"},[{"id":"92","similarity":1.0,"totOverlap":40,"longestOverlap":20}]]},{"93":[{"id":"93","fileName":"1575080458.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n        ans = 0\n        for i in set(nums):\n            if i >= 0:\n                ans += i\n        return ans","author":"Mark33","submissionId":"1575080458"},[{"id":"1511","similarity":1.0,"totOverlap":28,"longestOverlap":14},{"id":"674","similarity":0.7407407407407407,"totOverlap":20,"longestOverlap":6}]],"674":[{"id":"674","fileName":"1575084464.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        answer = 0\n        for num in set(nums):\n            if num > 0:\n                answer += num\n\n        return answer if answer > 0 else max(nums)\n        ","author":"Sisyphus","submissionId":"1575084464"},[{"id":"93","similarity":0.7407407407407407,"totOverlap":20,"longestOverlap":6}]],"1511":[{"id":"1511","fileName":"611227062.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums)<0:\n            return max(nums)\n        ans=0\n        for i in set(nums):\n            if i>0:\n                ans+=i\n        return ans\n                ","author":"hajiao3","submissionId":"611227062"},[{"id":"93","similarity":1.0,"totOverlap":28,"longestOverlap":14}]]},{"95":[{"id":"95","fileName":"1575080366.txt","sourceCode":"//████████╗██╗███╗░░██╗  ██╗░░░░░███████╗\n//╚══██╔══╝██║████╗░██║  ██║░░░░░██╔════╝\n//░░░██║░░░██║██╔██╗██║  ██║░░░░░█████╗░░\n//░░░██║░░░██║██║╚████║  ██║░░░░░██╔══╝░░\n//░░░██║░░░██║██║░╚███║  ███████╗███████╗\n//░░░╚═╝░░░╚═╝╚═╝░░╚══╝  ╚══════╝╚══════╝\n//   __________________\n//  | ________________ |\n//  ||          ____  ||\n//  ||   /    |      ||\n//  ||  /__   |      ||\n//  || /      |____  ||\n//  ||________________||\n//  |__________________|\n//  ###################\n//   ###################\n//            ____       \n//     _________________\n// An AC a day keeps the doctor away.\n\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <bitset>\n#include <iomanip>\n#include <functional>\n#include <numeric>\n#include <stack>\n#include <array>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\nusing namespace std;\ntemplate<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n#define vt vector\n#define all(x) begin(x), end(x)\n#define allr(x) rbegin(x), rend(x)\n#define ub upper_bound\n#define lb lower_bound\n#define db double\n#define ld long db\n#define ll long long\n#define ull unsigned long long\n#define vll vt<ll>  \n#define vvll vt<vll>\n#define pll pair<ll, ll>    \n#define vpll vt<pll>\n#define vvpll vt<vpll>\n#define vc vt<char> \n#define vvc vt<vc>\n#define vi vt<int>\n#define vvi vt<vi>\n#define vvvi vt<vvi>\n#define pii pair<int, int>\n#define vpii vt<pii>\n#define vs vt<string>\n#define vvs vt<vs>\n#define vb vt<bool>\n#define vvb vt<vb>\n#define vvpii vt<vpii>\n#define vd vt<db>\n#define ar(x) array<int, x>\n#define var(x) vt<ar(x)>\n#define vvar(x) vt<var(x)>\n#define al(x) array<ll, x>\n#define vall(x) vt<al(x)>\n#define vvall(x) vt<vall(x)>\n#define mset(m, v) memset(m, v, sizeof(m))\n#define pb push_back\n#define ff first\n#define ss second\n#define sv string_view\n#define MP make_pair\n#define MT make_tuple\n#define rsz resize\n#define sum(x) (ll)accumulate(all(x), 0LL)\n#define srt(x) sort(all(x))\n#define srtR(x) sort(allr(x))\n#define srtU(x) sort(all(x)), (x).erase(unique(all(x)), (x).end())\n#define SORTED(x) is_sorted(all(x))\n#define rev(x) reverse(all(x))\n#define MAX(a) *max_element(all(a)) \n#define MIN(a) *min_element(all(a))\n#define ROTATE(a, p) rotate(begin(a), begin(a) + p, end(a))\n#define i128 __int128\n\n//SGT DEFINE\n#define lc i * 2 + 1\n#define rc i * 2 + 2\n#define lp lc, left, middle\n#define rp rc, middle + 1, right\n#define entireTree 0, 0, n - 1\n#define midPoint left + (right - left) / 2\n#define pushDown push(i, left, right)\n#define iter int i, int left, int right\n\n#define IOS ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0)\n\nstruct custom {\n    static const uint64_t C = 0x9e3779b97f4a7c15; const uint32_t RANDOM = std::chrono::steady_clock::now().time_since_epoch().count();\n    size_t operator()(uint64_t x) const { return __builtin_bswap64((x ^ RANDOM) * C); }\n    size_t operator()(const std::string& s) const { size_t hash = std::hash<std::string>{}(s); return hash ^ RANDOM; } };\ntemplate <class K, class V> using umap = std::unordered_map<K, V, custom>; template <class K> using uset = std::unordered_set<K, custom>;\ntemplate<class T> using max_heap = priority_queue<T>;\ntemplate<class T> using min_heap = priority_queue<T, vector<T>, greater<T>>;\n    \n    \ntemplate <typename T1, typename T2>  istream &operator>>(istream& in, pair<T1, T2>& input) {    return in >> input.ff >> input.ss; }\n    \ntemplate <typename T> istream &operator>>(istream &in, vector<T> &v) { for (auto &el : v) in >> el; return in; }\n\ntemplate<class T>\nvoid output_vector(vt<T>& a, int off_set = 0) {\n    int n = a.size();\n    for(int i = off_set; i < n; i++) {\n        cout << a[i] << (i == n - 1 ? 'n' : ' ');\n    }\n}\n\ntemplate<typename T, typename Compare>\nvi closest_left(const vt<T>& a, Compare cmp) {\n    int n = a.size(); vi closest(n); iota(all(closest), 0);\n    for (int i = 0; i < n; i++) {\n        auto& j = closest[i];\n        while(j && cmp(a[i], a[j - 1])) j = closest[j - 1];\n    }\n    return closest;\n}\n\ntemplate<typename T, typename Compare> // auto right = closest_right<int>(a, std::less<int>());\nvi closest_right(const vt<T>& a, Compare cmp) {\n    int n = a.size(); vi closest(n); iota(all(closest), 0);\n    for (int i = n - 1; i >= 0; i--) {\n        auto& j = closest[i];\n        while(j < n - 1 && cmp(a[i], a[j + 1])) j = closest[j + 1];\n    }\n    return closest;\n}\n\ntemplate<typename T, typename V = string>\nvt<pair<T, int>> encode(const V& s) {\n    vt<pair<T, int>> seg;\n    for(auto& ch : s) {\n        if(seg.empty() || ch != seg.back().ff) seg.pb({ch, 1});\n        else seg.back().ss++;\n    }\n    return seg;\n}\n\n    \ntemplate<typename K, typename V>\nauto operator<<(std::ostream &o, const std::map<K, V> &m) -> std::ostream& {\n    o << \"{\"; int i = 0;\n    for (const auto &[key, value] : m) { if (i++) o << \" , \"; o << key << \" : \" << value; }\n    return o << \"}\";\n}\n\n#ifdef LOCAL\n#define debug(x...) debug_out(#x, x)\nvoid debug_out(const char* names) { std::cerr << std::endl; }\ntemplate <typename T, typename... Args>\nvoid debug_out(const char* names, T value, Args... args) {\n    const char* comma = strchr(names, ',');\n    std::cerr << \"[\" << (comma ? std::string(names, comma) : names) << \" = \" << value << \"]\";\n    if (sizeof...(args)) { std::cerr << \", \"; debug_out(comma + 1, args...); }   \n    else { std::cerr << std::endl; }\n}\ntemplate<typename T1, typename T2>\nstd::ostream& operator<<(std::ostream& o, const std::pair<T1, T2>& p) { return o << \"{\" << p.ff << \" , \" << p.ss << \"}\"; }\nauto operator<<(auto &o, const auto &x) -> decltype(end(x), o) {\n    o << \"{\"; int i = 0; for (const auto &e : x) { if (i++) o << \" , \"; o << e; } return o << \"}\";\n} // remove for leetcode\n#include <sys/resource.h>\n#include <sys/time.h>\nvoid printMemoryUsage() {\n    struct rusage usage;\n    getrusage(RUSAGE_SELF, &usage);\n    double memoryMB = usage.ru_maxrss / 1024.0;\n    cerr << \"Memory usage: \" << memoryMB << \" MB\" << \"n\";\n}\n\n#define startClock clock_t tStart = clock();\n#define endClock std::cout << std::fixed << std::setprecision(10) << \"nTime Taken: \" << (double)(clock() - tStart) / CLOCKS_PER_SEC << \" seconds\" << std::endl;\n#else\n#define debug(...)\n#define startClock\n#define endClock\n\n#endif\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\n\n#define eps 1e-9\n#define M_PI 3.14159265358979323846\nconst static string pi = \"3141592653589793238462643383279\";\nconst static ll INF = 1LL << 62;\nconst static int inf = 1e9 + 100;\nconst static int MK = 20;\nconst static int MX = 1e5 + 5;\nconst static int MOD = 1e9 + 7;\nll gcd(ll a, ll b) { while (b != 0) { ll temp = b; b = a % b; a = temp; } return a; }\nll lcm(ll a, ll b) { return (a / gcd(a, b)) * b; }\nint pct(ll x) { return __builtin_popcountll(x); }\nll have_bit(ll x, int b) { return x & (1LL << b); }\nint min_bit(ll x) { return __builtin_ctzll(x); }\nint max_bit(ll x) { return 63 - __builtin_clzll(x); } \nconst vvi dirs = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}, {1, 1}, {-1, -1}, {1, -1}, {-1, 1}}; // UP, DOWN, LEFT, RIGHT\nconst vc dirChar = {'U', 'D', 'L', 'R'};\nint modExpo(ll base, ll exp, ll mod) { ll res = 1; base %= mod; while(exp) { if(exp & 1) res = (res * base) % mod; base = (base * base) % mod; exp >>= 1; } return res; }\nint modExpo_on_string(ll a, string exp, int mod) { ll b = 0; for(auto& ch : exp) b = (b * 10 + (ch - '0')) % (mod - 1); return modExpo(a, b, mod); }\nll sum_even_series(ll n) { return (n / 2) * (n / 2 + 1);} \nll sum_odd_series(ll n) {return n - sum_even_series(n);} // sum of first n odd number is n ^ 2\nll sum_of_square(ll n) { return n * (n + 1) * (2 * n + 1) / 6; } // sum of 1 + 2 * 2 + 3 * 3 + 4 * 4 + ... + n * n\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = 0;       \n        set<int> s;\n        bool ok = false;\n        for(auto& x : nums) {\n            if(s.count(x) || x < 0) continue;\n            s.insert(x);\n            res += x;\n            ok = true;\n        }\n        if(!ok) res += MAX(nums);\n        return res;\n    }\n};\n\n#ifdef LOCAL\nvoid solve() {\n}\n\nsigned main() {\n    // careful for overflow, check for long long, use unsigned long long for random generator\n    // when mle, look if problem require read in file, typically old problems\n    IOS;\n    startClock\n    //generatePrime();\n\n    int t = 1;\n    //cin >> t;\n    for(int i = 1; i <= t; i++) {   \n        //cout << \"Case #\" << i << \": \";  \n        solve();\n    }\n\n    endClock\n    #ifdef LOCAL\n      printMemoryUsage();\n    #endif\n\n    return 0;\n}\n#endif\n\n//███████████████████████████████████████████████████████████████████████████████████████████████████████\n//█░░░░░░░░░░░░░░█░░░░░░██████████░░░░░░█░░░░░░░░░░░░███░░░░░░░░░░█░░░░░░██████████░░░░░░█░░░░░░░░░░░░░░█\n//█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░░░░░░░░░██░░▄▀░░█░░▄▀▄▀▄▀▄▀░░░░█░░▄▀▄▀▄▀░░█░░▄▀░░░░░░░░░░██░░▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█\n//█░░▄▀░░░░░░░░░░█░░▄▀▄▀▄▀▄▀▄▀░░██░░▄▀░░█░░▄▀░░░░▄▀▄▀░░█░░░░▄▀░░░░█░░▄▀▄▀▄▀▄▀▄▀░░██░░▄▀░░█░░▄▀░░░░░░░░░░█\n//█░░▄▀░░█████████░░▄▀░░░░░░▄▀░░██░░▄▀░░█░░▄▀░░██░░▄▀░░███░░▄▀░░███░░▄▀░░░░░░▄▀░░██░░▄▀░░█░░▄▀░░█████████\n//█░░▄▀░░░░░░░░░░█░░▄▀░░██░░▄▀░░██░░▄▀░░█░░▄▀░░██░░▄▀░░███░░▄▀░░███░░▄▀░░██░░▄▀░░██░░▄▀░░█░░▄▀░░█████████\n//█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░██░░▄▀░░██░░▄▀░░█░░▄▀░░██░░▄▀░░███░░▄▀░░███░░▄▀░░██░░▄▀░░██░░▄▀░░█░░▄▀░░██░░░░░░█\n//█░░▄▀░░░░░░░░░░█░░▄▀░░██░░▄▀░░██░░▄▀░░█░░▄▀░░██░░▄▀░░███░░▄▀░░███░░▄▀░░██░░▄▀░░██░░▄▀░░█░░▄▀░░██░░▄▀░░█\n//█░░▄▀░░█████████░░▄▀░░██░░▄▀░░░░░░▄▀░░█░░▄▀░░██░░▄▀░░███░░▄▀░░███░░▄▀░░██░░▄▀░░░░░░▄▀░░█░░▄▀░░██░░▄▀░░█\n//█░░▄▀░░░░░░░░░░█░░▄▀░░██░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░░░▄▀▄▀░░█░░░░▄▀░░░░█░░▄▀░░██░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░░░░░▄▀░░█\n//█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░██░░░░░░░░░░▄▀░░█░░▄▀▄▀▄▀▄▀░░░░█░░▄▀▄▀▄▀░░█░░▄▀░░██░░░░░░░░░░▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█\n//█░░░░░░░░░░░░░░█░░░░░░██████████░░░░░░█░░░░░░░░░░░░███░░░░░░░░░░█░░░░░░██████████░░░░░░█░░░░░░░░░░░░░░█\n//███████████████████████████████████████████████████████████████████████████████████████████████████████\n","author":"tin_le","submissionId":"1575080366"},[]]},{"96":[{"id":"96","fileName":"1575080479.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int ans = 0;\n        for (int i = 0; i < nums.size(); i++)\n            if (i == 0 || nums[i] != nums[i-1])\n                ans += max(nums[i], 0);\n        if (ans > 0)\n            return ans;\n        return nums.back();\n    }\n};","author":"Abhishek Sajwan","submissionId":"1575080479"},[]]},{"97":[{"id":"97","fileName":"1575080483.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        maxval = float(\"-inf\")\n        \n        for n in nums:\n            maxval = max(maxval,n)\n            if n>0:\n                s.add(n)\n\n        if len(s):\n            return sum(s)\n        return maxval","author":"user3996te","submissionId":"1575080483"},[]]},{"98":[{"id":"98","fileName":"1575080531.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = set(nums)\n        all_neg = True\n        for n in nums:\n            if n > 0:\n                all_neg = False\n                break\n        if all_neg:\n            return max(nums)\n\n        return sum(v for v in set(nums) if v > 0)","author":"AKA","submissionId":"1575080531"},[]]},{"101":[{"id":"101","fileName":"1575080545.txt","sourceCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSum = function(nums) {\n  nums = [...new Set(nums)];\n  for (let i = 0; i < nums.length; i++)\n    if (nums[i] >= 0)\n      return nums.reduce((a, c) => c > 0 ? a + c : a, 0);\n  return Math.max(...nums);\n};","author":"Kanat","submissionId":"1575080545"},[]]},{"102":[{"id":"102","fileName":"1575080541.txt","sourceCode":"// import java.util.*;\n// import java.util.function.*;\n\n// public class Main {\n//     public static void main(String[] args) throws Exception {\n//         System.out.println(new Solution().solve());\n//     }\n// }\n\nclass Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n        int sum = 0, max = Integer.MIN_VALUE;\n        HashSet<Integer> set = new HashSet<>();\n        for (int x : nums) {\n            set.add(x);\n            max = Math.max(max, x);\n        }\n        if (max <= 0)\n            return max;\n        for (int x : set)\n            sum += Math.max(x, 0);\n        return sum;\n    }\n}","author":"Sarthak Mathur","submissionId":"1575080541"},[]]},{"106":[{"id":"106","fileName":"1575080583.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        s = set()\n        for i in range(n):\n            if nums[i]>0:\n                s.add(nums[i])\n        if len(s) == 0:\n            return max(nums)\n        return sum(list(s))","author":"hidy","submissionId":"1575080583"},[]]},{"128":[{"id":"128","fileName":"1575080728.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n        int res = -100;\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < n; i++) {\n            if (nums[i] <= 0) {\n                res = Math.max(res, nums[i]);\n            } else {\n                set.add(nums[i]);\n            }\n        }\n        if (set.size() == 0) {\n            return res;\n        } else {\n            int sum = 0;\n            for (int val : set) {\n                sum += val;\n            }\n            \n            return sum;\n        }\n    }\n}","author":"Natsuki","submissionId":"1575080728"},[]]},{"129":[{"id":"129","fileName":"1575080743.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        # sum of unique distinct positive numbers\n        res = 0\n        s = set()\n        for v in nums:\n            if v > 0 and v not in s:\n                res += v\n                s.add(v)\n\n        if res == 0:\n            res = max(nums)\n\n        return res","author":"gambler147","submissionId":"1575080743"},[]]},{"131":[{"id":"131","fileName":"1575080779.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, int> mp;\n        int ans = 0;\n        int m = INT_MIN;\n        for(auto x: nums) {\n            if(!mp[x] && x > 0)\n                ans += x;\n            m = max(m, x);\n            mp[x]++;\n        }\n        return ans <= 0 ? m : ans;\n    }\n};","author":"JVDP LNS","submissionId":"1575080779"},[]]},{"132":[{"id":"132","fileName":"1575080787.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = sorted(set(nums))\n\n        if s[-1] < 0:\n            return s[-1]\n        res = 0\n        while s:\n            if s[-1] > 0:\n                res += s.pop()\n            else:\n                break\n        return res","author":"Burger Monstah","submissionId":"1575080787"},[]]},{"133":[{"id":"133","fileName":"1575080789.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        std::ios_base::sync_with_stdio(false);\n        std::cin.tie(NULL);\n\n        unordered_set<int> used;\n        int ans=*max_element(nums.begin(),nums.end());\n        used.insert(ans);\n        for(auto &i : nums){\n            if(used.count(i) || i<0){\n                continue;\n            }\n            ans+=i;\n            used.insert(i);\n        }\n        return ans;\n    }\n};","author":"lakshitjainn","submissionId":"1575080789"},[]]},{"134":[{"id":"134","fileName":"1575080841.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        is_pos = lambda x: x > 0\n\n        def ups():\n            i, s, seen = 0, 0, set()\n            while i < len(nums):\n                if is_pos(nums[i]) and nums[i] not in seen:\n                    seen.add(nums[i])\n                    s += nums[i]\n                i += 1\n            return s\n\n        def bnp():\n            return 0 if any(map(lambda x: x == 0, nums)) else max(nums)\n\n        ups = ups()\n        return ups if ups > 0 else bnp()\n","author":"Vivan Arora","submissionId":"1575080841"},[]]},{"136":[{"id":"136","fileName":"1575080817.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        map<int,int> mp;\n        int ans=0;\n        int c=0;\n        for(auto i:a){\n            if(mp[i] == 1)continue;\n            if(i < 0)continue;\n            c++;\n            ans += i;\n            mp[i] = 1;\n        }\n        if(c == 0){\n            sort(a.begin(),a.end());\n            return a.back();\n        }\n        return ans;\n    }\n};","author":"stackenqueue2","submissionId":"1575080817"},[]]},{"139":[{"id":"139","fileName":"1575080851.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> s = new HashSet<>();\n        for (int v : nums) s.add(v);\n        int ans = 0, max = -(1<<30);\n        for (int v : s) {\n            if (v > 0) {\n                ans += v;\n            } else {\n                max = Math.max(max, v);\n            }\n        }\n        if (ans == 0) return max;\n        return ans;\n    }\n}","author":"alicezhangmeijun","submissionId":"1575080851"},[]]},{"145":[{"id":"145","fileName":"1575080883.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        total = 0\n        used = set()\n        min_neg = -math.inf\n        for num in nums:\n            if num > 0:\n                if num not in used:\n                    total += num\n                    used.add(num)\n            else:\n                min_neg = max(min_neg, num)\n        if total != 0:\n            return total\n        else:\n            return min_neg\n        ","author":"juggernutx","submissionId":"1575080883"},[]]},{"146":[{"id":"146","fileName":"1575080899.txt","sourceCode":"class Solution \n{\npublic:\n    int maxSum(vector<int>& nums) \n    {\n        int n = nums.size(), ans = *max_element(nums.begin(), nums.end()), sum = 0;\n        unordered_map<int, bool> mp;\n        for(int &N: nums)\n            if(N > 0 and mp.find(N) == mp.end())\n              mp[N] = true, sum += N;\n        return (ans < 0 ? ans : sum);\n    }\n};","author":"Suvendu Dalbehera","submissionId":"1575080899"},[]]},{"156":[{"id":"156","fileName":"1575080968.txt","sourceCode":"class Solution(object):\n    def maxSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        nums.sort()\n        if nums[-1] <= 0:\n            return nums[-1]\n        seen = set()\n        sum = 0\n        for n in nums:\n            if n > 0 and n not in seen:\n                seen.add(n)\n                sum += n\n        return sum","author":"lsUGGYJUIX","submissionId":"1575080968"},[]]},{"157":[{"id":"157","fileName":"1575081014.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int> a;\n        for (int i:nums) a[i]++;\n        int res=0;\n        for (auto i:a) if (i.first>0) res+=i.first;\n        if (res==0) res=*ranges::max_element(nums);\n        return res;\n    }\n};","author":"Guna_C","submissionId":"1575081014"},[]]},{"158":[{"id":"158","fileName":"1575080938.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int sum = 0;\n        for (int num : nums)    {\n            if (num < 0)\n                continue;\n            if (!set.contains(num)) {\n                sum += num;\n                set.add(num);\n            }\n        }\n        \n        if (!set.isEmpty())\n            return sum;\n        Arrays.sort(nums);\n        return nums[nums.length - 1];\n    }\n}","author":"zeningc","submissionId":"1575080938"},[]]},{"159":[{"id":"159","fileName":"1575081010.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> mp;\n        for (auto v : nums){\n            mp[v]++;\n        }\n        auto it = mp.end();\n        it--;\n        if (it->first < 0){\n            return it->first;\n        }\n        int res = 0;\n        for (auto [k, v] : mp){\n            if (k >= 0) res += k;\n        }\n        return res;\n    }\n};","author":"xymabinogi","submissionId":"1575081010"},[]]},{"163":[{"id":"163","fileName":"1575081023.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        st=set(nums)\n        if all(n<0 for n in st):\n            return max(st)\n        ans=0\n        for n in st:\n            if n>=0:\n                ans+=n\n        return ans\n        ","author":"Marius Beceanu","submissionId":"1575081023"},[]]},{"164":[{"id":"164","fileName":"1575081019.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> visited;\n        int c = 0;\n        c += *max_element(begin(nums), end(nums));\n        visited.insert(*max_element(begin(nums), end(nums)));\n        for (auto i: nums) {\n            if (!visited.contains(i) && i > 0) c += i;\n            visited.insert(i);\n        }\n        return c;\n    }\n};","author":"Manny","submissionId":"1575081019"},[]]},{"166":[{"id":"166","fileName":"1575081098.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        d={}\n        for i in nums:\n            d[i] = 1\n        s=0\n        c=0\n        for i in d:\n            if i>=0:\n                s+=i\n                c+=1\n        if c == 0:\n            return max(nums)\n        return s","author":"Ageera Saiteja","submissionId":"1575081098"},[]]},{"76":[{"id":"76","fileName":"1575080288.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        ans = 0\n        for n in nums:\n            if n > 0 and n not in seen:\n                seen.add(n)\n                ans += n\n        if ans == 0:\n            return max(nums)\n        return ans","author":"westonz7042","submissionId":"1575080288"},[{"id":"76","similarity":0.7317073170731707,"totOverlap":30,"longestOverlap":9}]],"168":[{"id":"168","fileName":"1575081103.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0:\n            return max(nums)\n        hashSet = set()\n        res = 0\n        for num in nums:\n            if num not in hashSet:\n                hashSet.add(num)\n                if num > 0:\n                    res += num\n        return res","author":"Stephen Sun","submissionId":"1575081103"},[{"id":"1283","similarity":0.7555555555555555,"totOverlap":34,"longestOverlap":14},{"id":"1283","similarity":0.7317073170731707,"totOverlap":30,"longestOverlap":9}]],"1283":[{"id":"1283","fileName":"611225538.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums)<=0:\n            return max(nums)\n        num_set = set()\n        ans = 0\n        for n in nums:\n            if n>0 and n not in num_set:\n                num_set.add(n)\n                ans += n\n        return ans","author":"PaulKKK","submissionId":"611225538"},[{"id":"168","similarity":0.7555555555555555,"totOverlap":34,"longestOverlap":14}]]},{"170":[{"id":"170","fileName":"1575081091.txt","sourceCode":"import java.util.HashSet;\n\nclass Solution {\n    public int maxSum(int[] arr) {\n\n   \n        int cnt = 0;\n\n        HashSet<Integer> set = new HashSet<>();\n        int ans = 0;\n        for (int v : arr) {\n            if (v >= 0 && !set.contains(v)) {\n                set.add(v);\n                ans += v;\n                cnt++;\n            }\n        }\n        if (cnt == 0) {\n            return max(arr);\n        }\n        return ans;\n    }\n    \n    private int max(int [] arr) {\n        int ans = arr[0];\n        for (int v : arr) {\n            if (v > ans) {\n                ans = v;\n            }\n        }\n        return ans;\n    }\n}","author":"zokumyoin","submissionId":"1575081091"},[]]},{"171":[{"id":"171","fileName":"1575081114.txt","sourceCode":"constexpr int MAX = 128;\n\nint a[MAX];\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n      int n = nums.size();\n      copy(nums.begin(), nums.end(), a);\n      sort(a, a + n);\n      int m = unique(a, a + n) - a;\n      int ret = a[m - 1];\n      for (int i = m - 2; i >= 0 && a[i] > 0; --i) {\n        ret += a[i];\n      }\n      return ret;\n    }\n};","author":"Xiaomeng Yang","submissionId":"1575081114"},[]]},{"17":[{"id":"17","fileName":"1575079581.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max = Integer.MIN_VALUE;\n        int sum = 0;\n        HashSet<Integer> set = new HashSet<>();\n        for (int i : nums) {\n            max = Math.max(max, i);\n            if (i > 0) {\n                if (!set.contains(i)) {\n                    set.add(i);\n                    sum += i;\n                }\n            }\n        }\n        return sum == 0 ? max : sum;\n    }\n}","author":"Victor Liu","submissionId":"1575079581"},[{"id":"1046","similarity":0.8253968253968254,"totOverlap":52,"longestOverlap":15},{"id":"1715","similarity":0.7619047619047619,"totOverlap":48,"longestOverlap":8},{"id":"1715","similarity":0.7164179104477612,"totOverlap":48,"longestOverlap":12},{"id":"466","similarity":0.7454545454545455,"totOverlap":41,"longestOverlap":9},{"id":"609","similarity":0.7692307692307693,"totOverlap":40,"longestOverlap":15},{"id":"609","similarity":0.7017543859649122,"totOverlap":40,"longestOverlap":7}]],"120":[{"id":"120","fileName":"1575080682.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n\n        Set<Integer> set = new HashSet<>();\n        int max = Integer.MIN_VALUE;\n        int res = 0;\n        for(int i : nums) {\n            if (i > 0 && !set.contains(i)) {\n                res += i;\n                set.add(i);\n            }\n            max = Math.max(max, i);\n        }\n\n        return res == 0 ? max : res;\n        \n    }\n}","author":"litang","submissionId":"1575080682"},[{"id":"836","similarity":0.9142857142857143,"totOverlap":64,"longestOverlap":32},{"id":"1111","similarity":0.7671232876712328,"totOverlap":56,"longestOverlap":10},{"id":"959","similarity":0.8333333333333334,"totOverlap":55,"longestOverlap":21},{"id":"1665","similarity":0.7432432432432432,"totOverlap":55,"longestOverlap":12},{"id":"836","similarity":0.7297297297297297,"totOverlap":54,"longestOverlap":20},{"id":"1769","similarity":0.7605633802816901,"totOverlap":54,"longestOverlap":14},{"id":"940","similarity":0.7162162162162162,"totOverlap":53,"longestOverlap":12},{"id":"620","similarity":0.7761194029850746,"totOverlap":52,"longestOverlap":13},{"id":"963","similarity":0.7123287671232876,"totOverlap":52,"longestOverlap":13},{"id":"1665","similarity":0.7647058823529411,"totOverlap":52,"longestOverlap":12},{"id":"1702","similarity":0.7428571428571429,"totOverlap":52,"longestOverlap":15},{"id":"777","similarity":0.7027027027027027,"totOverlap":52,"longestOverlap":14}]],"122":[{"id":"122","fileName":"1575080703.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int sum = 0;\n        int used = 0;\n        HashSet<Integer> set = new HashSet<>();\n        for (int x : nums) {\n            if (x <= 0) continue;\n            if (set.contains(x)) continue;\n            set.add(x);\n            sum += x;\n            used++;\n        }\n        if (used == 0) {\n            int max = Integer.MIN_VALUE;\n            for (int x : nums) {\n                max = Math.max(max, x);\n            }\n            return max;\n        }\n        return sum;\n    }\n}","author":"sahasrad","submissionId":"1575080703"},[{"id":"466","similarity":0.7368421052631579,"totOverlap":42,"longestOverlap":15},{"id":"17","similarity":0.7454545454545455,"totOverlap":41,"longestOverlap":9}]],"150":[{"id":"150","fileName":"1575080915.txt","sourceCode":"class Solution {\n  public int maxSum(int[] nums) {\n    HashSet<Integer> seen = new HashSet<>();\n    int res = 0, maxNeg = Integer.MIN_VALUE;\n    for (int num : nums) {\n      if (num <= 0) {\n        maxNeg = Math.max(maxNeg, num);\n        continue;\n      }\n      if (seen.add(num)) res += num;\n    }\n\n    if (seen.isEmpty()) return maxNeg;\n    return res;\n  }\n}","author":"DCDC","submissionId":"1575080915"},[{"id":"150","similarity":0.746268656716418,"totOverlap":50,"longestOverlap":13}]],"151":[{"id":"151","fileName":"1575080951.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for(int x : nums){\n            if(x >=0) set.add(x);\n        }\n\n\n        if(set.isEmpty()){\n            int max = -101;\n            for(int x : nums) max = Math.max(max, x);\n            return max;\n        }\n\n        int ans = 0;\n        for(int x : set) ans +=x;\n        return ans;\n    }\n}","author":"Nikhil Agrawal","submissionId":"1575080951"},[{"id":"829","similarity":0.9846153846153847,"totOverlap":64,"longestOverlap":22},{"id":"151","similarity":0.8923076923076924,"totOverlap":58,"longestOverlap":18}]],"173":[{"id":"173","fileName":"1575081115.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<>();\n        for (int n: nums) {\n            if (n >= 0) {\n                set.add(n);\n            }\n        }\n        if (set.size() == 0) {\n            int max = -101;\n            for (int n: nums) {\n                max = Math.max(max, n);\n            }\n            return max;\n        }\n        int sum = 0;\n        for (int s: set) {\n            sum += s;\n        }\n        return sum;\n    }\n}","author":"aagoran","submissionId":"1575081115"},[{"id":"1230","similarity":0.8955223880597015,"totOverlap":60,"longestOverlap":14},{"id":"1672","similarity":0.8571428571428571,"totOverlap":60,"longestOverlap":20},{"id":"1230","similarity":0.8939393939393939,"totOverlap":59,"longestOverlap":22},{"id":"479","similarity":0.8923076923076924,"totOverlap":58,"longestOverlap":18},{"id":"848","similarity":0.8787878787878788,"totOverlap":58,"longestOverlap":21},{"id":"1023","similarity":0.7466666666666667,"totOverlap":56,"longestOverlap":12},{"id":"1267","similarity":0.8333333333333334,"totOverlap":55,"longestOverlap":11},{"id":"479","similarity":0.7638888888888888,"totOverlap":55,"longestOverlap":12},{"id":"699","similarity":0.7857142857142857,"totOverlap":55,"longestOverlap":13},{"id":"380","similarity":0.7714285714285715,"totOverlap":54,"longestOverlap":21},{"id":"1516","similarity":0.7105263157894737,"totOverlap":54,"longestOverlap":13},{"id":"889","similarity":0.8181818181818182,"totOverlap":54,"longestOverlap":17},{"id":"1142","similarity":0.7605633802816901,"totOverlap":54,"longestOverlap":18},{"id":"1230","similarity":0.7794117647058824,"totOverlap":53,"longestOverlap":12},{"id":"1417","similarity":0.7910447761194029,"totOverlap":53,"longestOverlap":18},{"id":"256","similarity":0.8125,"totOverlap":52,"longestOverlap":16},{"id":"596","similarity":0.7027027027027027,"totOverlap":52,"longestOverlap":12},{"id":"1230","similarity":0.7647058823529411,"totOverlap":52,"longestOverlap":14},{"id":"1057","similarity":0.7027027027027027,"totOverlap":52,"longestOverlap":14},{"id":"784","similarity":0.75,"totOverlap":51,"longestOverlap":12},{"id":"881","similarity":0.7391304347826086,"totOverlap":51,"longestOverlap":13},{"id":"889","similarity":0.7846153846153846,"totOverlap":51,"longestOverlap":12},{"id":"1672","similarity":0.7391304347826086,"totOverlap":51,"longestOverlap":12},{"id":"1417","similarity":0.7846153846153846,"totOverlap":51,"longestOverlap":18},{"id":"1735","similarity":0.746268656716418,"totOverlap":50,"longestOverlap":13},{"id":"1014","similarity":0.746268656716418,"totOverlap":50,"longestOverlap":13},{"id":"1165","similarity":0.7352941176470589,"totOverlap":50,"longestOverlap":12},{"id":"1498","similarity":0.7692307692307693,"totOverlap":50,"longestOverlap":19},{"id":"1142","similarity":0.7205882352941176,"totOverlap":49,"longestOverlap":13},{"id":"1562","similarity":0.7313432835820896,"totOverlap":49,"longestOverlap":17},{"id":"1482","similarity":0.7424242424242424,"totOverlap":49,"longestOverlap":12},{"id":"986","similarity":0.7313432835820896,"totOverlap":49,"longestOverlap":19},{"id":"1154","similarity":0.8448275862068966,"totOverlap":49,"longestOverlap":23},{"id":"1057","similarity":0.7313432835820896,"totOverlap":49,"longestOverlap":18},{"id":"1524","similarity":0.7313432835820896,"totOverlap":49,"longestOverlap":16},{"id":"1111","similarity":0.7058823529411765,"totOverlap":48,"longestOverlap":8},{"id":"421","similarity":0.734375,"totOverlap":47,"longestOverlap":13},{"id":"1218","similarity":0.746031746031746,"totOverlap":47,"longestOverlap":17},{"id":"1561","similarity":0.7014925373134329,"totOverlap":47,"longestOverlap":14},{"id":"1873","similarity":0.7704918032786885,"totOverlap":47,"longestOverlap":22},{"id":"1825","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":15},{"id":"1482","similarity":0.71875,"totOverlap":46,"longestOverlap":16},{"id":"453","similarity":0.703125,"totOverlap":45,"longestOverlap":11},{"id":"1854","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":8},{"id":"1783","similarity":0.703125,"totOverlap":45,"longestOverlap":12},{"id":"1165","similarity":0.7333333333333333,"totOverlap":44,"longestOverlap":12},{"id":"1528","similarity":0.7166666666666667,"totOverlap":43,"longestOverlap":17},{"id":"1498","similarity":0.7017543859649122,"totOverlap":40,"longestOverlap":7},{"id":"1320","similarity":0.7142857142857143,"totOverlap":40,"longestOverlap":11},{"id":"1537","similarity":0.7142857142857143,"totOverlap":40,"longestOverlap":9}]],"212":[{"id":"212","fileName":"1575081474.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int max = Integer.MIN_VALUE;\n        for(int n : nums){\n            if(n >= 0)\n                set.add(n);\n            max = Math.max(max, n);\n        }\n        if(set.isEmpty()){\n            return max;\n        }\n        int res = 0;\n        for(int s: set){\n            res += s;\n        }\n        return res;\n    }\n}","author":"nickee1942","submissionId":"1575081474"},[{"id":"1417","similarity":0.8636363636363636,"totOverlap":57,"longestOverlap":18},{"id":"435","similarity":0.835820895522388,"totOverlap":56,"longestOverlap":12},{"id":"212","similarity":0.8,"totOverlap":56,"longestOverlap":21}]],"217":[{"id":"217","fileName":"1575081468.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> hp = new HashSet<>();\n        Arrays.sort(nums);\n        for(int i:nums)\n            {\n                if(i>=0)\n                    hp.add(i);\n            }\n\n        if(hp.size()>0)\n        {\n            int sum = 0;\n            for(int i:hp)\n                sum+=i;\n\n            return sum;\n        }\n        else\n            return nums[nums.length-1];\n        \n    }\n}","author":"tushar19280","submissionId":"1575081468"},[{"id":"217","similarity":0.7638888888888888,"totOverlap":55,"longestOverlap":12}]],"256":[{"id":"256","fileName":"1575081773.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set=new HashSet<>();\n        int max=Integer.MIN_VALUE;\n        for(int i:nums){\n            max=Math.max(i,max);\n            if(i>0)set.add(i);\n        }\n        if(max<0){\n            return max;\n        }\n        int sum=0;\n        for(int x:set){\n            sum+=x;\n        }\n        return sum;\n    }\n}","author":"Aditya Chauhan","submissionId":"1575081773"},[{"id":"212","similarity":0.8125,"totOverlap":52,"longestOverlap":16}]],"290":[{"id":"290","fileName":"1575081967.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer>set=new HashSet<>();\n        int sum=0;\n        int min=Integer.MIN_VALUE;\n        for(int a:nums){\n            if(set.contains(a)) continue;\n            if(a<0){\n                min=Math.max(min,a);\n                continue;\n            }\n            sum+=a;\n            set.add(a);\n        }\n        if(set.size()==0) sum+=min;\n        return sum;\n    }\n}","author":"user2134Ue","submissionId":"1575081967"},[{"id":"290","similarity":0.746031746031746,"totOverlap":47,"longestOverlap":17}]],"297":[{"id":"297","fileName":"1575082023.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set=new HashSet<>();\n        int max=-101;\n        for(int i:nums) {\n            max=Math.max(max,i);\n            set.add(i);\n        }\n        int sum=0;\n        for(int i:set) if(i>0) sum+=i;\n        return max<0?max:sum;\n    }\n}","author":"Om Mehrotra","submissionId":"1575082023"},[{"id":"297","similarity":0.7205882352941176,"totOverlap":49,"longestOverlap":13}]],"333":[{"id":"333","fileName":"1575082226.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> positives = new HashSet<>();\n        boolean hasZero = false;\n        int maxNeg = Integer.MIN_VALUE;\n        \n        for (int num : nums) {\n            if (num > 0) {\n                positives.add(num);\n            } else if (num == 0) {\n                hasZero = true;\n            } else {\n                maxNeg = Math.max(maxNeg, num);\n            }\n        }\n        \n        if (!positives.isEmpty()) {\n            int sum = 0;\n            for (int pos : positives) {\n                sum += pos;\n            }\n            return sum;\n        }\n        if (hasZero) {\n            return 0;\n        }\n        return maxNeg;\n    }\n}","author":"Ashwin Kumar","submissionId":"1575082226"},[{"id":"333","similarity":0.7027027027027027,"totOverlap":52,"longestOverlap":12}]],"344":[{"id":"344","fileName":"1575082286.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> st = new HashSet<>();\n        int maxVal = nums[0];\n        for(int val : nums) {\n            if(val>=0) {\n                st.add(val);\n            }\n            maxVal = Math.max(maxVal,val);\n        }\n        if(st.size()>0) {\n            int sum = 0;\n            for(int val : st) {\n                sum += val;\n            }\n            return sum;\n        } else {\n            return maxVal;\n        }\n    }\n}","author":"Jaydutt","submissionId":"1575082286"},[{"id":"344","similarity":0.7794117647058824,"totOverlap":53,"longestOverlap":12}]],"349":[{"id":"349","fileName":"1575082339.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> hs= new HashSet();\n        int maxNeg= Integer.MIN_VALUE;\n        int ans=0;\n        for(int x: nums){\n            if(x>=0) hs.add(x);\n            maxNeg= Math.max(maxNeg, x);\n        }\n        if(maxNeg<=0) return maxNeg; \n        for(int x: hs) ans+= x;\n        return ans;\n    }\n}","author":"Kook12","submissionId":"1575082339"},[{"id":"476","similarity":0.7121212121212122,"totOverlap":47,"longestOverlap":13},{"id":"349","similarity":0.703125,"totOverlap":45,"longestOverlap":11}]],"380":[{"id":"380","fileName":"1575082547.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int max = Integer.MIN_VALUE;\n        for (int i : nums) {\n            \n            if (i > 0) set.add(i);\n            else {\n                max = Math.max(i, max);\n            }\n        }\n        int sum = 0;\n        for (int i : set) sum += i;\n        if (set.isEmpty()) {\n            return max;\n        }\n        return sum;\n    }\n}","author":"Di Ha","submissionId":"1575082547"},[{"id":"212","similarity":0.7714285714285715,"totOverlap":54,"longestOverlap":21}]],"387":[{"id":"387","fileName":"1575082606.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int num : nums) {\n            set.add(num);\n        }\n        int ans = 0;\n        boolean allNegative = true;\n        int max = Integer.MIN_VALUE;\n        for (int num : set) {\n            max = Math.max(max, num);\n            if (num >= 0) {\n                allNegative = false;\n                ans += num; \n            }\n        }\n        \n        if (allNegative) {\n            return max;\n        }\n        \n        return ans;\n    }\n}","author":"DestyFog","submissionId":"1575082606"},[{"id":"940","similarity":0.7681159420289855,"totOverlap":53,"longestOverlap":15},{"id":"777","similarity":0.7162162162162162,"totOverlap":53,"longestOverlap":12}]],"421":[{"id":"421","fileName":"1575082848.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int sum = 0;\n        int max = Integer.MIN_VALUE;\n        for(int num : nums) {\n            max = Math.max(max, num);\n            if(num >= 0) {\n                if(!set.contains(num)) {\n                    set.add(num);\n                    sum += num;\n                }\n            }\n        }\n        if(max<0){\n            return max;\n        }\n        return sum;\n    }\n}","author":"hsujc513","submissionId":"1575082848"},[{"id":"256","similarity":0.734375,"totOverlap":47,"longestOverlap":13}]],"435":[{"id":"435","fileName":"1575082896.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> unique = new HashSet<>();\n        for(int num : nums) {\n            if(num < 0) continue;\n            unique.add(num);\n        }\n\n        if(unique.isEmpty()) {\n            int maxNegative = Integer.MIN_VALUE;\n            for(int num : nums)  {\n                if(num >= 0 ) continue;\n                maxNegative = Math.max(maxNegative, num);\n            }\n            return maxNegative;\n        }\n\n        int sum = 0;\n        for(int num : unique)  {\n            sum += num;\n        }\n\n        \n        \n        return sum;\n    }\n}","author":"pianomyn","submissionId":"1575082896"},[{"id":"212","similarity":0.835820895522388,"totOverlap":56,"longestOverlap":12}]],"453":[{"id":"453","fileName":"1575083016.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> hs = new HashSet<>();\n        int max = -1001;\n        for(int num : nums) {\n            if(num>0)\n                hs.add(num);\n            max = Math.max(max, num);\n        }\n        if(max<0)\n            return max;\n        int ans = 0;\n        for(int num : hs)\n            ans+=num;\n        return ans;\n    }\n}","author":"yashwanth73","submissionId":"1575083016"},[{"id":"453","similarity":0.7391304347826086,"totOverlap":51,"longestOverlap":13}]],"466":[{"id":"466","fileName":"1575083135.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int min = -101;\n        int sum = 0;\n        Set<Integer> set = new HashSet<>();\n\n        for(int num:nums){\n            min = Math.max(min, num);\n            set.add(num);\n        }\n\n        for(int num:set){\n            if(num>0)\n                sum += num;\n        }\n\n        return sum>0?sum:min;\n    }\n}","author":"Manali","submissionId":"1575083135"},[{"id":"122","similarity":0.7368421052631579,"totOverlap":42,"longestOverlap":15}]],"476":[{"id":"476","fileName":"1575083253.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet();\n        int max = Integer.MIN_VALUE;\n        for(int num:nums){\n            if(num>0)set.add(num);\n            max=Math.max(max,num);\n        }\n        int res = 0;\n        if(set.size()>0){\n            for(int n:set)res+=n;\n        return res;\n        }\n        return max;\n        \n    }\n}","author":"siddarth singh","submissionId":"1575083253"},[{"id":"349","similarity":0.7121212121212122,"totOverlap":47,"longestOverlap":13}]],"479":[{"id":"479","fileName":"1575083285.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> hs = new HashSet<>();\n        for(int i:nums) {\n            if(i>0) hs.add(i);\n        }\n        if(hs.size()==0) {\n            int min = Integer.MIN_VALUE;\n            for(int i:nums) min = Math.max(min,i);\n            return min;\n        }\n        int sum=0;\n        for(int i:hs) sum+=i;\n        return sum;\n    }\n}","author":"Ram Koushik Mendru","submissionId":"1575083285"},[{"id":"486","similarity":0.9375,"totOverlap":60,"longestOverlap":30},{"id":"486","similarity":0.8939393939393939,"totOverlap":59,"longestOverlap":22}]],"486":[{"id":"486","fileName":"1575083374.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<>();\n        for(int x : nums) {\n            if(x >= 0) \n                set.add(x);\n        }\n        if(set.size() == 0) {\n            int max = Integer.MIN_VALUE;\n            for(int x : nums) max = Math.max(max, x);\n            return max;\n        }\n        int ans = 0;\n        for(int x : set) {\n            ans += x;\n        }\n        return ans;\n    }\n}","author":"chubbyseal","submissionId":"1575083374"},[{"id":"479","similarity":0.9375,"totOverlap":60,"longestOverlap":30}]],"494":[{"id":"494","fileName":"1575083433.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> res = new HashSet<>();\n        boolean hasPositive = false;\n        for (int num : nums) {\n            if (num > 0) {\n                hasPositive = true;\n                res.add(num);\n            }\n        }\n        if (hasPositive) {\n            int sum = 0;\n            for (int num : res) {\n                sum += num;\n            }\n            return sum;\n        }\n        int max = nums[0];\n        for (int num : nums) {\n            max = Math.max(max, num);\n        }\n        return max;\n    }\n}","author":"Aspirin-","submissionId":"1575083433"},[{"id":"892","similarity":0.7714285714285715,"totOverlap":54,"longestOverlap":12},{"id":"1733","similarity":0.7464788732394366,"totOverlap":53,"longestOverlap":11},{"id":"494","similarity":0.7647058823529411,"totOverlap":52,"longestOverlap":14}]],"584":[{"id":"584","fileName":"1575083960.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> usedNumbers = new HashSet<>();\n        int result = 0;\n        for (int num : nums) {\n            if (!usedNumbers.contains(num) && num > 0) {\n                usedNumbers.add(num);\n                result += num;\n            }\n        }\n\n        if (result == 0) {\n            int maxValue = Integer.MIN_VALUE;\n            for (int num : nums) {\n                if (num > maxValue) {\n                    maxValue = num;\n                }\n            }\n\n            result = maxValue;\n        }\n\n        return result;\n    }\n}","author":"Stanislau2","submissionId":"1575083960"},[{"id":"584","similarity":0.71875,"totOverlap":46,"longestOverlap":16}]],"596":[{"id":"596","fileName":"1575084053.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set=new HashSet<>();\n        int max=Integer.MIN_VALUE;\n        for(int e: nums) {\n            if(e>0) {\n                set.add(e);\n            } else {\n                max=Math.max(e,max);\n            }\n        }\n        if(set.size()==0) {\n            return max;\n        }\n        int sum=0;\n        for(int e :set) {\n            sum+=e;\n        }\n        return sum;\n    }\n}","author":"Swastik Bose","submissionId":"1575084053"},[{"id":"596","similarity":0.7857142857142857,"totOverlap":55,"longestOverlap":13}]],"603":[{"id":"603","fileName":"1575084062.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int minNeg = Integer.MIN_VALUE;\n        for(int num: nums) if(num >= 0) set.add(num); else minNeg = Math.max(minNeg, num);\n        int ans = 0;\n        \n        if(set.size() == 0) {\n            return minNeg;\n        }\n        for(int v: set) ans += v;\n        return ans;\n    }\n}","author":"Saurabh_082","submissionId":"1575084062"},[{"id":"603","similarity":0.7402597402597403,"totOverlap":57,"longestOverlap":16}]],"604":[{"id":"604","fileName":"1575084068.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> hs=new HashSet<>();\n        int ans=0,c=-101,v=0;\n        for(int n:nums){\n            if(n>c)c=n;\n            if(n<0||hs.contains(n))continue;\n            v++;\n            ans +=n;\n            hs.add(n);\n        }\n        if(v==0)return c;\n        return ans;\n    }\n}","author":"chinnamsaireddy1369","submissionId":"1575084068"},[{"id":"731","similarity":0.7758620689655172,"totOverlap":45,"longestOverlap":14},{"id":"731","similarity":0.7333333333333333,"totOverlap":44,"longestOverlap":12}]],"609":[{"id":"609","fileName":"1575084087.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max = -200;\n        int sum=0;\n        HashSet<Integer> set = new HashSet<>();\n        for(int i : nums){\n            if(i>=0 && set.contains(i)==false ){\n                sum+=i;\n            }\n            max=Math.max(i,max);\n            set.add(i); \n        }\n        if(max<0){\n            return max;\n        }\n        return sum;\n    }\n}","author":"TechDeck","submissionId":"1575084087"},[{"id":"466","similarity":0.7692307692307693,"totOverlap":40,"longestOverlap":15}]],"620":[{"id":"620","fileName":"1575084175.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<>();\n        int sumPositive = 0, max = Integer.MIN_VALUE;\n        for(int i:nums){\n            if(i>0&&!set.contains(i))sumPositive+=i;\n            set.add(i);\n            max = Math.max(max,i);\n        }\n        return sumPositive>0?sumPositive:max;\n    }\n}","author":"mundadamarmik","submissionId":"1575084175"},[{"id":"120","similarity":0.7761194029850746,"totOverlap":52,"longestOverlap":13}]],"633":[{"id":"633","fileName":"1575084258.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int len = nums.length, deleted = 0;\n        Set<Integer> set = new HashSet<>();\n        int res = 0;\n        for (int num : nums) {\n            if (num <= 0) {\n                deleted++;\n                continue;\n            }\n            if (!set.contains(num)) {\n                res += num;\n                set.add(num);\n            } else {\n                deleted++;\n            }\n        }\n        if (deleted == len) {\n            int max = Integer.MIN_VALUE;\n            for (int num : nums) {\n                max = Math.max(max, num);\n            }\n            return max;\n        }\n        return res;\n    }\n}","author":"jizhengfei","submissionId":"1575084258"},[{"id":"1067","similarity":0.7058823529411765,"totOverlap":48,"longestOverlap":8},{"id":"1067","similarity":0.7058823529411765,"totOverlap":48,"longestOverlap":8}]],"640":[{"id":"640","fileName":"1575084299.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int sum = 0;\n        HashSet<Integer> set = new HashSet<>();\n        for(int e : nums){\n            if(e>0 && !set.contains(e)){\n                sum += e;\n                set.add(e);\n            }\n        }\n        if(set.size()==0){\n            int max = nums[0];\n            for(int e : nums){\n                max = Math.max(max, e);\n            }\n            return max;\n        }\n        return sum;\n    }\n}","author":"Rajendar Meti","submissionId":"1575084299"},[{"id":"703","similarity":0.7761194029850746,"totOverlap":52,"longestOverlap":13},{"id":"640","similarity":0.7647058823529411,"totOverlap":52,"longestOverlap":12}]],"696":[{"id":"696","fileName":"1575084643.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> hs = new HashSet<>();\n        int res = 0;\n        int maxN = Integer.MIN_VALUE;\n        for (int i : nums) {\n            if (i >= 0 && !hs.contains(i)) {\n                res+=i;\n                hs.add(i);\n            } else if (i < 0) {\n                if (i > maxN) {\n                    maxN = i;\n                }\n            }\n        }\n        if (res == 0 && !hs.contains(0) && maxN != Integer.MIN_VALUE) {\n            return maxN;\n        }\n        return res;\n    }\n}","author":"Shubham","submissionId":"1575084643"},[{"id":"963","similarity":0.7272727272727273,"totOverlap":56,"longestOverlap":14},{"id":"998","similarity":0.7397260273972602,"totOverlap":54,"longestOverlap":11},{"id":"1215","similarity":0.7397260273972602,"totOverlap":54,"longestOverlap":16},{"id":"120","similarity":0.7123287671232876,"totOverlap":52,"longestOverlap":13}]],"699":[{"id":"699","fileName":"1575084666.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer>s = new HashSet<>();\n        int positive = 0;\n        int max = -101;\n        for(int i:nums){\n            if(i>=0){\n                s.add(i);\n            }\n            else{\n                max = Math.max(max,i);\n            }       \n        }\n        \n        if(s.size()==0) return max;\n        int sum = 0;\n        for(int i:s)\n        {\n            sum+=i;\n        }\n        return sum;\n    }\n}","author":"Slot","submissionId":"1575084666"},[{"id":"881","similarity":0.7972972972972973,"totOverlap":59,"longestOverlap":13},{"id":"1023","similarity":0.7435897435897436,"totOverlap":58,"longestOverlap":13},{"id":"1057","similarity":0.8055555555555556,"totOverlap":58,"longestOverlap":26},{"id":"1023","similarity":0.7402597402597403,"totOverlap":57,"longestOverlap":16},{"id":"881","similarity":0.8,"totOverlap":56,"longestOverlap":21},{"id":"848","similarity":0.7466666666666667,"totOverlap":56,"longestOverlap":12}]],"703":[{"id":"703","fileName":"1575084671.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        \n        \n        HashSet<Integer> s = new HashSet<>();\n       \n        int res = 0;\n        for(int e : nums){\n            if (e > 0 && !s.contains(e)){\n                res += e;\n                s.add(e);\n            }\n        }\n        if(s.size() == 0){\n            res = nums[0];\n            for(int e : nums){\n                res = Math.max(res,e);\n            }    \n        }\n        return res;\n    }\n}","author":"Navpreet Singh","submissionId":"1575084671"},[{"id":"640","similarity":0.7761194029850746,"totOverlap":52,"longestOverlap":13}]],"731":[{"id":"731","fileName":"1575084858.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer>set=new HashSet<>();\n        int count=0;\n        for(int i:nums){\n            if(i<=0 ||set.contains(i))continue;\n            count+=i;\n            set.add(i);\n        }\n        if(count==0){\n            count=Integer.MIN_VALUE;\n            for(int i:nums)count=Math.max(i,count);\n        }\n        return count;\n    }\n}","author":"VISHNU VARDHAN","submissionId":"1575084858"},[{"id":"604","similarity":0.7758620689655172,"totOverlap":45,"longestOverlap":14}]],"734":[{"id":"734","fileName":"1575084922.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max = Integer.MIN_VALUE;\n        Set<Integer> s = new HashSet<>();\n        for (int n : nums) {\n            max = Math.max(max, n);\n            s.add(n);\n        }\n        if (max < 0) return max;\n        int sum = 0;\n        for (int n : s) {\n            if (n > 0) {\n                sum += n;\n            }\n        }\n        return sum;\n    }\n}","author":"Neighbor1","submissionId":"1575084922"},[{"id":"1854","similarity":0.8,"totOverlap":48,"longestOverlap":13},{"id":"453","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":8}]],"738":[{"id":"738","fileName":"1575084933.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> hs= new HashSet<>();\n        Arrays.sort(nums);\n        for( int i : nums){\n            if(i>0)\n            hs.add(i);\n        }\n        \n        int ans=0;\n        \n        for(int i: hs){\n            ans+=i;\n        }\n        \n        if(hs.size()==0){\n            return nums[nums.length-1];\n        }\n        \n        return ans;\n    }\n}","author":"kishan963","submissionId":"1575084933"},[{"id":"1280","similarity":0.7428571428571429,"totOverlap":52,"longestOverlap":12},{"id":"738","similarity":0.7846153846153846,"totOverlap":51,"longestOverlap":12}]],"753":[{"id":"753","fileName":"1575085025.txt","sourceCode":"import java.util.HashSet;\n\nclass Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<>();\n        for (int num : nums) {\n            set.add(num);\n        }\n        \n        int max = Integer.MIN_VALUE;\n        for (int num : set) {\n            max = Math.max(max, num);\n        }\n        \n        if (max < 0) {\n            return max;\n        }\n        \n        int sum = 0;\n        for (int num : set) {\n            if (num > 0) {\n                sum += num;\n            }\n        }\n        \n        return sum;\n    }\n}\n","author":"Ayush Rawat","submissionId":"1575085025"},[{"id":"753","similarity":0.7391304347826086,"totOverlap":51,"longestOverlap":12}]],"777":[{"id":"777","fileName":"1575085278.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> s = new HashSet<>();\n        int max = Integer.MIN_VALUE;\n        int count = 0;\n        for(int n : nums){\n            s.add(n);\n            if(n <= 0) max = Math.max(max, n);\n        }\n\n        int sum = 0;\n        for(int x : s){\n            if(x > 0) {\n                sum += x;\n                count++;\n            }\n        }\n        if(count == 0) sum += max;\n        return sum;\n    }\n}","author":"Aakash Verma","submissionId":"1575085278"},[{"id":"777","similarity":0.7297297297297297,"totOverlap":54,"longestOverlap":20}]],"784":[{"id":"784","fileName":"1575085304.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        boolean flag = false;\n        int max = Integer.MIN_VALUE;\n        int res = 0;\n        for (int num: nums) {\n            if (set.add(num) && num >= 0) {\n                res += num;\n                flag = true;\n            }\n            max = Math.max(max, num);\n        }\n\n        return flag ? res : max;\n    }\n}","author":"YanJF","submissionId":"1575085304"},[{"id":"120","similarity":0.75,"totOverlap":51,"longestOverlap":12}]],"829":[{"id":"829","fileName":"1575085652.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> hs = new HashSet<>();\n        for(int num : nums){\n            if(num >= 0)\n                hs.add(num);\n        }\n        \n        if(hs.isEmpty()){\n            int maxNum = Integer.MIN_VALUE;\n            for(int num : nums)\n                maxNum = Math.max(maxNum, num);\n            return maxNum;\n        }\n        \n        int sum = 0;\n        for(int num : hs)\n            sum += num;\n    \n        return sum;\n    }\n}","author":"MOHANKUMAR M G","submissionId":"1575085652"},[{"id":"151","similarity":0.9846153846153847,"totOverlap":64,"longestOverlap":22}]],"830":[{"id":"830","fileName":"1575085645.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int sum = 0;\n        \n        Set<Integer> used = new HashSet<>();\n        \n        int max = Integer.MIN_VALUE;\n        \n        for (int i : nums) {\n            if (i > 0) {\n                if (!used.contains(i)) {\n                    sum += i;\n                    used.add(i);\n                }\n            }\n            \n            max = Math.max(max, i);\n        }\n        \n        return used.size() == 0 ? max : sum;\n    }\n}","author":"Taranovski","submissionId":"1575085645"},[{"id":"830","similarity":0.7164179104477612,"totOverlap":48,"longestOverlap":12}]],"836":[{"id":"836","fileName":"1575085668.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set=new HashSet<>();\n        int maxi=Integer.MIN_VALUE;\n        int res=0;\n        for(int i:nums){\n            if(i>0 && !set.contains(i)){\n                res+=i;\n                set.add(i);\n            }\n            maxi=Math.max(maxi,i);\n        }\n        if(res==0) return maxi;\n        return res;\n    }\n}","author":"Shiva Ganesh Reddy Linga","submissionId":"1575085668"},[{"id":"120","similarity":0.9142857142857143,"totOverlap":64,"longestOverlap":32}]],"848":[{"id":"848","fileName":"1575085762.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> vals = new HashSet<>();\n        for (int n : nums) {\n            if (n > 0)\n                vals.add(n);\n        }\n        if (vals.size() == 0) {\n            var max = Integer.MIN_VALUE;\n            for (int n : nums) {\n                if (n > max)\n                    max = n;\n            }\n            return max;\n        }\n        int res = 0;\n        for (int n : vals)\n            res += n;\n        return res;\n    }\n}","author":"Srinivas VJ","submissionId":"1575085762"},[{"id":"479","similarity":0.8787878787878788,"totOverlap":58,"longestOverlap":21}]],"881":[{"id":"881","fileName":"1575085968.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> h=new HashSet<>();\n        int maxi=Integer.MIN_VALUE;\n        for(int k:nums){\n            if(k>0)h.add(k);\n           else maxi=Math.max(maxi,k);\n        }\n        if(h.size()==0)return maxi;\n        int sum=0;\n        for(int k:h){\n            sum+=k;\n        }\n        return sum;\n    }\n}","author":"channamsetty sriram","submissionId":"1575085968"},[{"id":"699","similarity":0.7972972972972973,"totOverlap":59,"longestOverlap":13}]],"889":[{"id":"889","fileName":"1575086070.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for(int i : nums){\n            if(i > 0)\n                set.add(i);\n        }\n        int max = Integer.MIN_VALUE;\n        if(set.size()==0){\n            for(int i : nums){\n                max= Math.max(i,max);\n            }\n            return max;\n        }\n        \n        int sum = 0;\n        for(int i : set)\n            sum += i;\n        return sum;\n    }\n}","author":"Sandeep Bhaisora","submissionId":"1575086070"},[{"id":"848","similarity":0.8181818181818182,"totOverlap":54,"longestOverlap":17}]],"892":[{"id":"892","fileName":"1575086075.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> unique = new HashSet<>();\n        int sum = 0;\n        boolean nonNegativeFound = false;\n        for (int num : nums) {\n            if (num >= 0) {\n                nonNegativeFound = true;\n                if (unique.add(num)) {  \n                    sum += num;\n                }\n            }\n        }\n        if (nonNegativeFound) {\n            return sum;\n        }\n        int maxNegative = nums[0];\n        for (int num : nums) {\n            maxNegative = Math.max(maxNegative, num);\n        }\n        return maxNegative;\n    }\n}","author":"SUNDARA VINAYAGAM V","submissionId":"1575086075"},[{"id":"494","similarity":0.7714285714285715,"totOverlap":54,"longestOverlap":12}]],"940":[{"id":"940","fileName":"1575086443.txt","sourceCode":"class Solution {\n    // get all positives, ignore negatives \n    // ignore duplicates\n    // if all negative, pick lowest negative\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for(int i : nums) {\n            set.add(i);\n        }\n\n        boolean allNegative = true;\n        int max = Integer.MIN_VALUE;\n        int sum = 0;\n        for(int i : set) {\n            if(i > 0) {\n                allNegative = false;\n                sum += i;\n            }\n            max = Math.max(max, i);\n        }\n\n        if(allNegative) {\n            return max;\n        }\n\n        return sum;\n    }\n}","author":"Eric Pogash","submissionId":"1575086443"},[{"id":"387","similarity":0.7681159420289855,"totOverlap":53,"longestOverlap":15}]],"959":[{"id":"959","fileName":"1575086587.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int maxi = Integer.MIN_VALUE;\n        int result = 0;\n        for(int n: nums){\n            if(n>=0 && set.add(n)){\n                result+=n;\n            }\n            maxi = Math.max(maxi, n);\n        }\n        return set.size()>0?result:maxi;\n    }\n}","author":"BALAMURUGAN_K","submissionId":"1575086587"},[{"id":"120","similarity":0.8333333333333334,"totOverlap":55,"longestOverlap":21}]],"963":[{"id":"963","fileName":"1575086624.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n\n        HashSet<Integer> hs = new HashSet<>();\n        int res = 0;\n        boolean added = false;\n        int maxNegative = Integer.MIN_VALUE;\n        for(int num: nums){\n            if(num >= 0 && !hs.contains(num)){\n                res += num;\n                hs.add(num);   \n                added = true;\n            }\n            else if(!added && num < 0){\n                maxNegative = Math.max(maxNegative, num);\n            }\n        }\n        return added ? res : maxNegative;\n    }\n}","author":"Atishay Jain","submissionId":"1575086624"},[{"id":"696","similarity":0.7272727272727273,"totOverlap":56,"longestOverlap":14}]],"986":[{"id":"986","fileName":"1575086758.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int sum = 0;\n        int maxNegative = Integer.MIN_VALUE;\n\n        for (int n : nums) {\n            if (n > 0 && set.add(n)) {\n                sum += n;\n            } else if (n > maxNegative) {\n                maxNegative = n;\n            }\n        }\n        return set.size() > 0 ? sum : maxNegative;\n    }\n}","author":"HuangJM926","submissionId":"1575086758"},[{"id":"696","similarity":0.7313432835820896,"totOverlap":49,"longestOverlap":19}]],"998":[{"id":"998","fileName":"1575086882.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<Integer>();\n        int sum = 0;\n        boolean found = false;\n        for(int i:nums){\n            if(i>0 && !set.contains(i)){\n                sum += i;\n                set.add(i);\n                found = true;\n            }\n        }\n        if(!found){\n            int max = Integer.MIN_VALUE;\n            for(int i :nums)\n                 max = Math.max(max,i);\n            sum = max;\n        }\n        return sum;\n    }\n}","author":"Ankith_Kumar","submissionId":"1575086882"},[{"id":"963","similarity":0.7397260273972602,"totOverlap":54,"longestOverlap":11}]],"1012":[{"id":"1012","fileName":"1575086980.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int max = Integer.MIN_VALUE;\n        \n        for (int num : nums) {\n            if (num > 0) {\n                set.add(num);\n            }\n            if (max < num) {\n                max = num;\n            }\n        }\n\n        int res = 0;\n        for (int num : set) {\n            res += num;\n        }\n\n        return res == 0 ? max : res;\n    }\n}","author":"aarons_daniel","submissionId":"1575086980"},[{"id":"1012","similarity":0.7313432835820896,"totOverlap":49,"longestOverlap":18}]],"1014":[{"id":"1014","fileName":"1575087060.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int max = Integer.MIN_VALUE;\n        for (int num : nums) {\n            if (num < 0) {\n                max = Math.max(max, num);\n            } else {\n                set.add(num);\n            }\n        }\n        if (set.isEmpty()) {\n            return max;\n        } else {\n            int sum = 0;\n            for (int val : set) {\n                sum += val;\n            }\n            return sum;\n        }\n    }\n}","author":"Y","submissionId":"1575087060"},[{"id":"1014","similarity":0.7910447761194029,"totOverlap":53,"longestOverlap":18}]],"1023":[{"id":"1023","fileName":"1575087105.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> pos=new HashSet<>();\n        int c0=0;\n        int maxneg=Integer.MIN_VALUE;\n        for(int i:nums){\n            if(i>0) pos.add(i);\n            else if(i==0) c0++;\n            else maxneg=Math.max(maxneg,i);\n        }\n        if(pos.size()==0){\n            if(c0>0) return 0;\n            return maxneg;\n        }\n        int sum=0;\n        for(int i:pos) sum+=i;\n        return sum;\n    }\n}","author":"vg_","submissionId":"1575087105"},[{"id":"881","similarity":0.7435897435897436,"totOverlap":58,"longestOverlap":13}]],"1046":[{"id":"1046","fileName":"1575087269.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int maxxi = Integer.MIN_VALUE;\n        int sum = 0;\n        boolean ans = false;\n        Set<Integer> resultz = new HashSet<>();\n        \n        for (int num : nums) {\n            maxxi = Math.max(maxxi, num);\n            \n            if (num > 0) {\n                if (!resultz.contains(num)) {\n                    resultz.add(num);\n                    sum += num;\n                }\n                ans = true;\n            }\n        }\n        \n\n        return ans ? sum : maxxi;\n    }\n}","author":"Ritik Kumar Sahoo","submissionId":"1575087269"},[{"id":"17","similarity":0.8253968253968254,"totOverlap":52,"longestOverlap":15}]],"1057":[{"id":"1057","fileName":"1575087404.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n    Set<Integer> set = new HashSet<>();\n        int max = Integer.MIN_VALUE;\n        for(int n : nums){\n            if(n>0) set.add(n);\n            else\n                max = Math.max(max, n);\n        }\n        int sum =0;\n        for(int x: set){\n            sum+=x;\n        }\n        \n        if(sum ==0) return max;\n        else return sum;\n    }\n}","author":"Utkarsh Deepak","submissionId":"1575087404"},[{"id":"881","similarity":0.8055555555555556,"totOverlap":58,"longestOverlap":26}]],"1067":[{"id":"1067","fileName":"1575087498.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max = Integer.MIN_VALUE;\n        for(int num: nums)\n            max = Math.max(max, num);\n        if(max < 0)\n            return max;\n        Set<Integer> unique = new HashSet<>();\n        int answer = 0;\n        for(int num: nums){\n            if(num > 0 && !unique.contains(num)){\n                answer += num;\n                unique.add(num);\n            }\n        }\n        return answer;\n    }\n}","author":"venkatkri5h","submissionId":"1575087498"},[{"id":"633","similarity":0.7058823529411765,"totOverlap":48,"longestOverlap":8}]],"1111":[{"id":"1111","fileName":"1575088012.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        return sln1(nums);\n    }\n\n    private int sln1(int[] nums){\n        int n = nums.length;\n        Set set = new HashSet<>();\n        int max = Integer.MIN_VALUE;\n        int sum =0;\n        for(int i: nums){\n            max =  Math.max(i, max);\n            if(i>0 && !set.contains(i)) {\n                sum+=i;\n                set.add(i);\n            }\n        }\n        if(max<0) return max;\n        else return sum;\n    }\n}","author":"REED_W","submissionId":"1575088012"},[{"id":"836","similarity":0.7671232876712328,"totOverlap":56,"longestOverlap":10}]],"1116":[{"id":"1116","fileName":"1575088045.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set=new HashSet<>();\n        int sum=0;\n        for (int n:nums){\n            if(n>0 && !set.contains(n)){\n                set.add(n);\n                sum+=n;\n            }\n        }\n        if(sum==0){\n            Arrays.sort(nums);\n            return nums[nums.length-1];\n        }\n        return sum;\n    }\n}","author":"PRIYANKA","submissionId":"1575088045"},[{"id":"1116","similarity":0.8253968253968254,"totOverlap":52,"longestOverlap":25}]],"1142":[{"id":"1142","fileName":"1575088326.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int maxNeg = Integer.MIN_VALUE;\n        for (int num : nums) {\n            if (num < 0) {\n                maxNeg = Math.max(maxNeg, num);\n                continue;\n            }\n            set.add(num);\n        }\n        int res = 0;\n        for (int v : set) {\n            res += v;\n        }\n        if (set.size() == 0) {\n            return maxNeg;\n        }\n        return res;\n    }\n}","author":"googlehsiehhh","submissionId":"1575088326"},[{"id":"1057","similarity":0.7605633802816901,"totOverlap":54,"longestOverlap":18}]],"1154":[{"id":"1154","fileName":"1575088460.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<>();\n        int ans = 0;\n        int max = Integer.MIN_VALUE;\n        for(int num:nums) {\n            if(num>=0 && set.add(num)) {\n                ans += num;\n            }\n            max = Math.max(max, num);\n        }\n        if(!set.isEmpty()) {\n            return ans;\n        } else {\n            return max;\n        }\n    }\n}","author":"bals","submissionId":"1575088460"},[{"id":"1637","similarity":0.9,"totOverlap":54,"longestOverlap":26},{"id":"986","similarity":0.8448275862068966,"totOverlap":49,"longestOverlap":23}]],"1165":[{"id":"1165","fileName":"1575088635.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for(int i : nums){\n            if(i>0)set.add(i);\n        }\n        int ans = 0;\n        for(int i : set) ans += i;\n        if(ans==0){\n            ans = Integer.MIN_VALUE;\n            for(int i : nums) ans = Math.max(ans, i);\n        }\n        return ans;\n    }\n}","author":"Sudeap Thapa","submissionId":"1575088635"},[{"id":"380","similarity":0.7352941176470589,"totOverlap":50,"longestOverlap":12}]],"1215":[{"id":"1215","fileName":"1575089192.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> st = new HashSet<>();\n        int sum = 0;\n        boolean found = false;\n        for(int n: nums) {\n            if(n > 0 && !st.contains(n)) {\n                sum += n;\n                found = true;\n            }\n            st.add(n);\n        }\n\n        if(found == false) {\n            sum = Integer.MIN_VALUE;\n            for(int n: nums) {\n               sum = Math.max(sum, n);\n            }    \n        }\n\n\n        return sum;\n    }\n}","author":"Lovepreet Singh","submissionId":"1575089192"},[{"id":"963","similarity":0.7397260273972602,"totOverlap":54,"longestOverlap":16}]],"1218":[{"id":"1218","fileName":"1575089231.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> inc = new HashSet<>();\n        int sum = 0;\n        int max = Integer.MIN_VALUE;\n        for (int num : nums) {\n            if (num > 0) {\n                if (inc.contains(num)) continue;\n                // System.out.println(num);\n                sum += num;\n                inc.add(num);\n            }\n            max = Math.max(num, max);\n        }\n\n        if (max < 0) {\n            sum = max;\n        }\n\n        return sum;\n    }\n}","author":"PecManO2","submissionId":"1575089231"},[{"id":"1218","similarity":0.7846153846153846,"totOverlap":51,"longestOverlap":18}]],"1230":[{"id":"1230","fileName":"1575089380.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<>();\n        for(int el: nums) {\n            if(el > 0) set.add(el);\n        }\n\n        if(set.size() == 0) {\n            int mx = nums[0];\n            for(int el: nums) {\n                mx = Math.max(mx, el);\n            }\n            return mx;\n        }\n\n        int sum = 0;\n        for(int el: set) {\n            sum += el;\n        }\n\n        return sum;\n    }\n}","author":"Jayakrishna Paripelli","submissionId":"1575089380"},[{"id":"173","similarity":0.8955223880597015,"totOverlap":60,"longestOverlap":14}]],"1267":[{"id":"1267","fileName":"611225421.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<Integer>();\n        int max = -100;\n        for(int x : nums) {\n            max = Math.max(max, x);\n            if(x >= 0) {\n                set.add(x);\n            }\n        }\n        if(set.size() > 0) {\n            int sum = 0;\n            for(int x : set) {\n                sum += x;\n            }\n            return sum;\n        }\n        return max;\n    }\n}","author":"天塘","submissionId":"611225421"},[{"id":"173","similarity":0.8333333333333334,"totOverlap":55,"longestOverlap":11}]],"1280":[{"id":"1280","fileName":"611225534.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        // 不能空，大于等于0的全留下\n        // 负数看情况\n        List<Integer> fu = new ArrayList<>();\n        Set<Integer> set = new HashSet<>();\n        for (int n : nums) {\n            if (n < 0) {\n                fu.add(n);\n            } else {\n                set.add(n);\n            }\n        }\n        fu.sort((a, b) -> b - a);\n        int ans = 0;\n        for (int s : set) {\n            ans += s;\n        }\n        if (set.size() == 0) {\n            ans += fu.get(0);\n        }\n        return ans;\n    }\n}","author":"欧海","submissionId":"611225534"},[{"id":"738","similarity":0.7428571428571429,"totOverlap":52,"longestOverlap":12}]],"1320":[{"id":"1320","fileName":"611225792.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int sum = 0, max = Integer.MIN_VALUE;\n        HashSet<Integer> used = new HashSet<>();\n        for (int x : nums) {\n            if (x > 0 && !used.contains(x)) {\n                used.add(x);\n                sum += x;\n            }\n            max = Math.max(max, x);\n        }\n        if (max <= 0) return max;\n        return sum;\n    }\n}","author":"Funny Ben2Gom","submissionId":"611225792"},[{"id":"1116","similarity":0.7142857142857143,"totOverlap":40,"longestOverlap":11}]],"1417":[{"id":"1417","fileName":"611226448.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int maxValue = Integer.MIN_VALUE;\n        for (int num : nums) {\n            if (num > 0) {\n                set.add(num);\n            }\n            maxValue = Math.max(maxValue, num);\n        }\n        if (set.isEmpty()) {\n            return maxValue;\n        }\n        int answer = 0;\n        for (Integer num : set) {\n            answer += num;\n        }\n        return answer;\n    }\n}","author":"crud_boy","submissionId":"611226448"},[{"id":"212","similarity":0.8636363636363636,"totOverlap":57,"longestOverlap":18}]],"1482":[{"id":"1482","fileName":"611226741.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int res = 0;\n        for (int x : nums) {\n            if (x > 0 && !set.contains(x)) {\n                set.add(x);\n                res += x;\n            }\n        }\n        if (set.isEmpty()) {\n            int max = Integer.MIN_VALUE;\n            for (int x : nums) {\n                max = Math.max(max, x);\n            }\n            return max;\n        }\n        return res;\n    }\n}","author":"橘右京","submissionId":"611226741"},[{"id":"1856","similarity":0.84375,"totOverlap":54,"longestOverlap":24},{"id":"1856","similarity":0.8253968253968254,"totOverlap":52,"longestOverlap":25},{"id":"435","similarity":0.7424242424242424,"totOverlap":49,"longestOverlap":12}]],"1498":[{"id":"1498","fileName":"611226953.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int m=-101,res=0;\n        Set<Integer> s = new HashSet<>();\n        for(int i:nums){\n            if(i>0 && !s.contains(i)){\n                res+=i;\n                s.add(i);\n            }\n            m=Math.max(m,i);\n        }\n        if(res>0)return res;\n        return m;\n    }\n}","author":"delideliBird","submissionId":"611226953"},[{"id":"836","similarity":0.7692307692307693,"totOverlap":50,"longestOverlap":19}]],"1514":[{"id":"1514","fileName":"611227046.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int ret = 0;\n        int ret2 = 0;\n        for (int a : nums) {\n            if (a >= 0) {\n                if (set.add(a)) {\n                    ret += a;\n                }\n            } else {\n                ret2 = ret2 == 0 ? a : Math.max(ret2, a);\n            }\n            \n        }\n        return set.isEmpty() ? ret2 : ret;\n    }\n}","author":"刘子豪","submissionId":"611227046"},[{"id":"1873","similarity":0.7741935483870968,"totOverlap":48,"longestOverlap":14},{"id":"1218","similarity":0.7704918032786885,"totOverlap":47,"longestOverlap":22}]],"1516":[{"id":"1516","fileName":"611227072.txt","sourceCode":"class Solution {\n\tpublic int maxSum(int[] nums) {\n\t\tSet<Integer> numSet = new HashSet<>();\n\t\tint sum = 0;\n\t\tint minMax = Integer.MIN_VALUE;\n\t\tfor (int num : nums) {\n\t\t\tif (num < 0) {\n\t\t\t\tif (minMax < num) {\n\t\t\t\t\tminMax = num;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!numSet.contains(num)) {\n\t\t\t\tsum = sum + num;\n\t\t\t\tnumSet.add(num);\n\t\t\t} else {\n\t\t\t\tnumSet.add(num);\n\t\t\t}\n\t\t}\n\n\t\tif (numSet.isEmpty()) {\n\t\t\treturn minMax;\n\t\t}\n\t\treturn sum;\n\t}\n}","author":"xish","submissionId":"611227072"},[{"id":"380","similarity":0.7105263157894737,"totOverlap":54,"longestOverlap":13}]],"1524":[{"id":"1524","fileName":"611227109.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int ans = 0;\n        boolean flag = false;\n        int mx = -100000;\n        for(int num : nums){\n            if(num > 0 && set.add(num)){\n                ans += num;\n                flag = true;\n            }\n            if(num <= 0){\n                mx = Math.max(mx, num);\n            }\n        }\n        return flag ? ans : mx;\n    }\n}","author":"yangwei","submissionId":"611227109"},[{"id":"1215","similarity":0.7313432835820896,"totOverlap":49,"longestOverlap":16}]],"1528":[{"id":"1528","fileName":"611227145.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int ans = 0, max = Integer.MIN_VALUE;\n        for (int x : nums) {\n            if (set.add(x)) {\n                if (x <= 0) {\n                    max = Math.max(max, x);\n                } else {\n                    ans += x;\n                }\n            }\n        }\n        return ans == 0 ? max : ans;\n    }\n}","author":"秋心","submissionId":"611227145"},[{"id":"620","similarity":0.7166666666666667,"totOverlap":43,"longestOverlap":17}]],"1537":[{"id":"1537","fileName":"611227224.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int sum = 0;\n        int maxElement = Integer.MIN_VALUE;\n        Set<Integer> positive = new HashSet<Integer>();\n        for (int num : nums) {\n            if (num > 0 && positive.add(num)) {\n                sum += num;\n            }\n            maxElement = Math.max(maxElement, num);\n        }\n        if (sum > 0) {\n            return sum;\n        } else {\n            return maxElement;\n        }\n    }\n}","author":"冰淇淋","submissionId":"611227224"},[{"id":"1154","similarity":0.7142857142857143,"totOverlap":40,"longestOverlap":9}]],"1561":[{"id":"1561","fileName":"611227401.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n\t\tSet<Integer> set = new HashSet<>();\n\t\tint res = 0;\n\t\tfor (int i : nums) {\n\t\t\tif (set.add(i)) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tres += i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (res == 0) {\n\t\t\tint max = nums[0];\n\t\t\tfor (int i : nums) {\n\t\t\t\tmax = Math.max(i, max);\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t\treturn res;\n\t\n        \n    }\n}","author":"小灰熊","submissionId":"611227401"},[{"id":"344","similarity":0.7014925373134329,"totOverlap":47,"longestOverlap":14}]],"1562":[{"id":"1562","fileName":"611227421.txt","sourceCode":"class Solution {\n        public int maxSum(int[] nums) {\n            Set<Integer> numSet = new HashSet<>();\n            int max = nums[0];\n            for (int num : nums) {\n                max = Math.max(num,max);\n                if(num>0){\n                    numSet.add(num);\n                }\n            }\n            if(numSet.isEmpty()){\n                return max;\n            }else {\n                int sum = 0;\n                for (Integer num : numSet) {\n                    sum+=num;\n                }\n                return sum;\n            }\n        }\n    }","author":"molquark","submissionId":"611227421"},[{"id":"344","similarity":0.7313432835820896,"totOverlap":49,"longestOverlap":17}]],"1637":[{"id":"1637","fileName":"611228403.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int sum = 0;\n        int max = Integer.MIN_VALUE;\n        for (int i : nums) {\n            if (i >= 0 && set.add(i)) {\n                sum += i;\n            }\n            max = Math.max(max, i);\n        }\n\n        if (set.isEmpty()) return max;\n        return sum;\n    }\n}","author":"吴所知","submissionId":"611228403"},[{"id":"1154","similarity":0.9,"totOverlap":54,"longestOverlap":26}]],"1665":[{"id":"1665","fileName":"611228847.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n=nums.length;\n        int sum=0;\n        HashSet<Integer> set=new HashSet<>();\n        int max=Integer.MIN_VALUE;\n        for(int num:nums){\n            max=Math.max(max,num);\n            if(num>0&&!set.contains(num)){\n                sum+=num;\n                set.add(num);\n            }\n        }\n        if(set.size()==0)return max;\n        return sum;\n    }\n}","author":"111","submissionId":"611228847"},[{"id":"1111","similarity":0.7432432432432432,"totOverlap":55,"longestOverlap":12}]],"1672":[{"id":"1672","fileName":"611228867.txt","sourceCode":"import java.util.HashSet;\nimport java.util.Set;\n\nclass Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int x: nums) {\n            if (x > 0) {\n                set.add(x);\n            }\n        }\n\n        if (set.size() == 0) {\n            int ret = Integer.MIN_VALUE;\n            for (int x: nums) {\n                ret = Math.max(ret, x);\n            }\n            return ret;\n        }\n\n        int ret = 0;\n        for (int x: set) {\n            ret += x;\n        }\n        return ret;\n    }\n}","author":"小白二号","submissionId":"611228867"},[{"id":"173","similarity":0.8571428571428571,"totOverlap":60,"longestOverlap":20}]],"1702":[{"id":"1702","fileName":"611229603.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet();\n        int ans = 0;\n        for(int i : nums){\n            if(i >= 0 && !set.contains(i)){\n                ans += i;\n                set.add(i);\n            }\n        }\n        \n        if(set.size() == 0){\n            int max = -99999;\n            for(int i : nums){\n                max = Math.max(max, i);\n            }\n            return max;\n        }\n        return ans;\n    }\n}","author":"嘉然今天刷力扣","submissionId":"611229603"},[{"id":"703","similarity":0.7428571428571429,"totOverlap":52,"longestOverlap":15}]],"1715":[{"id":"1715","fileName":"611229736.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int cnt = 0;\n        Set<Integer> set = new HashSet<>();\n        for (int num : nums) {\n            if (num >= 0) {\n                if (!set.contains(num)) {\n                    set.add(num);\n                    cnt += num;\n                }\n            }\n        }\n        if (!set.isEmpty()) {\n            return cnt;\n        }\n        int max = Integer.MIN_VALUE;\n        for (int num : nums) {\n            max = Math.max(max, num);\n        }\n        return max;\n    }\n}","author":"wsw","submissionId":"611229736"},[{"id":"17","similarity":0.7619047619047619,"totOverlap":48,"longestOverlap":8}]],"1733":[{"id":"1733","fileName":"611230194.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean hasPositive = false;\n        int sum = 0;\n        Set<Integer> seen = new HashSet<>();\n        for(int num : nums){\n            if(num > 0){\n                hasPositive = true;\n                if(!seen.contains(num)){\n                    sum += num;\n                    seen.add(num);\n                }\n            }\n        }\n        if(hasPositive){\n            return sum;\n        }\n        int maxNum = nums[0];\n        for (int num : nums) {\n            maxNum = Math.max(maxNum, num);\n        }\n        return maxNum;\n    }\n}","author":"Richer","submissionId":"611230194"},[{"id":"892","similarity":0.7464788732394366,"totOverlap":53,"longestOverlap":11}]],"1735":[{"id":"1735","fileName":"611230267.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int max = -101;\n        int ans = 0;\n        for (int x :nums) {\n            max = Math.max(max, x);\n            if (x > 0 && !set.contains(x)) {\n                ans += x;\n                set.add(x);\n            }\n        }\n        return max < 0 ? max : ans;\n    }\n}","author":"白菜小丸子","submissionId":"611230267"},[{"id":"120","similarity":0.746268656716418,"totOverlap":50,"longestOverlap":13}]],"1769":[{"id":"1769","fileName":"611232228.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int res = 0;\n        int max = nums[0];\n        for (int num : nums) {\n            if (num > 0 && !set.contains(num)) {\n                res += num;\n                set.add(num);\n            }\n            max = Math.max(max, num);\n        }\n        if (set.size() == 0) {\n            return max;\n        }\n        return res;\n    }\n}","author":"这谁扛得住","submissionId":"611232228"},[{"id":"836","similarity":0.7605633802816901,"totOverlap":54,"longestOverlap":14}]],"1783":[{"id":"1783","fileName":"611233739.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        TreeSet<Integer> set = new TreeSet<>();\n        for(int val: nums){\n            set.add(val);\n        }\n        if(set.last() <= 0) return(set.last());\n        int res = 0;\n        for(int val: set){\n            if(val < 0) continue;\n            res += val;\n        }\n        return(res);\n    }\n}","author":"Jovial TorvaldsDzi","submissionId":"611233739"},[{"id":"699","similarity":0.703125,"totOverlap":45,"longestOverlap":12}]],"1825":[{"id":"1825","fileName":"611239454.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();\n        for (int num : nums) {\n            linkedHashSet.add(num);\n        }\n        boolean contains = false;\n        int sum = 0;\n        int max = Integer.MIN_VALUE;\n        for (int num : linkedHashSet) {\n            max = Math.max(max, num);\n            if (num >= 0) {\n                contains = true;\n                sum = sum + num;\n            }\n        }\n        return contains ? sum : max;\n    }\n}","author":"Java攻城狮","submissionId":"611239454"},[{"id":"387","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":15}]],"1854":[{"id":"1854","fileName":"611246985.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n        HashSet<Integer> set = new HashSet<>();\n        int max = -100000;\n        for (int num : nums) {\n            max = Math.max(max, num);\n        }\n        if (max <= 0) return max;\n        int ans = 0;\n        for (int num : nums) {\n            if (set.contains(num) || num < 0) continue;\n            ans += num;\n            set.add(num);\n        }\n        return ans;\n    }\n}","author":"风铃","submissionId":"611246985"},[{"id":"734","similarity":0.8,"totOverlap":48,"longestOverlap":13}]],"1856":[{"id":"1856","fileName":"611246043.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> cnt = new HashSet<>();\n        int sum = 0;\n        for (int x : nums) {\n            if (x > 0 && !cnt.contains(x)) {\n                cnt.add(x);\n                sum += x;\n            }\n        }\n        if (sum > 0) {\n            return sum;\n        }\n        int res = nums[0];\n        for (int x : nums) {\n            res = Math.max(res, x);\n        }\n        return res;\n    }\n}","author":"不懂语言的崽子","submissionId":"611246043"},[{"id":"1482","similarity":0.84375,"totOverlap":54,"longestOverlap":24}]],"1873":[{"id":"1873","fileName":"611258442.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int sum = 0;\n        int max = Integer.MIN_VALUE;\n        for (int num : nums) {\n            if (num > 0) {\n                if (set.add(num)) {\n                                    sum += num;\n                }\n\n            } else {\n                max = Math.max(max, num);\n            }\n        }\n\n        return set.isEmpty() ? max : sum;\n    }\n}","author":"JIAN","submissionId":"611258442"},[{"id":"1514","similarity":0.7741935483870968,"totOverlap":48,"longestOverlap":14}]]},{"174":[{"id":"174","fileName":"1575081105.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxi=-102,ctr=0;\n        int n=nums.size();\n        map<int,int>ma;\n        for(int i=0;i<n;i++)maxi=max(maxi,nums[i]);\n        for(int i=0;i<n;i++){\n            if(nums[i]>0){\n                ma[nums[i]]++;\n                if(ma[nums[i]]==1)ctr+=nums[i];\n            }\n        }\n        if(ctr)return ctr;\n        return maxi;\n    }\n};","author":"Ayush Mishra","submissionId":"1575081105"},[]]},{"176":[{"id":"176","fileName":"1575081130.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n\n        temp = max(s)\n\n        if temp < 0:\n            return temp\n        ans = 0\n        for i in s:\n            if i > 0:\n                ans += i\n\n        return ans","author":"Amit Bansal","submissionId":"1575081130"},[{"id":"224","similarity":0.9142857142857143,"totOverlap":32,"longestOverlap":14},{"id":"1550","similarity":0.8333333333333334,"totOverlap":30,"longestOverlap":7},{"id":"254","similarity":0.7368421052631579,"totOverlap":28,"longestOverlap":9}]],"224":[{"id":"224","fileName":"1575081527.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums=set(nums)\n        m=max(nums)\n        if m<0:\n            return m\n        s=0\n        # flag=False\n        for i in nums:\n            if i>0:\n                s+=i\n        \n        return s","author":"happy","submissionId":"1575081527"},[{"id":"176","similarity":0.9142857142857143,"totOverlap":32,"longestOverlap":14}]],"254":[{"id":"254","fileName":"1575081760.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        \n\n        s=set(nums)\n\n        l=list(s)\n        if max(l)<=0:\n            return max(l)\n        st=0\n        for i in s:\n            if i>0:\n                st+=i\n\n        return st\n        ","author":"Mahesh Reddy","submissionId":"1575081760"},[{"id":"176","similarity":0.7368421052631579,"totOverlap":28,"longestOverlap":9}]],"1550":[{"id":"1550","fileName":"611227337.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        max_val = max(nums)\n        if max_val < 0:\n            return max_val\n\n        s = set(nums)\n        ans = 0\n        for e in s:\n            if e > 0:\n                ans += e\n        return ans\n","author":"g00dm0rning","submissionId":"611227337"},[{"id":"176","similarity":0.8333333333333334,"totOverlap":30,"longestOverlap":7}]]},{"178":[{"id":"178","fileName":"1575081157.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        return sum([i for i in set(nums) if i > 0] or [max(nums)])\n        ","author":"xy-li","submissionId":"1575081157"},[]]},{"181":[{"id":"181","fileName":"1575081219.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> ss(begin(nums), end(nums));\n\n        int sum = 0;\n\n        for (auto x : ss)\n            if (x > 0)\n                sum += x;\n\n        return sum ? sum : *rbegin(ss);\n    }\n};","author":"ttn","submissionId":"1575081219"},[]]},{"182":[{"id":"182","fileName":"1575081179.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        map<int, bool> seen;\n        int maxmin = INT_MIN;\n        bool flag = false;\n        for (auto el: nums) {\n            if (el < 0) {\n                maxmin = max(el, maxmin);\n                continue;\n            }\n            flag = true;\n            if (seen[el]) continue;\n            sum += el;\n            seen[el] = true;\n        }\n        if (!flag) {\n            sum = maxmin;\n        }\n        return sum;\n    }\n};","author":"Nagender","submissionId":"1575081179"},[]]},{"183":[{"id":"183","fileName":"1575081188.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        vis = set()\n\n        res = 0\n        max_neg = -float('inf')\n\n        for num in nums:\n            if num > 0 and num not in vis:\n                vis.add(num)\n                res += num\n            else:\n                max_neg = max(max_neg, num)\n            \n        return res if res > 0 else max_neg","author":"minson1","submissionId":"1575081188"},[]]},{"184":[{"id":"184","fileName":"1575081249.txt","sourceCode":"class Solution(object):\n    def maxSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        ans = 0\n        \n        sets = set()\n        \n        for num in nums:\n            if num < 0:  continue \n            if num in sets: continue \n            sets.add(num)\n            ans += num\n            \n            \n        if len(sets) == 0:\n            ans = max(nums)\n    \n            \n            \n        return ans\n    ","author":"hxu10","submissionId":"1575081249"},[]]},{"186":[{"id":"186","fileName":"1575081278.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums){\n        int n = nums.size();\n        set<int> st;\n        for(int i=0; i<n; i++)\n            st.insert(nums[i]);\n        \n        int ans = 0;\n        for(auto i : st){\n            if(i>0)\n                ans += i;\n        }\n        \n        if(ans == 0) ans += *st.rbegin();\n        return ans;\n    }\n};","author":"Bhavik Bharambe","submissionId":"1575081278"},[]]},{"189":[{"id":"189","fileName":"1575081269.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        mapp=defaultdict(int)\n        for i in nums:\n            mapp[i]=1\n        final = sorted(mapp.keys())\n        for i in range(len(final)-1):\n            if final[i]>=0:\n                return sum(final[i:])\n        return final[-1]","author":"Deban Kumar Sahu","submissionId":"1575081269"},[]]},{"190":[{"id":"190","fileName":"1575081292.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        //remove negative and duplicates\n        int maxo = INT_MIN;\n        std::unordered_set<int> added;\n        int total = 0;\n        int na = 0;\n\n        for(int i = 0; i < nums.size(); i++){\n            maxo = std::max(maxo, nums[i]);\n            if(nums[i] >= 0){\n                if(added.find(nums[i]) == added.end()){\n                    total += nums[i];\n                    na++;\n                    added.insert(nums[i]);\n                }\n            }\n        }\n        if(na == 0){\n            return maxo;\n        }\n        return total;\n        \n\n        \n    }\n};","author":"d11235813","submissionId":"1575081292"},[]]},{"191":[{"id":"191","fileName":"1575081299.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        l = list(sorted(set(nums)))\n\n        idx = bisect.bisect_left(l, 0)\n        if idx == len(l):\n            return l[-1]\n\n        return sum(l[idx:])","author":"Shuqi Shang","submissionId":"1575081299"},[]]},{"194":[{"id":"194","fileName":"1575081313.txt","sourceCode":"#define rep(i,a,b) for(int i=(a);i<(b);i++)\n#define sz(a) (int)(a).size()\n#define all(a) begin(a),end(a)\ntypedef vector<int> vi;\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vi a(101);\n        for(auto i:nums)if(i>=0)a[i]=1;\n        if(count(all(a),0)==101){\n            return *max_element(all(nums));\n        }\n        int sum=0;\n        rep(i,0,101)sum+=i*a[i];\n        return sum;\n    }\n};","author":"TKTYI","submissionId":"1575081313"},[]]},{"195":[{"id":"195","fileName":"1575081312.txt","sourceCode":"from typing import List\n\n\nclass Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        a = set(nums)\n        m = max(a)\n        if m < 0:\n            return m\n        return sum(x for x in a if x > 0)\n","author":"pikapika","submissionId":"1575081312"},[]]},{"197":[{"id":"197","fileName":"1575081319.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>mp;\n        int ans=-1e7;\n        for(auto x:nums){\n                if(x>=0)mp[x]++;  \n            if(x<0)ans=max(ans,x);\n        }\n        int sum=0;\n        for(auto [x,fr]:mp){\n            sum+=x;\n        }\n        if(mp.size()==0)return ans;\n        return sum;\n    }\n};","author":"hehehe1111","submissionId":"1575081319"},[]]},{"198":[{"id":"198","fileName":"1575081378.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(auto t:nums) {\n            s.insert(t);\n        }\n        int ans = 0;\n        if(*s.rbegin()<0) {\n            ans=*s.rbegin();\n        } else {\n            for(auto t:s) {\n                if(t>0) {\n                    ans+=t;\n                }\n            }\n        }\n        return ans;\n    }\n};","author":"Prateek8696","submissionId":"1575081378"},[{"id":"215","similarity":0.7272727272727273,"totOverlap":40,"longestOverlap":10}]],"215":[{"id":"215","fileName":"1575081482.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(int i : nums) {\n            st.insert(i);\n        }\n\n        int ret = 0;\n        if(*st.rbegin() <= 0) {\n            return *st.rbegin();\n        }\n        for(int i : st) {\n            if(i >= 0) {\n                ret += i;\n            }\n        }\n        return ret;\n    }\n};","author":"HFDnpkp1cs","submissionId":"1575081482"},[{"id":"198","similarity":0.7272727272727273,"totOverlap":40,"longestOverlap":10}]]},{"116":[{"id":"116","fileName":"1575080655.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n        nums = sorted(list(set(nums)))\n        \n        res = 0\n        for num in nums:\n            if num > 0:\n                res += num\n        return res","author":"svmh","submissionId":"1575080655"},[{"id":"1272","similarity":0.8421052631578947,"totOverlap":32,"longestOverlap":11},{"id":"116","similarity":0.8823529411764706,"totOverlap":30,"longestOverlap":11}]],"201":[{"id":"201","fileName":"1575081401.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0 : return max(nums)\n        s = set(nums)\n        out = 0\n        for i in s:\n            if i > 0:\n                out += i\n        return out","author":"Aluminum57","submissionId":"1575081401"},[{"id":"230","similarity":1.0,"totOverlap":32,"longestOverlap":16},{"id":"917","similarity":1.0,"totOverlap":32,"longestOverlap":16},{"id":"201","similarity":0.8823529411764706,"totOverlap":30,"longestOverlap":11}]],"230":[{"id":"230","fileName":"1575081564.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0: return max(nums)\n        nums = set(nums)\n        res = 0\n        for num in nums:\n            if num > 0:\n                res += num\n        return res","author":"whitewale","submissionId":"1575081564"},[{"id":"201","similarity":1.0,"totOverlap":32,"longestOverlap":16}]],"917":[{"id":"917","fileName":"1575086251.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n        nums = set(nums)\n        res = 0\n        for num in nums:\n            if num > 0:\n                res += num\n        return res\n        ","author":"YanlinGong","submissionId":"1575086251"},[{"id":"201","similarity":1.0,"totOverlap":32,"longestOverlap":16}]],"1272":[{"id":"1272","fileName":"611225489.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n        nums = list(set(nums))\n        res = 0\n        for i in nums:\n            if i>0:\n                res += i\n        return res","author":"gauss","submissionId":"611225489"},[{"id":"116","similarity":0.8421052631578947,"totOverlap":32,"longestOverlap":11}]]},{"202":[{"id":"202","fileName":"1575081357.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        dic = set()\n        res = 0\n        for num in nums:\n            if num not in dic:\n                if num > 0:\n                    res += num\n                dic.add(num)\n        if res == 0:\n            nums.sort()\n            return nums[-1]\n        return res","author":"thumbpixels","submissionId":"1575081357"},[]]},{"207":[{"id":"207","fileName":"1575081433.txt","sourceCode":"/********************************************\n * author : Jie Chen (4rd Year CS)\n * school : Rochester Institute of Technology\n * created: 03.15.2025 22:30:09\n*********************************************/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef BROKEN_CODE\n#include <bits/lc_parser.h>\n#include <bits/debug.h>\n#else\n#define dbg(...) 10082002\n#define dbp(...) \"Need Internship\"\n#endif\n\nusing i64 = long long;\n\nconstexpr int inf = int(1e9) + 5;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = a.size();\n\n        set<int> s;\n        int ans = -inf;\n        for (int x : a) {\n            ans = max(ans, x);\n            if (x > 0) {\n                s.insert(x);\n            }\n        }\n\n        int sum = 0;\n        for (int x : s) {\n            sum += x;\n        }\n\n        if (sum != 0) {\n            ans = max(ans, sum);\n        }\n\n        return ans;\n    }\n};\n\n#ifdef BROKEN_CODE\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    exec(&Solution::JustJie); // CHANGE FOR PROBLEM\n}\n#endif\n\n// ~ JustJie","author":"Jie Chen","submissionId":"1575081433"},[]]},{"209":[{"id":"209","fileName":"1575081436.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> mp;\n        for(auto x : nums)\n            {\n                if(x>0)\n                {\n                    mp[x]++;\n                }\n            }\n        int ans= 0;\n        for(auto x : mp)\n            {\n                ans += x.first;\n            }\n        if(ans == 0)\n        {\n            return *max_element(nums.begin(),nums.end());\n        }\n        return ans;\n    }\n};","author":"0NFi7lH5BH","submissionId":"1575081436"},[{"id":"717","similarity":0.7464788732394366,"totOverlap":53,"longestOverlap":10},{"id":"801","similarity":0.7796610169491526,"totOverlap":46,"longestOverlap":13},{"id":"226","similarity":0.7213114754098361,"totOverlap":44,"longestOverlap":10}]],"226":[{"id":"226","fileName":"1575081542.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> mp; for(int i : nums){\n            if(i>=0)mp[i]++;\n        }\n        int ans =0;\n        for(auto it : mp){\n            ans+=it.first;\n        }\n        if(mp.size() == 0){\n            ans = *max_element(nums.begin(),nums.end());\n        }\n        return ans;\n    }\n};","author":"devanshksg","submissionId":"1575081542"},[{"id":"209","similarity":0.7213114754098361,"totOverlap":44,"longestOverlap":10}]],"717":[{"id":"717","fileName":"1575084810.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>mp;\n        sort(nums.begin(),nums.end());\n        int n = nums.size();\n        for(int i: nums) {\n            if(i>=0) {\n                mp[i]++;\n            }\n        }\n        if(mp.size() == 0) return nums[n-1];\n        int ans = 0;\n        for(auto it:mp) {\n            ans+=it.first;\n        }\n\n        return ans;\n    }\n};","author":"nishant6789","submissionId":"1575084810"},[{"id":"209","similarity":0.7464788732394366,"totOverlap":53,"longestOverlap":10}]],"801":[{"id":"801","fileName":"1575085431.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> mp;\n        for(auto it:nums){\n            if(it>0) mp[it];\n        }\n        int ans=-1;\n        for(auto it:mp){\n            ans+=it.first;\n        }\n        if(ans>0) return ans+1;\n        return *max_element(nums.begin(),nums.end());\n    }\n};","author":"himanshu_sachan","submissionId":"1575085431"},[{"id":"209","similarity":0.7796610169491526,"totOverlap":46,"longestOverlap":13}]]},{"211":[{"id":"211","fileName":"1575081448.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n=a.size();\n        int ans=*max_element(a.begin(),a.end());\n        set<int> st;\n        for(int i=0;i<n;i++){\n            if(a[i]>=0){\n                st.insert(a[i]);\n            }\n        }\n        int fans=0;\n        if(st.size()!=0){\n            for(auto &it:st)fans+=it;\n            ans=max(ans,fans);\n        }\n        return ans;\n    }\n};","author":"vedantgore_2004","submissionId":"1575081448"},[]]},{"213":[{"id":"213","fileName":"1575081430.txt","sourceCode":"#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef vector<string> vs;\ntypedef vector<char> vc;\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<ll> vl;\ntypedef vector<vl> vvl;\ntypedef vector<vvl> vvvl;\ntypedef pair<int, int> pii;\ntypedef tuple<int, int, int> ti;\ntypedef pair<double, double> pdd;\ntypedef pair<ll, ll> pll;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef vector<pll> vpll;\ntypedef vector<pdd> vpdd;\ntypedef tree<int, null_type, less<>, rb_tree_tag, tree_order_statistics_node_update>\n        ordered_set;\nconst int inf = 1e9;\nconst ll llinf = 4e18;\nconst int mod = 1e9 + 7;\nconst double EPS = 1e-9;\n#define all(a) a.begin(),a.end()\n#define read(n) vi arr(n);for(int&_:arr)cin>>_\n#define readarr(arr) for(auto&_:arr)cin>>_\n#define readpair(arr) for(auto&[_,__]:arr)cin>>_>>__\n#define rep(i, a, n) for(int i=a;i<n;i++)\n#define repr(i, a, n) for(int i=a;i>=n;i--)\n#define nl \"n\"\n#define sz(v) ((int)v.size())\n#define PQ priority_queue\n#define hmap unordered_map\n#define hset unordered_set\n#define pb push_back\n#define eb emplace_back\n#define lb lower_bound\n#define ub upper_bound\n#define clz(i) __builtin_clz(i)\n#define ctz(i) __builtin_ctz(i)\n#define popcount(i) __builtin_popcount(i)\n#define lsb(i) (i&-i)\nmt19937_64 rnd(time(0));\n\n\ntemplate<typename T>\ninline void pr(const T &t) { cout << t << ' '; }\n\ntemplate<typename T, typename U>\ninline void pr(const pair<T, U> &pa) {\n    cout << '(';\n    pr(pa.first);\n    cout << ',';\n    pr(pa.second);\n    cout << \") \";\n}\n\ntemplate<typename... Args>\ninline void pr(const tuple<Args...> &tup) {\n    apply([](const auto &... args) {\n        pr('[');\n        (pr(args), ...);\n        pr(']');\n    }, tup);\n}\n\ntemplate<typename T>\ninline void pr(const vector<T> &v) {\n    for (auto i: v) pr(i);\n    cout << nl;\n}\n\ntemplate<typename T>\ninline void pr(const set<T> &s) {\n    for (auto t: s)pr(t);\n    cout << nl;\n}\n\ntemplate<typename T>\ninline void pr(const unordered_set<T> &s) {\n    for (auto t: s)pr(t);\n    cout << nl;\n}\n\ntemplate<typename T, typename U>\ninline void pr(const map<T, U> &m) {\n    for (auto [t, u]: m) {\n        cout << '(';\n        pr(t);\n        pr('-');\n        pr(u);\n        pr(')');\n    }\n    cout << nl;\n}\n\ntemplate<typename T, typename U>\ninline void pr(const unordered_map<T, U> &m) {\n    for (auto [t, u]: m) {\n        cout << '(';\n        pr(t);\n        pr('-');\n        pr(u);\n        pr(')');\n    }\n    cout << nl;\n}\n\ntemplate<typename T>\ninline void pr(const queue<T> &q) {\n    queue<T> copy(q);\n    while (!copy.empty()) {\n        pr(copy.front());\n        copy.pop();\n    }\n    cout << nl;\n}\n\ntemplate<typename T>\ninline void pr(const stack<T> &s) {\n    stack<T> copy(s);\n    while (!copy.empty()) {\n        pr(copy.top());\n        copy.pop();\n    }\n    cout << nl;\n}\n\ntemplate<typename T>\ninline void pr(const deque<T> &q) {\n    deque<T> copy(q);\n    while (!copy.empty()) {\n        pr(copy.top());\n        copy.pop();\n    }\n    cout << nl;\n}\n\ntemplate<typename T>\ninline void pr(const PQ<T> &pq) {\n    PQ<T> copy(pq);\n    vector<T> arr;\n    while (!copy.empty()) {\n        arr.pb(copy.top());\n        copy.pop();\n    }\n    pr(arr);\n    cout << nl;\n}\n\ntemplate<typename T>\ninline void pr(const PQ<T, vector<T>, greater<T>> &pq) {\n    auto copy(pq);\n    vector<T> arr;\n    while (!copy.empty()) {\n        arr.pb(copy.top());\n        copy.pop();\n    }\n    pr(arr);\n    cout << nl;\n}\n\ntemplate<typename T>\ninline void pnl(const T &t) {\n    pr(t);\n    cout << nl;\n}\n\ntemplate<typename... Args>\nvoid pr(const Args &... args) {\n    (pr(args), ...);\n    cout << nl;\n}\n\nbool dfs(int a, int L, vector<vi> &g, vi &btoa, vi &A, vi &B) {\n    if (A[a] != L) return 0;\n    A[a] = -1;\n    for (int b: g[a])\n        if (B[b] == L + 1) {\n            B[b] = 0;\n            if (btoa[b] == -1 || dfs(btoa[b], L + 1, g, btoa, A, B))\n                return btoa[b] = a, 1;\n        }\n    return 0;\n}\n\nint hopcroftKarp(vector<vi> &g, vi &btoa) {\n    int res = 0;\n    vi A(g.size()), B(btoa.size()), cur, next;\n    for (;;) {\n        fill(all(A), 0);\n        fill(all(B), 0);\n        /// Find the starting nodes for BFS (i.e. layer 0).\n        cur.clear();\n        for (int a: btoa) if (a != -1) A[a] = -1;\n        rep(a, 0, sz(g)) if (A[a] == 0) cur.push_back(a);\n        /// Find all layers using bfs.\n        for (int lay = 1;; lay++) {\n            bool islast = 0;\n            next.clear();\n            for (int a: cur)\n                for (int b: g[a]) {\n                    if (btoa[b] == -1) {\n                        B[b] = lay;\n                        islast = 1;\n                    } else if (btoa[b] != a && !B[b]) {\n                        B[b] = lay;\n                        next.push_back(btoa[b]);\n                    }\n                }\n            if (islast) break;\n            if (next.empty()) return res;\n            for (int a: next) A[a] = lay;\n            cur.swap(next);\n        }\n        /// Use DFS to scan for augmenting paths.\n        rep(a, 0, sz(g))res += dfs(a, 0, g, btoa, A, B);\n    }\n}\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vi a(101);\n        int res=0;\n        int mx=-100;\n        for(const int&i:nums){\n            if(i>=0){\n                if(!a[i])res+=i,a[i]=1;\n            }else{\n                mx=max(mx,i);\n            }\n        }\n        return res==0?a[0]?0:mx:res;\n    }\n};\n//inline void solve() {\n//\n//}\n//\n//int32_t main() {\n//    ios_base::sync_with_stdio(false);\n//    cin.tie(nullptr);\n//    cout.tie(nullptr);\n//    cout << fixed << setprecision(10);\n//    int cases = 1;\n////    cin >> cases;\n//    while (cases--) solve();\n//    return 0;\n//}","author":"Choon Hean Lew","submissionId":"1575081430"},[]]},{"218":[{"id":"218","fileName":"1575081475.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        uniq = set(nums)\n        sm = sum(x for x in uniq if x > 0)\n        return sm if sm > 0 else max(uniq)","author":"icherkasov","submissionId":"1575081475"},[{"id":"1288","similarity":0.9090909090909091,"totOverlap":40,"longestOverlap":12}]],"1288":[{"id":"1288","fileName":"611225592.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums=list(set(nums))\n        ans=sum(x for x in nums if x>0)\n        return ans if ans >0 else max(nums)\n        \n        ","author":"Smile","submissionId":"611225592"},[{"id":"218","similarity":0.9090909090909091,"totOverlap":40,"longestOverlap":12}]]},{"31":[{"id":"31","fileName":"1575079794.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        un = {x for x in nums if x >= 0}\n    \n        if un:\n            return sum(un)\n        else:\n            return max(nums)\n        ","author":"Sheik Naveedh N","submissionId":"1575079794"},[{"id":"359","similarity":1.0,"totOverlap":26,"longestOverlap":13},{"id":"607","similarity":0.9629629629629629,"totOverlap":26,"longestOverlap":8},{"id":"31","similarity":0.7857142857142857,"totOverlap":22,"longestOverlap":9}]],"35":[{"id":"35","fileName":"1575079811.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = {n for n in nums if n > 0}\n        return sum(s) if s else max(nums)","author":"dirigibility","submissionId":"1575079811"},[{"id":"458","similarity":1.0,"totOverlap":30,"longestOverlap":15},{"id":"1521","similarity":1.0,"totOverlap":30,"longestOverlap":15},{"id":"54","similarity":0.8235294117647058,"totOverlap":28,"longestOverlap":9},{"id":"35","similarity":0.8275862068965517,"totOverlap":24,"longestOverlap":9}]],"54":[{"id":"54","fileName":"1575080031.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s1={x for x in nums if x>= 0}\n        s2={x for x in nums if x< 0}\n        if len(s1):\n            return sum(s1)\n        return max(s2)","author":"eatfood","submissionId":"1575080031"},[{"id":"35","similarity":0.8235294117647058,"totOverlap":28,"longestOverlap":9}]],"103":[{"id":"103","fileName":"1575080580.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        xs = {x for x in nums if x >= 0}\n        if not xs:\n            return max(nums)\n        return sum(xs)","author":"StackOverflowAutomaton","submissionId":"1575080580"},[{"id":"103","similarity":0.9629629629629629,"totOverlap":26,"longestOverlap":12}]],"219":[{"id":"219","fileName":"1575081497.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        positives = {x for x in nums if x > 0}\n        if positives:\n            return sum(positives)\n        elif 0 in nums:\n            return 0\n        else:\n            return max(nums)","author":"That Panda","submissionId":"1575081497"},[{"id":"1794","similarity":1.0,"totOverlap":28,"longestOverlap":14},{"id":"219","similarity":0.9629629629629629,"totOverlap":26,"longestOverlap":12},{"id":"1262","similarity":1.0,"totOverlap":26,"longestOverlap":13},{"id":"1781","similarity":1.0,"totOverlap":26,"longestOverlap":13},{"id":"219","similarity":0.8275862068965517,"totOverlap":24,"longestOverlap":9},{"id":"35","similarity":0.7857142857142857,"totOverlap":22,"longestOverlap":9}]],"359":[{"id":"359","fileName":"1575082381.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        positive_numbers = {x for x in nums if x > 0}\n        \n        if positive_numbers:\n            return sum(positive_numbers)\n        else:\n            return max(nums)","author":"Mohak Acharya","submissionId":"1575082381"},[{"id":"31","similarity":1.0,"totOverlap":26,"longestOverlap":13}]],"458":[{"id":"458","fileName":"1575083029.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        values = {n for n in nums if n >= 0}\n        return sum(values) if values else max(nums)","author":"John smith","submissionId":"1575083029"},[{"id":"35","similarity":1.0,"totOverlap":30,"longestOverlap":15}]],"607":[{"id":"607","fileName":"1575084101.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        uniq = {num for num in nums if num > 0}\n        if uniq:\n            return sum(uniq)\n        else:\n            return max(nums)","author":"Varun Agnihotri","submissionId":"1575084101"},[{"id":"31","similarity":0.9629629629629629,"totOverlap":26,"longestOverlap":8}]],"1262":[{"id":"1262","fileName":"611225357.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        A = {n for n in nums if n > 0}\n        if A:\n            return sum(A)\n        return max(nums)","author":"不造轮子","submissionId":"611225357"},[{"id":"103","similarity":1.0,"totOverlap":26,"longestOverlap":13}]],"1521":[{"id":"1521","fileName":"611227095.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        a = {i for i in nums if i > 0}\n        return sum(a) if a else max(nums)","author":"lsf","submissionId":"611227095"},[{"id":"35","similarity":1.0,"totOverlap":30,"longestOverlap":15}]],"1781":[{"id":"1781","fileName":"611233004.txt","sourceCode":"class Solution:\n    def maxSum(self, a: List[int]) -> int:\n        pos = {x for x in a if x > 0}\n        if pos:\n            return sum(pos)\n        return max(a)","author":"沐风","submissionId":"611233004"},[{"id":"103","similarity":1.0,"totOverlap":26,"longestOverlap":13}]],"1794":[{"id":"1794","fileName":"611234907.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos = {x for x in nums if x > 0}\n        if pos:\n            return sum(pos)\n        if 0 in nums:\n            return 0\n        return max(nums)\n","author":"mywaythere","submissionId":"611234907"},[{"id":"219","similarity":1.0,"totOverlap":28,"longestOverlap":14}]]},{"221":[{"id":"221","fileName":"1575081511.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int min_neg = -10000;\n        bool has_pos = false;\n        bool val[101];\n        memset(val, false, sizeof(val));\n        for(int x: nums) {\n            if (x >= 0) {\n                has_pos = true;\n                val[x] = true;\n            } else {\n                min_neg = max(x, min_neg);\n            }\n        }\n        if (!has_pos) return min_neg;\n        int sum = 0;\n        for(int i = 0; i <= 100; i++) {\n            if (val[i]) sum += i;\n        }\n        return sum;\n    }\n};","author":"Yucheng Dai","submissionId":"1575081511"},[]]},{"222":[{"id":"222","fileName":"1575081515.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        map<int, int>mp;\n        for(int i : nums) mp[i] ++;\n        int flag = 0;\n        for(auto it : mp){\n            if(it.first >= 0){\n                flag = 1;\n                ans += it.first;\n            }\n        }\n        if(flag == 0){\n            ans = *max_element(nums.begin(), nums.end());\n        }\n        return ans;\n    }\n};","author":"Prathamesh","submissionId":"1575081515"},[]]},{"228":[{"id":"228","fileName":"1575081558.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> se;\n        for (int i : nums) se.insert(i);\n\n        int ans = 0;\n        int cnt = 0;\n        for (int i : se) {\n            if (i >= 0) {\n                ans += i;\n                cnt++;\n            }\n        }\n        if (cnt) return ans;\n        int mx = *--se.end();\n        return mx;\n    }\n};","author":"OTTFF","submissionId":"1575081558"},[]]},{"231":[{"id":"231","fileName":"1575081600.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        counter = Counter(nums)\n        ans = max(nums)\n        curr = 0\n        found = False\n        for key, val in counter.items():\n            if key >= 0:\n                found = True\n                curr += key\n        if found: ans = max(ans, curr)\n        return ans\n                \n                ","author":"Pankaj","submissionId":"1575081600"},[]]},{"233":[{"id":"233","fileName":"1575081571.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        visited = set()\n        res = 0\n        max_val = -float('inf')\n        for num in nums:\n            if num >= 0:\n                if num not in visited:\n                    visited.add(num)\n                    res += num\n            max_val = max(max_val, num)\n        if max_val < 0:\n            return max_val\n        return res","author":"swagggn0","submissionId":"1575081571"},[]]},{"235":[{"id":"235","fileName":"1575081630.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=*max_element(nums.begin(),nums.end()),sum=0;\n        map<int,int>mp;\n        for(auto it:nums){\n            if(it>0)mp[it]++;\n        }\n        for(auto [f,s]:mp)sum+=f;\n        if(mp.empty())return ans;\n        return sum;\n    }\n};","author":"Ahmed_Ashraf","submissionId":"1575081630"},[]]},{"236":[{"id":"236","fileName":"1575081618.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<int> d(205, 0);\n        for (auto i : nums) {\n            d[i + 100]++;\n        }\n        int sum = 0;\n        for (int i = 101; i < 205; i++) {\n            if (d[i] > 0) {\n                sum += i - 100;\n            }\n        }\n        if (sum == 0) {\n            for (int i = 200; i >= 0; i--) {\n                if (d[i] > 0) {\n                    return i - 100;\n                }\n            }\n        }\n        return sum;\n    }\n};","author":"Lpl","submissionId":"1575081618"},[]]},{"239":[{"id":"239","fileName":"1575081640.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n        if max(s) <= 0:\n            return max(s)\n        res = 0\n        for n in s:\n            if n > 0:\n                res += n\n        return res","author":"oOoOoOoOo","submissionId":"1575081640"},[{"id":"822","similarity":1.0,"totOverlap":34,"longestOverlap":17},{"id":"707","similarity":0.7027027027027027,"totOverlap":26,"longestOverlap":13}]],"707":[{"id":"707","fileName":"1575084696.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n        if len(s) == 1:\n            return sum(s)\n        res = 0\n        flag = False\n        for i in s:\n            if i >= 0:\n                res += i\n                flag = True\n\n        if flag:\n            return res\n        else:\n            return max(s)","author":"Naman Gupta","submissionId":"1575084696"},[{"id":"239","similarity":0.7027027027027027,"totOverlap":26,"longestOverlap":13}]],"822":[{"id":"822","fileName":"1575085590.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        set_nums = set(nums)\n        if max(set_nums) < 0:\n            return max(set_nums)\n        ans = 0\n        for s in set_nums:\n            if s > 0:\n                ans += s\n        return ans","author":"BingX","submissionId":"1575085590"},[{"id":"239","similarity":1.0,"totOverlap":34,"longestOverlap":17}]]},{"240":[{"id":"240","fileName":"1575081639.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0, cnt = 0, mx = -1e9;\n        map<int, bool> m;\n        for(int i : nums){\n            mx = max(mx, i);\n            if(i < 0 || m.find(i) != m.end()) continue;\n            cnt++;\n            ans += i;\n            m[i] = 1;\n        }\n        if(cnt == 0) return mx;\n        return ans;\n    }\n};","author":"Sarthak Jain","submissionId":"1575081639"},[]]},{"241":[{"id":"241","fileName":"1575081658.txt","sourceCode":"class Solution:\n    # W441 @ 1h29m : 1m task + 9m idea + 1m code + 0m tests | TOTAL = 2 min\n    def maxSum(self, nums: List[int]) -> int:\n        freqs = Counter(nums)\n        positives = [v for v in freqs if v > 0]\n        return sum(positives) if positives else max(nums)\n\n\"\"\"Ideas:\n\"\"\"\n","author":"sergey_chebotarev","submissionId":"1575081658"},[]]},{"243":[{"id":"243","fileName":"1575081708.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        const int n = int(nums.size());\n        set<int> S;\n        for(auto& x: nums) S.emplace(x);\n\n        vector<int> a;\n        for(auto& x: S) a.emplace_back(x);\n\n        int res = 0;\n        bool taken = false;\n        while(!a.empty() && a.back() >= 0) {\n            taken = true;\n            res += a.back();\n            a.pop_back();\n        }\n\n        if(!taken) {\n            res += a.back();\n        }\n        return res;\n    }\n};","author":"dhuamanilu","submissionId":"1575081708"},[]]},{"65":[{"id":"65","fileName":"1575080128.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> m;\n        for(auto &x:nums) m[x]++;\n        int ans=0;\n        for(auto &x:m){\n            ans+=max(x.first,0);\n        }\n        if(ans==0) ans+=(--m.end())->first;\n        return ans;\n    }\n};","author":"sohailkasmani007","submissionId":"1575080128"},[{"id":"65","similarity":0.7419354838709677,"totOverlap":46,"longestOverlap":15}]],"245":[{"id":"245","fileName":"1575081691.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int, int> m;\n        for(auto &x : nums)m[x]++;\n        int ans = 0, cnt = 0;\n        for(auto &x : m){\n            if(x.first>=0) {\n                ans+=x.first;\n                cnt++;\n            } \n        }\n        if(cnt==0)ans+=(--m.end())->first;\n        return ans;\n    }\n};","author":"Divyansh Bisht","submissionId":"1575081691"},[{"id":"896","similarity":0.7352941176470589,"totOverlap":50,"longestOverlap":15},{"id":"245","similarity":0.7419354838709677,"totOverlap":46,"longestOverlap":15}]],"896":[{"id":"896","fileName":"1575086090.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& A) {\n        map<int, int> m;\n        \n        for(auto &it : A) m[it]++;\n        \n        int ans = 0;\n        int maxi = -200;\n        int flag = 0;\n        for(auto &it : m)\n        {\n            if(it.first >= 0) {\n                ans += it.first;\n                flag = 1;\n            }\n            maxi = max(maxi, it.first);\n        }\n        \n        if(flag == 1) return ans;\n        else return maxi;\n    }\n};","author":"Harshit Bansal","submissionId":"1575086090"},[{"id":"245","similarity":0.7352941176470589,"totOverlap":50,"longestOverlap":15}]]},{"246":[{"id":"246","fileName":"1575081727.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n        boolean[] flag = new boolean[101];\n        int ans = 0;\n        int maxi = -999;\n        \n        for (int i = 0; i < n; i++){\n            maxi = Math.max(maxi, nums[i]);\n            if (nums[i] > 0 && !flag[nums[i]]){\n                ans += nums[i];\n                flag[nums[i]] = true;\n            }\n        }\n        if (ans == 0 && maxi != -999) ans = maxi;\n        return ans;\n    }\n}","author":"Alfonso Valenciana","submissionId":"1575081727"},[]]},{"247":[{"id":"247","fileName":"1575081721.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int mini= -1e7;\n        for(auto &num:nums){\n            mini=max(mini,num);\n            if(num>=0)\n            st.insert(num);\n        }\n        int ans=0;\n        if(st.empty())\n            return mini;\n        for(auto &a: st){\n            ans+=a;\n        }\n        return ans;\n    }\n};","author":"Aditya Singh","submissionId":"1575081721"},[]]},{"252":[{"id":"252","fileName":"1575081772.txt","sourceCode":"typedef long long ll;\nconst static auto _ = [] { std::ios::sync_with_stdio(false); std::cin.tie(nullptr); std::cout.tie(nullptr); return nullptr; }();\n// Don't forget long long due to overflow !!!!!!!!!\n\nclass Solution {\npublic:\n\n    int maxSum(vector<int>& nums) {\n        map<int, int> freq;\n        \n        int sum = 0;\n        int mx = INT_MIN;\n        bool can = 0;\n        for(auto &x : nums) {\n            if(freq[x]) continue;\n            if(x < 0) {\n                mx = max(mx, x);\n                continue;\n            }\n            sum += x;\n            freq[x]++;\n            can = 1;\n        }\n        if(!can) return mx;\n        return sum;\n    }\n\n};","author":"Kareem Elgoker","submissionId":"1575081772"},[]]},{"253":[{"id":"253","fileName":"1575081776.txt","sourceCode":"import java.util.HashSet;\n\nclass Solution {\n    public int maxSum(int[] nums) {\n        boolean nonNegativeFound = false;\n        int maxElement = Integer.MIN_VALUE;\n        HashSet<Integer> set = new HashSet<>();\n        \n        int sumPositives = 0;\n        for (int num : nums) {\n            maxElement = Math.max(maxElement, num);\n            \n            if (num >= 0) {\n                nonNegativeFound = true;\n                if (num > 0 && set.add(num)) {\n                    sumPositives += num;\n                }\n                if (num == 0) {\n                    set.add(0);\n                }\n            }\n        }\n        return nonNegativeFound ? sumPositives : maxElement;\n    }\n}\n","author":"madhank46","submissionId":"1575081776"},[]]},{"255":[{"id":"255","fileName":"1575081781.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s(begin(nums), end(nums));\n        if (*rbegin(s) < 0) {\n            return *rbegin(s);\n        }\n        int ans = 0;\n        for (int x : s)\n            if (x > 0)\n                ans += x;\n        return ans;\n    }\n};","author":"cole","submissionId":"1575081781"},[]]},{"260":[{"id":"260","fileName":"1575081787.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        sort(nums.begin(), nums.end());\n\n        if(nums.back() < 0) return nums.back();\n\n        int ans = 0;\n        for(int i = 0; i < n; ) {\n            int j = i;\n            while(j < n && nums[i] == nums[j]) j++;\n            \n            if(nums[i] >= 0) ans += nums[i];\n            i = j;\n        }\n\n        return ans;\n    }\n};\n","author":"Akash0P","submissionId":"1575081787"},[]]},{"269":[{"id":"269","fileName":"1575081820.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n        maxNum, posSum = -1000, 0\n        for v in s:\n            maxNum = max(maxNum, v)\n            if v > 0:\n                posSum += v\n        if posSum == 0:\n            return maxNum\n        else:\n            return posSum","author":"hathacker5","submissionId":"1575081820"},[{"id":"1468","similarity":0.7878787878787878,"totOverlap":26,"longestOverlap":10}]],"1468":[{"id":"1468","fileName":"611226714.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        rcd = set(nums)\n        ans, mx = 0, -101\n        for k in rcd:\n            mx = max(k, mx)\n            if k >= 0:\n                ans += k\n        if mx < 0: ans = mx\n        return ans","author":"Jos","submissionId":"611226714"},[{"id":"269","similarity":0.7878787878787878,"totOverlap":26,"longestOverlap":10}]]},{"271":[{"id":"271","fileName":"1575081829.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size();\n\n        int index = 0;\n        while(index < n && nums[index] <= 0) index++;\n\n        if(index >= n) return nums.back();\n\n        int ans = 0;\n        set<int> st;\n\n        while(index < n) {\n            if(st.find(nums[index]) == st.end()) {\n                st.insert(nums[index]);\n                ans += nums[index];\n            }\n            index++;\n        }\n\n        return ans;\n    }\n};","author":"Yash151","submissionId":"1575081829"},[]]},{"279":[{"id":"279","fileName":"1575081861.txt","sourceCode":"class Solution {\npublic:\ntypedef long long ll; \ntypedef long double ld;\n#define pb push_back\n#define be(a) a.begin(), a.end()\n#define vi vector<int> \n#define vl vector<ll>\n#define vs vector<string>\n#define vc vector<char>\n#define yes cout<<\"YES\"<<endl;\n#define no cout<<\"NO\"<<endl;\n#define loop(i,n) for(int i=0;i<n;i++)\n    int maxSum(vector<int>& nums) \n{\n        set<int> over;\n        loop(i,nums.size())\n            {\n            over.insert(nums[i]);\n            }\n        int ans=0;\n    int sel=0;\n        for(auto& val:over)\n            {\n                ans+=max(0,val);\n                if(val>=0)sel++;\n            }\n    if(sel==0)\n    {\n        ans=*max_element(be(nums));\n    }\n        return ans;\n    }\n};","author":"s1ege","submissionId":"1575081861"},[]]},{"280":[{"id":"280","fileName":"1575081908.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos, neg = set(), set()\n        for n in nums:\n            if n >= 0:\n                pos.add(n)\n            else:\n                neg.add(n)\n        if pos:\n            return sum(pos)\n        else:\n            return max(neg)","author":"tinyfish1","submissionId":"1575081908"},[]]},{"283":[{"id":"283","fileName":"1575081866.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all([x < 0 for x in nums]): return max(nums)\n        seen = set()\n        subarr = []\n        res = 0\n        for n in nums:\n            if n > 0 and n not in seen:\n                seen.add(n)\n                res += n\n        return res","author":"user5779lS","submissionId":"1575081866"},[]]},{"284":[{"id":"284","fileName":"1575081922.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        set<int>s(nums.begin(),nums.end());\n        vector<int>x;\n        for(auto &i:s)x.push_back(i);\n        if(x.back()<0){\n            return x.back();\n        }\n        int sum = 0;\n        for(int i=0;i<x.size();i++)if(x[i]>=0)sum+=x[i];\n        return sum;\n    }\n};","author":"neatHyperTxt","submissionId":"1575081922"},[]]},{"285":[{"id":"285","fileName":"1575081924.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        \n        k = sum({i for i in nums if i>0})\n        if k == 0:\n            return max(nums)\n        return k","author":"sri_teja","submissionId":"1575081924"},[]]},{"286":[{"id":"286","fileName":"1575081952.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mx = -1000;\n        for (auto it : nums) {\n            mx = max(mx, it);\n        }\n        if (mx < 0) {\n            return mx;\n        }\n        map <int, bool> was;\n        int sum = 0;\n        for (auto it : nums) {\n            if (!was[it]) {\n                was[it] = true;\n                if (it > 0) sum += it;\n            }\n        }\n        return sum;\n    }\n};","author":"Egor Tiliguzov","submissionId":"1575081952"},[]]},{"287":[{"id":"287","fileName":"1575081951.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        if (nums[nums.length - 1] < 0) {\n            return nums[nums.length - 1];\n        }\n        int res = 0;\n\n        \n        Set<Integer> set = new HashSet<>();\n        for (int i : nums) {\n            if (i < 0) {\n                continue;\n            }\n            if (set.add(i)) {\n                res += i;\n            }\n        }\n        return res;\n    }\n}","author":"jason_wong1","submissionId":"1575081951"},[{"id":"1754","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":16}]],"1754":[{"id":"1754","fileName":"611231399.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        if (nums[nums.length - 1] <= 0) {\n            return nums[nums.length - 1];\n        }\n        Set<Integer> set = new HashSet<>();\n        for (int num : nums) {\n            if (num <= 0) {\n                continue;\n            }\n            set.add(num);\n        }\n        return set.stream().mapToInt(Integer::intValue).sum();\n    }\n}","author":"peterqiu-007","submissionId":"611231399"},[{"id":"287","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":16}]]},{"288":[{"id":"288","fileName":"1575081949.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(int i=0;i<nums.size();i++){\n             if(nums[i]>=0){\n                  st.insert(nums[i]);\n             }\n        }\n        if(st.empty()){\n            int curr=0;\n            int maxi=INT_MIN;\n            for(int i=0;i<nums.size();i++){\n                 curr+=nums[i];\n                 if(curr>maxi){\n                      maxi=curr;\n                 }\n                if(curr<0){\n                     curr=0;\n                }\n            }\n            return maxi;\n        }\n        int sum=0;\n        for(auto it:st){ \n          sum+=it;\n        }\n        return sum;\n    }\n};","author":"Mangalgupta","submissionId":"1575081949"},[]]},{"289":[{"id":"289","fileName":"1575081934.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        c = Counter(nums)\n        allneg = True\n        for n in nums:\n            if n >= 0:\n                allneg = False\n                break\n        if allneg:\n            return max(nums)\n            \n        res = 0\n        \n        for key, value in c.items():\n            if key > 0:\n                res += key\n        return res","author":"Exploshe","submissionId":"1575081934"},[]]},{"295":[{"id":"295","fileName":"1575081995.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        dig={}\n        n=len(nums)\n        sm=0\n        f=0\n        for i in range(n):\n            if nums[i]>0:\n                f=1\n                if nums[i] not in dig:\n                    dig[nums[i]]=1\n                    sm+=nums[i]\n        if f:\n            return sm\n        else:\n            return max(nums)","author":"Naveents1915","submissionId":"1575081995"},[]]},{"296":[{"id":"296","fileName":"1575082015.txt","sourceCode":"class Solution {\n    public int maxSum(int[] a) {\n        int n = a.length;\n        Set<Integer> set = new HashSet<>();\n        int maxneg = -100000;\n        for(int ai: a){\n            if(ai>0){\n                set.add(ai);\n            }else if(ai<=0){\n                maxneg = Math.max(maxneg, ai);\n            }\n        }\n        if(set.isEmpty()){\n            return maxneg;\n        }\n        int sum = 0;\n        for(int si: set){\n            sum += si;\n        }\n        return sum;\n    }\n}","author":"JOZLEETCODE","submissionId":"1575082015"},[]]},{"299":[{"id":"299","fileName":"1575081977.txt","sourceCode":"#include<bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define uint unsigned long long\n#define pb push_back\n#define py cout<<\"Yesn\"\n#define pn cout<<\"Non\"\n#define PYES cout<<\"YESn\"\n#define PNO cout<<\"NOn\"\n#define f(i,a,b) for(int i=a;i<b;i++)\n#define fe(i,a,b) for(int i=a;i<=b;i++)\n#define ff(i,a,b) for(int i=b-1;i>=a;i--)\n#define all(c) (c).begin(),(c).end()\n#define present(c,x) ((c).find(x) != (c).end())\n#define sz(a) int((a).size())\n#define X first\n#define Y second\n#define nn endl\n#define FAST_IO ios::sync_with_stdio(false); cin.tie(0);cout.tie(0);\n#define V vector\n#define ss string\n#define pd(x) cout<<fixed<<setprecision(10)<<x;\n\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<pair<ll,ll>> vpl;\n\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& v) {\n        map<ll,ll> mp;\n        vi vv;\n        for(auto it:v)\n            {\n                if(mp[it]==0 && it>0)\n                    vv.pb(it);\n                mp[it]++;\n            }\n        if(sz(vv)==0)\n            return *max_element(all(v));\n        ll ans = accumulate(all(vv),0ll);\n        return ans;\n    }\n};","author":"okokwebweb","submissionId":"1575081977"},[]]},{"302":[{"id":"302","fileName":"1575081982.txt","sourceCode":"#include <bits/stdc++.h>\n#define ll long long int\n#define FASTIO std::ios::sync_with_stdio(false);\n#define pb push_back\n#define mp make_pair\n#define pi pair <ll,ll>\n#define F first\n#define S second\n#define inf 1e18\n#define pi pair <ll,ll>\n#define g(x) cout<<x<<endl\n#define all(x) x.begin(),x.end()\n#define rall(a) a.rbegin(), a.rend()\n#define input_from_file  freopen(\"input.txt\", \"r\", stdin);\n#define mod 1000000007ll\n#define sz 400005\n#define bitcnt(x) __builtin_popcountll(x)\nusing namespace std;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set <ll> se;\n        int mi = -1e9;\n        for(auto x:nums){\n            if(x > 0)\n            se.insert(x);\n            else {\n                mi = max(mi,x);\n            }\n            \n        }\n        int ans = 0;\n        for(auto x:se){\n            ans += x;\n        }\n        if(se.size() == 0){\n            return mi;\n        }\n        return ans;\n    }\n};","author":"saketw","submissionId":"1575081982"},[]]},{"303":[{"id":"303","fileName":"1575082067.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        std::unordered_set<int> seen;\n        for (const auto num : nums) {\n            seen.insert(num);\n        }\n        int maxElement = nums[0];\n        int sum = 0;\n        for (const auto num : seen) {\n            if (num > 0) sum += num;\n            maxElement = std::max(maxElement, num);\n        }\n        if (sum == 0) return maxElement;\n        return sum;\n    }\n};","author":"Zachary","submissionId":"1575082067"},[]]},{"305":[{"id":"305","fileName":"1575082051.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> hs = new HashSet<>();\n        int ans = 0;\n        boolean noselected = true;\n        int max = Integer.MIN_VALUE;\n        for(int i = 0; i<nums.length; i++){\n            if(hs.add(nums[i]) && nums[i] >= 0){\n                ans += nums[i];\n                noselected = false;\n            }else if(nums[i] < 0){\n                max = Math.max(max, nums[i]);\n            }\n        }\n        \n        if(noselected) return max;\n        return ans;\n        \n    }\n}","author":"Dinesh Chandran","submissionId":"1575082051"},[]]},{"307":[{"id":"307","fileName":"1575082099.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=*max_element(nums.begin(),nums.end());\n        \n        map<int,int> vis;\n        vis[ans]=1;\n        for(auto x:nums){\n            if(vis[x]||x<0) continue;\n            else ans+=x;\n            vis[x]=1;\n        }\n        return ans;\n    }\n};","author":"Arpan Tomar","submissionId":"1575082099"},[]]},{"308":[{"id":"308","fileName":"1575082103.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        d = {}\n        sum = 0\n        largest = nums[0]\n        for i in nums:\n            if i not in d:\n                d[i] = False\n                sum += max(0,i)\n                largest = max(largest, i)\n        if sum == 0:\n            sum = largest\n        return sum","author":"deasoliser","submissionId":"1575082103"},[]]},{"309":[{"id":"309","fileName":"1575082114.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        x = []\n        for num in nums:\n            if num > 0:\n                x.append(num)\n        mx = max(nums)\n        return sum(set(x)) if x else mx","author":"Yang","submissionId":"1575082114"},[]]},{"310":[{"id":"310","fileName":"1575082119.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int n = nums.length;\n        int total = nums[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            if (nums[i] <= 0) {\n                break;\n            }\n            if (nums[i] < nums[i + 1]) {\n                total += nums[i];\n            }\n        }\n        return total;\n    }\n}","author":"Fasdr","submissionId":"1575082119"},[{"id":"1641","similarity":0.8387096774193549,"totOverlap":52,"longestOverlap":20},{"id":"583","similarity":0.7846153846153846,"totOverlap":51,"longestOverlap":9}]],"583":[{"id":"583","fileName":"1575083959.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n        Arrays.sort(nums);\n        int sum = nums[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            if (nums[i] <= 0) break;\n            if (nums[i] != nums[i + 1]) {\n                sum += nums[i];\n            }\n        }\n        return sum;\n    }\n}","author":"YMF","submissionId":"1575083959"},[{"id":"310","similarity":0.7846153846153846,"totOverlap":51,"longestOverlap":9}]],"1641":[{"id":"1641","fileName":"611228475.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int n = nums.length;\n        int sum = nums[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            if (nums[i] == nums[i + 1]) {\n                continue;\n            }\n            if (nums[i] <= 0) {\n                break;\n            }\n            sum += nums[i];\n        }\n        return sum;\n    }\n}","author":"幸福啦啦啦","submissionId":"611228475"},[{"id":"310","similarity":0.8387096774193549,"totOverlap":52,"longestOverlap":20}]]},{"311":[{"id":"311","fileName":"1575082098.txt","sourceCode":"class Solution {\n    func maxSum(_ nums: [Int]) -> Int {\n        let nums = nums.sorted()\n        if nums.last! < 0 {\n            return nums.last!\n        }\n        var sum = 0\n        var seen = Set<Int>()\n        for n in nums {\n            if n < 0 || seen.contains(n) {\n                continue\n            }\n            sum += n\n            seen.insert(n)\n        }\n        return sum\n    }\n}","author":"Safari1291","submissionId":"1575082098"},[]]},{"314":[{"id":"314","fileName":"1575082143.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        vector<bool>mark(105);\n        auto sum=0;\n        auto maxi=INT_MIN;\n        for(auto num:nums){\n            if(num>0){\n                if(!mark[num]){\n                    mark[num]=true;\n                    sum+=num;\n                }\n            }\n            maxi=max(maxi,num);\n        }\n        if(maxi<=0)return maxi;\n        return sum;\n    }\n};","author":"prashant_kashyap9759","submissionId":"1575082143"},[]]},{"315":[{"id":"315","fileName":"1575082137.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = 0\n        m = {}\n        for num in nums:\n            if num not in m and num>=0:\n                ans += num\n                m[num] = 1\n        if ans == 0:\n            return min(ans, max(nums))\n        return ans\n        ","author":"Chitraksh Kumar","submissionId":"1575082137"},[]]},{"316":[{"id":"316","fileName":"1575082149.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos = False\n        for x in nums:\n            if x > 0:\n                pos = True\n\n        if not pos:\n            return max(nums)\n\n        c = set(nums)\n        ans = 0\n        for x in c:\n            if x > 0:\n                ans += x\n        return ans","author":"Kevin Pan","submissionId":"1575082149"},[]]},{"318":[{"id":"318","fileName":"1575082160.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int ans = 0;\n        int f = 0;\n        for(int i=0; i<nums.size(); i++){\n            if(nums[i] > 0){\n                if(i == 0 || nums[i-1] != nums[i]) ans += nums[i];\n                f = 1;\n            }\n        }\n        if(f == 0) ans = nums.back();\n        return ans;\n    }\n};","author":"Felipe Sabino","submissionId":"1575082160"},[]]},{"320":[{"id":"320","fileName":"1575082163.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        set<int> s;\n        for(int i=0;i<n;i++)\n            {\n                s.insert(nums[i]);\n            }\n        int sum=INT_MIN;\n        int tempsum=0;\n        for(auto itr=s.rbegin();itr!=s.rend();itr++)\n            {\n                tempsum+=(*itr);\n                sum=max(sum,tempsum);\n            }\n        sum=max(sum,tempsum);\n        return sum;\n    }\n};","author":"RITESH SHARMA","submissionId":"1575082163"},[{"id":"795","similarity":0.7931034482758621,"totOverlap":69,"longestOverlap":21}]],"795":[{"id":"795","fileName":"1575085374.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n\n        set<int> st;\n\n        for(int i=0;i<n;i++)\n            {\n                st.insert(nums[i]);\n            }\n\n        int val = *(st.rbegin());\n        if(val < 0)\n        {\n            return val;\n        }\n\n        int sum = 0;\n        int mx = -101;\n\n        for(auto it = st.rbegin(); it!=st.rend(); it++)\n            {\n                sum += *it;\n                mx = max(sum,mx);\n            }\n\n        return mx;\n    }\n};","author":"Ankit Anvesh","submissionId":"1575085374"},[{"id":"320","similarity":0.7931034482758621,"totOverlap":69,"longestOverlap":21}]]},{"322":[{"id":"322","fileName":"1575082169.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        flag = False\n        for num in nums:\n            if num >= 0:\n                flag = True\n                break\n        if not flag:\n            return max(nums)\n        mymap = {}\n        for i in range(len(nums)):\n            if nums[i] not in mymap:\n                mymap[nums[i]] = 1\n            else:\n                mymap[nums[i]] += 1\n        total = 0\n        for key,val in mymap.items():\n            if key >= 1:\n                total += key\n        \n        return total","author":"justwong0926","submissionId":"1575082169"},[]]},{"323":[{"id":"323","fileName":"1575082177.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int ans = 0;\n        set<int> st;\n        for(auto &it: nums) if(it > 0) st.insert(it);\n\n        int temp = *max_element(nums.begin(), nums.end());\n        for(auto &it: st) ans += it;\n\n        if(ans == 0){\n            return temp;\n        }\n        \n        return ans;\n    }\n};","author":"Jashanpreet Singh","submissionId":"1575082177"},[{"id":"353","similarity":0.7761194029850746,"totOverlap":52,"longestOverlap":10}]],"353":[{"id":"353","fileName":"1575082347.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool allneg = true;\n        for(auto &val:nums)if(val>0)allneg = false;\n        if(allneg) return *max_element(nums.begin(), nums.end());\n        int sum = 0;\n        set<int> s;\n        for(auto &val:nums)\n            if(val>0) s.insert(val);\n        for(auto &val:s)sum+=val;\n        return sum;\n    }\n};","author":"Dhiraj Patil","submissionId":"1575082347"},[{"id":"323","similarity":0.7761194029850746,"totOverlap":52,"longestOverlap":10}]]},{"324":[{"id":"324","fileName":"1575082152.txt","sourceCode":"#include <vector>\n#include <unordered_set>\n#include <climits>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sumPos = 0;\n        bool hasPositive = false;\n        bool hasZero = false;\n        int maxNegative = INT_MIN;\n        unordered_set<int> seen;\n        \n        for (int num : nums) {\n            if (seen.count(num) == 0) {\n                seen.insert(num);\n                if (num > 0) {\n                    sumPos += num;\n                    hasPositive = true;\n                } else if (num == 0) {\n                    hasZero = true;\n                } else {\n                    maxNegative = max(maxNegative, num);\n                }\n            }\n        }\n        \n        if (hasPositive)\n            return sumPos;\n        if (hasZero)\n            return 0;\n        return maxNegative;\n    }\n};\n","author":"ChangeofPace","submissionId":"1575082152"},[]]},{"325":[{"id":"325","fileName":"1575082182.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        \n        result = 0\n        for num in nums:\n            if num >= 0:\n                seen.add(num)\n\n        if len(seen) == 0:\n            return max(nums)\n        return sum(seen)\n            \n","author":"messyhair","submissionId":"1575082182"},[]]},{"327":[{"id":"327","fileName":"1575082170.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> mySet;\n        int tot = 0;\n        bool posChk = false;\n        size_t posIdx = 0;\n        while (posIdx < nums.size()) {\n            int curVal = nums[posIdx];\n            if (curVal > 0) {\n                if (mySet.count(curVal) == 0) {\n                    tot += curVal;\n                    mySet.insert(curVal);\n                    posChk = true;\n                }\n            } else if (curVal == 0) {\n                if (mySet.count(curVal) == 0) {\n                    mySet.insert(curVal);\n                }\n            }\n            posIdx++;\n        }\n        if (posChk) {\n            int outVal = tot;\n            outVal = (outVal * outVal) / outVal;\n            return outVal;\n        }\n        int high = nums[0];\n        posIdx = 1;\n        while (posIdx < nums.size()) {\n            int cmpVal = nums[posIdx];\n            if (high < cmpVal) {\n                high = cmpVal;\n            }\n            posIdx++;\n        }\n        int retVal;\n        if (high != 0) {\n            retVal = (high * high) / high;\n        } else {\n            retVal = high;\n        }\n        return retVal;\n    }\n};","author":"rokkc","submissionId":"1575082170"},[]]},{"334":[{"id":"334","fileName":"1575082235.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,bool>mp;\n        int sum=0;\n        bool mila=false;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>=0){\n                if(!mp[nums[i]]){\n                    mp[nums[i]]=true;\n                    sum+=nums[i];\n                }\n                mila=true;\n            }\n        }\n\n        if(!mila){\n            sum=*max_element(nums.begin(),nums.end());\n        }\n\n\n        return sum;\n    }\n};","author":"Dhruv Verma","submissionId":"1575082235"},[]]},{"335":[{"id":"335","fileName":"1575082249.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int n=nums.size();\n        vector<int> arr;\n        arr.push_back(nums[0]);\n        for (int i=1;i<n;i++) if (nums[i]!=nums[i-1]) arr.push_back(nums[i]);\n        int p=arr.size();\n        if (arr[p-1]<0) return arr[p-1];\n        int sum=0;\n        for (auto p: arr) sum+=max(0,p);\n        return sum;\n    }\n};","author":"Krrish Chanchal","submissionId":"1575082249"},[]]},{"57":[{"id":"57","fileName":"1575080042.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.rbegin(), nums.rend());\n        int ret = nums[0];\n        for (int i = 1; i < nums.size(); i++) if (nums[i] >= 0 && nums[i] != nums[i - 1]) {\n            ret += nums[i];\n        }\n        \n        return ret;\n    }\n};","author":"Linh Nguyen","submissionId":"1575080042"},[{"id":"108","similarity":0.8412698412698413,"totOverlap":53,"longestOverlap":10},{"id":"108","similarity":0.7464788732394366,"totOverlap":53,"longestOverlap":11}]],"108":[{"id":"108","fileName":"1575080644.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end(),greater<int>());\n        int ans=nums[0];\n        for(int i=1;i<nums.size();i++){\n            if(nums[i]>0 && nums[i]!=nums[i-1]){\n                ans+=nums[i];\n            }\n        }\n        return ans;\n    }\n};","author":"CHIRAG SHARMA","submissionId":"1575080644"},[{"id":"57","similarity":0.8412698412698413,"totOverlap":53,"longestOverlap":10}]],"196":[{"id":"196","fileName":"1575081346.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        \n        if (nums.back() < 0) return nums.back();\n        int res = 0;\n        for (int i = 0; i < nums.size(); ++i) {\n            if (nums[i] > 0) {\n                if (i == 0 || nums[i] != nums[i - 1]) {\n                    res += nums[i];\n                }\n            }\n        }\n        return res;\n    }\n};","author":"Jing-You","submissionId":"1575081346"},[{"id":"196","similarity":0.8289473684210527,"totOverlap":63,"longestOverlap":13}]],"274":[{"id":"274","fileName":"1575081848.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        if(nums.back() <= 0){\n            return nums.back();\n        }\n        int sum = 0;\n        for(int i = 0; i < nums.size(); ++i){\n            if(nums[i] > 0 && (!i || nums[i] ^ nums[i - 1]))\n                sum += nums[i];\n        }\n        return sum;\n    }\n};","author":"f1016142506","submissionId":"1575081848"},[{"id":"274","similarity":0.8051948051948052,"totOverlap":62,"longestOverlap":27}]],"331":[{"id":"331","fileName":"1575082210.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        sort(a.begin(), a.end());\n        if (a.back() <= 0) return a.back();\n        int ret = 0;\n        for (int i = 0; i < a.size(); i++) {\n            if (i == 0 || a[i] != a[i-1]) {\n                if (a[i] > 0) ret += a[i];\n            }\n        }\n        return ret;\n    }\n};","author":"Adi","submissionId":"1575082210"},[{"id":"196","similarity":0.8169014084507042,"totOverlap":58,"longestOverlap":29}]],"336":[{"id":"336","fileName":"1575082255.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        sort(a.begin(), a.end());\n        bool found = false;\n        int ans = 0;\n        \n        for (int i = 0; i < a.size(); i ++) {\n            if (a[i] > 0 && (i == 0 || a[i] != a[i - 1])) {\n                ans += a[i];\n                found = true;\n            }\n        }\n        if (!found) {\n            ans = - 10000;\n            for (int i : a) if (i > ans) ans = i;\n        }\n        \n        return ans;\n    }\n};","author":"pipipi","submissionId":"1575082255"},[{"id":"1694","similarity":0.7831325301204819,"totOverlap":65,"longestOverlap":19},{"id":"1694","similarity":0.8289473684210527,"totOverlap":63,"longestOverlap":13},{"id":"527","similarity":0.7380952380952381,"totOverlap":62,"longestOverlap":10},{"id":"1694","similarity":0.8051948051948052,"totOverlap":62,"longestOverlap":27},{"id":"331","similarity":0.8169014084507042,"totOverlap":58,"longestOverlap":29},{"id":"1424","similarity":0.7532467532467533,"totOverlap":58,"longestOverlap":18},{"id":"1694","similarity":0.7012987012987013,"totOverlap":54,"longestOverlap":17},{"id":"1694","similarity":0.7105263157894737,"totOverlap":54,"longestOverlap":11},{"id":"1694","similarity":0.7464788732394366,"totOverlap":53,"longestOverlap":11},{"id":"1189","similarity":0.703125,"totOverlap":45,"longestOverlap":20}]],"527":[{"id":"527","fileName":"1575083618.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mx = *max_element(nums.begin(), nums.end());\n        sort(nums.begin(), nums.end());\n        int sum = 0;\n        int cnt = 0;\n        for (int i = 0; i < nums.size(); i ++) {\n            if (nums[i] < 0) continue;\n            if (i == 0 || nums[i] != nums[i-1]) {\n                sum += nums[i];\n                cnt ++;\n            }\n        }\n        if (cnt > 0) return sum;\n        else return mx;\n        // if (sum > mx) return sum;\n    }\n};","author":"hkhzzz","submissionId":"1575083618"},[{"id":"196","similarity":0.7380952380952381,"totOverlap":62,"longestOverlap":10}]],"927":[{"id":"927","fileName":"1575086309.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        std::sort(nums.begin(), nums.end());\n        if (nums.back() <= 0) {\n            return nums.back();\n        }\n        \n        int32_t j = -1;\n        int64_t result = 0;\n        for (size_t i = 0; i < nums.size(); ++i) {\n            if (nums[i] > 0) {\n                if (j == -1 || nums[i] > nums[j]) {\n                    result += nums[i];\n                    j = i;\n                }\n            }\n        } \n\n        return result;\n    }\n};","author":"vdeviatkov","submissionId":"1575086309"},[{"id":"927","similarity":0.7012987012987013,"totOverlap":54,"longestOverlap":17}]],"1189":[{"id":"1189","fileName":"1575088875.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        \n        if (nums.back() < 0) return nums.back();\n        \n        int ans = 0;\n        for (int i = 0; i <= 100; i++) {\n            if (binary_search(nums.begin(), nums.end(), i)) {\n                ans += i;\n            }\n        }\n        return ans;\n    }\n};","author":"Anonymous","submissionId":"1575088875"},[{"id":"331","similarity":0.703125,"totOverlap":45,"longestOverlap":20}]],"1400":[{"id":"1400","fileName":"611226303.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int res = 0,n = nums.size();\n        for(int i = 0;i<n;i++){\n            if(nums[i] < 0 || (i >= 1 && nums[i] == nums[i-1])) continue;\n            res += nums[i];\n        }\n        if(res == 0) return nums.back();\n        return res;\n    }\n};","author":"爱写代码的木更","submissionId":"611226303"},[{"id":"1400","similarity":0.7105263157894737,"totOverlap":54,"longestOverlap":11}]],"1424":[{"id":"1424","fileName":"611226466.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        if (nums.back() <= 0) return nums.back();\n        int ans = 0;\n        for (int i = nums.size() - 1; i >= 0 && nums[i] > 0; i--) {\n            if (i == nums.size() - 1 || nums[i] != nums[i + 1]) {\n                ans += nums[i];\n            }\n        }\n        return ans;\n    }\n};","author":"若讷","submissionId":"611226466"},[{"id":"196","similarity":0.7532467532467533,"totOverlap":58,"longestOverlap":18}]],"1694":[{"id":"1694","fileName":"611229271.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        if (nums.back()<=0){\n            return nums.back();\n        }\n        int res=0;\n        for( int i=0;i<nums.size();i++){\n            if (nums[i] >0 && (i==0 || nums[i]!=nums[i-1])){\n                res += nums[i];\n            }\n        }\n\n        return res;\n    }\n};\n","author":"hui","submissionId":"611229271"},[{"id":"336","similarity":0.7831325301204819,"totOverlap":65,"longestOverlap":19}]]},{"337":[{"id":"337","fileName":"1575082275.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        map<int,int>ma;\n        for(auto it:nums){\n            ma[it]++;\n        }\n        bool flag=false;\n        int z=-1e9;\n        for(auto it:ma){\n            z=max(z, it.first);\n            if(it.first>0) ans+=it.first;\n        }\n        if(z<=0) return z;\n        else return ans;\n    }\n};","author":"Siddharth Bisht","submissionId":"1575082275"},[]]},{"338":[{"id":"338","fileName":"1575082263.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        positive = set()\n        negative = set()\n        maxNum = -float('inf')\n        for num in nums:\n            if num >= 0:\n                positive.add(num)\n            else:\n                maxNum = max(maxNum,num)\n        if len(positive) != 0:\n            return sum(positive)\n        else:\n            return maxNum","author":"Spiderman","submissionId":"1575082263"},[]]},{"340":[{"id":"340","fileName":"1575082285.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> si;\n        for(auto &num : nums){\n            si.insert(num);\n        }\n        int sum = 0, maxx = INT_MIN;\n        for(auto &num : si){\n            if(num > 0)\n                sum += num;\n            else if(num < 0)\n                maxx = max(maxx, num);\n            else maxx = 0;\n        }\n        return sum == 0 ? maxx : sum;\n    }\n};","author":"sellie50759","submissionId":"1575082285"},[]]},{"341":[{"id":"341","fileName":"1575082269.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums_set = set(nums)\n        if all(num <= 0 for num in nums_set):\n            return max(nums_set)\n        return sum(num for num in nums_set if num >= 0)\n            \n        ","author":"mmb L","submissionId":"1575082269"},[{"id":"788","similarity":1.0,"totOverlap":38,"longestOverlap":19},{"id":"433","similarity":0.9,"totOverlap":36,"longestOverlap":18},{"id":"1258","similarity":0.8,"totOverlap":32,"longestOverlap":9},{"id":"1264","similarity":0.8421052631578947,"totOverlap":32,"longestOverlap":16}]],"433":[{"id":"433","fileName":"1575082898.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n        if all(n <= 0 for n in s):\n            return max(s)\n        return sum(n for n in s if n > 0)","author":"Waxon Waxoff","submissionId":"1575082898"},[{"id":"341","similarity":0.9,"totOverlap":36,"longestOverlap":18}]],"788":[{"id":"788","fileName":"1575085312.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = set(nums)\n        if all(num <= 0 for num in nums):\n            return max(nums)\n        return sum(num for num in nums if num >= 0)","author":"Theo","submissionId":"1575085312"},[{"id":"341","similarity":1.0,"totOverlap":38,"longestOverlap":19}]],"1258":[{"id":"1258","fileName":"611225298.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = set(nums)\n        if max(nums) <= 0:\n            return max(nums)\n        return sum(v for v in nums if v > 0)\n        ","author":"醉里挑灯看剑","submissionId":"611225298"},[{"id":"433","similarity":0.8,"totOverlap":32,"longestOverlap":9}]],"1264":[{"id":"1264","fileName":"611225420.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n        if any(x >= 0 for x in nums):\n            return sum(x for x in s if x >= 0)\n        return max(nums)","author":"萨姆","submissionId":"611225420"},[{"id":"433","similarity":0.8421052631578947,"totOverlap":32,"longestOverlap":16}]]},{"342":[{"id":"342","fileName":"1575082299.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> visited;\n        int res{INT_MIN};\n        int max_num = INT_MIN;\n        for (auto num : nums) {\n            max_num = max(max_num, num);\n            if (num < 0 || visited.contains(num))\n                continue;\n            res = max(res, 0);\n            visited.insert(num);\n            res += num;\n        }\n        return max(max_num, res);\n    }\n};","author":"ahong107","submissionId":"1575082299"},[]]},{"343":[{"id":"343","fileName":"1575082295.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        map<int,int> mpp;\n        for(int i=0;i<nums.size();i++)\n            {\n                mpp[nums[i]]++;\n                if(mpp[nums[i]]==1 && nums[i]>=0)\n                {\n                    ans+=nums[i];\n                }\n            }\n        if(ans==0 && mpp[0]==0)\n        {\n            ans=INT_MIN;\n            for(auto it:nums)\n                {\n                    ans=max(ans,it);\n                }\n        }\n        return ans;\n    }\n};","author":"Yash Singh","submissionId":"1575082295"},[]]},{"345":[{"id":"345","fileName":"1575082301.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        ret = 0\n        large = nums[0]\n        for x in nums:\n            if x>0 and x not in seen:\n                seen.add(x)\n                ret+=x\n            large = max(large, x)\n        if len(seen) == 0:\n            return large\n        return ret\n            ","author":"nepthius","submissionId":"1575082301"},[]]},{"346":[{"id":"346","fileName":"1575082319.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        used = set()\n        ans = 0\n        for num in nums:\n            if num < 0:\n                continue\n            elif num in used:\n                continue\n            ans += num\n            used.add(num)\n        if len(used) == 0:\n            return max(nums)\n        return ans","author":"Kyle Chiu","submissionId":"1575082319"},[{"id":"363","similarity":0.7368421052631579,"totOverlap":28,"longestOverlap":9}]],"363":[{"id":"363","fileName":"1575082393.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        ret = 0\n        if max(nums) <= 0:\n            return max(nums)\n            \n        for num in nums:\n            if num < 0 or num in seen: \n                continue\n            ret += num\n            seen.add(num)\n        return ret\n        ","author":"MalianBestCiv","submissionId":"1575082393"},[{"id":"346","similarity":0.7368421052631579,"totOverlap":28,"longestOverlap":9}]]},{"347":[{"id":"347","fileName":"1575082320.txt","sourceCode":"class Solution {\n    public int maxSum(int[] a) {\n        int s = 0, m = Integer.MIN_VALUE;\n        java.util.HashSet<Integer> hs = new java.util.HashSet<>();\n        for (int x : a) {\n            m = Math.max(m, x);\n            if (x > 0 && hs.add(x)) {\n                s += x;\n            }\n        }\n        return s == 0 ? m : s;\n    }\n}\n","author":"Aira Jena","submissionId":"1575082320"},[]]},{"348":[{"id":"348","fileName":"1575082306.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        d={}\n        total=max(nums)\n        d[max(nums)]=1\n        for num in nums:\n            if d.get(num)==None and num>=0:\n                total+=num\n\n            d[num]=1\n\n        return total\n                ","author":"Baladithya vaka","submissionId":"1575082306"},[]]},{"350":[{"id":"350","fileName":"1575082344.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        temp = nums.copy()\n        nums = [num for num in nums if num >= 0]\n        if not nums :\n            nums = [max(temp)]\n        return sum(list(set(nums)))\n        ","author":"Yukesh R","submissionId":"1575082344"},[]]},{"351":[{"id":"351","fileName":"1575082343.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int ans = 0;\n        int n = nums.length;\n        boolean[] vis = new boolean[101];\n        int count = 0;\n        for (int i=0; i<n; i++) {\n            if (nums[i]>0 && !vis[nums[i]]) {\n                vis[nums[i]]=true;\n                ans+=nums[i];\n                count++;\n            }\n        }\n        if (count>0) return ans;\n        Arrays.sort(nums);\n        return nums[n-1];\n    }\n}","author":"JerryGu1","submissionId":"1575082343"},[]]},{"354":[{"id":"354","fileName":"1575082364.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> st = new HashSet();\n        for(int num:nums){\n            st.add(num);\n        }\n        int ans =0;\n        int max =-101;\n        boolean flg = false;\n        for(int num:st){\n            if(num>0){\n                flg = true;\n                ans+=num;\n            }\n            else max = Math.max(max,num);\n        }\n        if(flg)return ans;\n        return max;\n    }\n}","author":"Mitul Ranpariya","submissionId":"1575082364"},[]]},{"355":[{"id":"355","fileName":"1575082370.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        int mx = INT_MIN;\n        set<int> vis;\n        for(int e: nums){\n            if(vis.find(e) != vis.end()) continue;\n            vis.insert(e);\n            if(e > 0) sum+= e;\n            else mx = max(mx, e);\n        }\n\n        if(sum == 0) return mx;\n        return sum;\n    }\n};","author":"Ayush Gupta","submissionId":"1575082370"},[{"id":"485","similarity":0.7272727272727273,"totOverlap":40,"longestOverlap":7}]],"485":[{"id":"485","fileName":"1575083365.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        set<int>st;\n        for(int i:nums)\n            st.insert(i);\n        int a=INT_MIN;long long sum=0;\n        for(auto it:st)\n            {\n                if(it>0)\n                    sum+=it;\n                else\n                    a=max(a,it);\n            }\n        if(sum==0)\n            return a;\n        else\n            return sum;\n    }\n};","author":"Divyanshu Madhav","submissionId":"1575083365"},[{"id":"355","similarity":0.7272727272727273,"totOverlap":40,"longestOverlap":7}]]},{"356":[{"id":"356","fileName":"1575082345.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        maxi = max(nums)\n        if maxi < 0:\n            return maxi\n        # delete negatives\n        res = 0\n        seen = set()\n        for num in nums:\n            if num >= 0 and num not in seen:\n                seen.add(num)\n                res += num\n        return res","author":"pogert","submissionId":"1575082345"},[]]},{"358":[{"id":"358","fileName":"1575082377.txt","sourceCode":"class Solution {\npublic:\n    typedef long long ll;\n    int maxSum(vector<int>& nums) {\n        set<ll> st;\n        ll s=0;\n        for(ll i=0;i<nums.size();i++)\n        {\n            if(nums[i]>0 && !st.count(nums[i]))\n            {\n                st.insert(nums[i]);\n                s+=nums[i];\n            }\n        }\n        if(s>0)\n            return s;\n        return *max_element(nums.begin(),nums.end());\n    }\n};","author":"mittaludit768","submissionId":"1575082377"},[]]},{"361":[{"id":"361","fileName":"1575082392.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int n=nums.size();\n        for(int i=0;i<n;i++){\n            s.insert(nums[i]);\n        }\n        int sum=0;\n        for(auto it:s){\n            sum+=max(0,it);\n        }\n        if(*s.rbegin()<0){\n            return *s.rbegin();\n        }\n        return sum;\n    }\n};","author":"abhi2004iiti","submissionId":"1575082392"},[]]},{"362":[{"id":"362","fileName":"1575082409.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        nums.sort()\n        n = len(nums)\n        i = 0\n        while(i<n and nums[i]<=0):\n            i+=1\n\n        if(i==n):\n            return nums[-1]\n        return sum(nums[i:])\n            \n        ","author":"Arun","submissionId":"1575082409"},[]]},{"365":[{"id":"365","fileName":"1575082427.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        output = 0\n        nums = sorted(set(nums))\n        if nums[-1] <= 0:\n            return nums[-1]\n        for num in nums:\n            if num > 0:\n                output += num\n        return output","author":"Dang Huy Nguyen","submissionId":"1575082427"},[]]},{"366":[{"id":"366","fileName":"1575082384.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        dct = set(nums)\n        ret = 0\n        flag=False\n        for i in dct:\n            if i>0:\n                flag=True\n                ret+=i\n        if not flag:\n            mini = float('-inf')\n            for i in dct:\n                mini = max(i,mini)\n            return mini\n                \n        return ret","author":"Anirudha Soni","submissionId":"1575082384"},[]]},{"369":[{"id":"369","fileName":"1575082466.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int max_ = INT_MIN, sum_ = 0;\n        unordered_set<int> set_;\n        for (auto i : a) {\n            set_.insert(i);\n            max_ = max(max_, i);\n        }\n        for (auto i : set_) {\n            sum_ += max(i, 0);\n        }\n        if (max_ < 0) {\n            return max_;\n        }\n        return sum_;\n    }\n};\n","author":"Twin Braids","submissionId":"1575082466"},[]]},{"371":[{"id":"371","fileName":"1575082498.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        \n        for (int v : nums) set.add(v);\n        \n        List<Integer> list = new ArrayList<>(set);\n        Collections.sort(list);\n        \n        int sum = 0, count = 0;\n        \n        for (int v : list) {\n            if (v >= 0) {\n                sum += v;\n                count++;\n            }\n        }\n        \n        return count > 0 ? sum : list.get(list.size() - 1);\n    }\n}","author":"volodymyr_k","submissionId":"1575082498"},[]]},{"372":[{"id":"372","fileName":"1575082510.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        long long sum = 0;\n        map<int, bool> seen;\n        int max_neg = -1e9;\n        for (int i = 0;i < nums.size();i++){\n            if (!seen[nums[i]] and nums[i] >= 1){\n                seen[nums[i]] = true;\n                sum += nums[i];\n            }\n            if (nums[i] <= 0){\n                max_neg = max(max_neg, nums[i]);\n            }\n        }\n        if (sum == 0){\n            return max_neg;\n        }\n        return sum;\n    }\n};","author":"littlemouse","submissionId":"1575082510"},[]]},{"373":[{"id":"373","fileName":"1575082467.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int maximum=INT_MIN;\n        for(int i=0;i<nums.size();i++){\n            maximum=max(maximum,nums[i]);\n            if(nums[i]>=0){\n                s.insert(nums[i]);\n            }\n        }\n        int ans=0;\n        if(s.size()==0){\n            return maximum;\n        }\n        for(auto it:s){\n            ans+=it;\n        }\n        return ans;\n    }\n};","author":"Saketh Karumudi","submissionId":"1575082467"},[]]},{"377":[{"id":"377","fileName":"1575082521.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        if(nums.back() < 0) {\n            return nums.back();\n        }\n        int ret = 0; \n        set<int> s;\n        for(int i = nums.size() - 1;i>=0;i--) {\n            if(s.count(nums[i]) || nums[i] <= 0) {\n                continue;\n            }\n            ret += nums[i];\n            s.insert(nums[i]);\n        }\n        return ret; \n    }\n};","author":"Hanzhou Tang","submissionId":"1575082521"},[]]},{"378":[{"id":"378","fileName":"1575082552.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int res = 0, r = INT_MIN, count = 0;\n        for(auto&i: nums){\n            if(i >= 0 && s.find(i) == s.end()){\n                s.insert(i);\n                res += i;\n                count++;\n            }\n            if(i < 0){\n                r = max(r, i);\n            }\n        }\n        return count == 0?r:res;\n    }\n};","author":"Nehcled","submissionId":"1575082552"},[]]},{"382":[{"id":"382","fileName":"1575082543.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxN = INT_MIN;\n        unordered_map<int, int> cnt;\n        for(int n: nums){\n            cnt[n]++;\n        }\n        int sum = 0;\n        int added = 0;\n        for(auto it=cnt.begin();it!=cnt.end();it++){\n            if(it->first>=0){\n                sum+=it->first;\n                added++;\n            }\n            maxN=max(maxN, it->first);\n        }\n        if(added>0) return sum;\n        return maxN;\n    }\n};","author":"aa","submissionId":"1575082543"},[]]},{"383":[{"id":"383","fileName":"1575082579.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        map<int,int>mp;\n        int f = 0;\n        for(auto it : nums){\n            mp[it]++;\n            if(it >= 0){\n                f = 1;\n            }\n        }\n        sort(begin(nums), end(nums));\n        if(f == 0){\n            return nums[nums.size() - 1];\n        }\n        for(auto it : mp){\n            if(it.first >= 0)\n                sum += it.first;\n        }\n        return sum;\n    }\n};","author":"Sharath","submissionId":"1575082579"},[]]},{"384":[{"id":"384","fileName":"1575082584.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums=list(set(nums))\n        ans=0\n        flag=0\n        for i in nums:\n            if i>0:\n                flag=1\n                ans+=i\n        if flag==0:\n            return max(nums)\n        return ans\n        ","author":"Nikhil Nyalakanti","submissionId":"1575082584"},[]]},{"386":[{"id":"386","fileName":"1575082519.txt","sourceCode":"\n#ifdef LOCAL_RUN\n#include \"debug_leet.h\"\n    #else\n    #define trace(...) ;\n    #define dbg(...) ;\n    #define dbgc(...) ;\n    #define debug(x) ;\n    #define debuga(a, n) ;\n    #define debug2(x, y) ;\n    #define debug3(x, y, z) ;\n    #define debug4(x, y, z, w) ;\n    #define debug5(a,b,c,d,e) ;\n    #define lassert(x) ;\n    #define dassert(x, ...) ;\n    int recur_depth = 0; bool rec_indent = true;\n    const bool isLocal = false;\n    template <typename Arg, typename... Args>\n    void display(TreeNode* root) {}\n    #endif\n\n    #define pb push_back\n    #define eb emplace_back\n    #define popb pop_back\n    #define all(v) begin(v), end(v)\n    #define rall(v) (v).rbegin(),(v).rend()\n    #define make_unique(v) (v).erase(unique(all(v)), (v).end())\n    #define sz(c) ((int) c.size())\n    #define forn(i,n) for(auto i=(n)-(n);i<(n);i++)\n    #define fornn(i,s,n) for(auto i=(n)-(n)+(s);i<(n);i++)\n    #define forb(i,n) for(auto i=(n)-1;i>=0;i--)\n    #define forbn(i,s,n) for(auto i=(n)-1;i>=(s);i--)\n    #define forit(it, c) for(auto it = (c).begin(); it != (c).end(); ++it)\n    #define mem(a,b) memset(a,b,sizeof(a))\n    #define abs(x) (((x) < 0) ? -(x) : (x))\n    #define sqr(x) ((x) * (x))\n    #define sqrt(x) sqrt(abs(x))\n    #define has(c,x) (c.find(x) != c.end())\n    #define pw(x) (1LL << (x))\n    #define ibit(x,i) (((x) >> (i)) & 1)\n    #define data(v) v.data(), sz(v) // vi -> vai\n    #define gtime() ((double(clock()) - 0)/CLOCKS_PER_SEC)\n\n    typedef stringstream sstr;\n    typedef long long ll;\n    typedef long double ld;\n    typedef pair<int, int> pii;\n    typedef pair<ll,ll> pll;\n    typedef pair<ld,ld> pdd;\n    typedef vector<int> vi;\n    typedef vector<ll> vll;\n    typedef vector<pii> vpii;\n    typedef vector<vi> vvi;\n    typedef vector<vll> vvll;\n    typedef valarray<int> vai;\n    template <class T>\n    using min_pq = priority_queue<T, vector<T>, greater<T>>;\n    template <class T>\n    using vc = vector<T>;\n    template <class T>\n    using vvc = vector<vc<T>>;\n    template <class T>\n    using vvvc = vector<vvc<T>>;\n    template <class T>\n    using vvvvc = vector<vvvc<T>>;\n    template <class T>\n    using vvvvvc = vector<vvvvc<T>>;\n\n    template<class F>\n    struct y_comb{\n        F f;\n        template<class T> explicit y_comb(T &&f_in): f(forward<T>(f_in)){ }\n        template<class ...Args> decltype(auto) operator()(Args &&...args){ return f(ref(*this), forward<Args>(args)...); }\n    };\n    template<class F>\n    decltype(auto) yf(F &&f){\n        return y_comb<decay_t<F>>(forward<F>(f));\n    }\n\n    inline int ni(){ int x; cin >> x;   return x; }\n    inline ll  nl() { ll  x; cin >> x; return x; }\n\n    template <class T> void mmin(T& a, const T& b) {\n        a = (a) < (b) ? (a) : (b);\n    }\n    template <class T> void mmax(T& a, const T& b) {\n        a = (a) > (b) ? (a) : (b);\n    }\n    template <class T> int LB(vc<T> &a, T x){\n        return int(lower_bound(all(a), x) - a.begin());\n    }\n    template <class T> int UB(vc<T> &a, T x){\n        return int(upper_bound(all(a), x) - a.begin());\n    }\n    template <class T> T MAX(vc<T> &a, int l=0, int r=-1){\n        if(r < 0) r = sz(a);\n        return *max_element(a.begin()+l, a.begin()+r);\n    }\n    template <class T> T MIN(vc<T> &a, int l=0, int r=-1){\n        if(r < 0) r = sz(a);\n        return *min_element(a.begin()+l, a.begin()+r);\n    }\n    template <class T> auto vv(int d1, T x){\n        return vc<T>(d1, x);\n    }\n    template <class T> auto vv(int d1, int d2, T x){\n        return vc<vc<T>>(d1, vc<T>(d2, x));\n    }\n    template <class T> auto vv(int d1, int d2, int d3, T x){\n        return vc<vc<vc<T>>>(d1, vv(d2, d3, x));\n    }\n    template <class T> auto vv(int d1, int d2, int d3, int d4, T x){\n        return vc<vc<vc<vc<T>>>>(d1, vv(d2, d3, d4, x));\n    }\n    void outv(auto &v){\n        for(auto &x: v) {cout<< x <<\" \";} cout<<endl;\n    }\n    void rvec(int &n, auto &v){\n        cin >> n; v.resize(n); for(auto &x: v) cin >> (x);\n    }\n    template <typename Arg, typename... Args>\n    void read(Arg&& arg, Args&&... args){\n        cin >> std::forward<Arg>(arg); using expander = int[];\n        (void)expander{0, (void(cin >> std::forward<Args>(args)),0)...};\n    }\n    template <typename Arg, typename... Args>\n    void out(Arg&& arg, Args&&... args){\n        cout << std::forward<Arg>(arg); using expander = int[];\n        (void)expander{0, (void(cout << \" \" << std::forward<Args>(args)),0)...};\n        cout << endl;\n    }\n    namespace tuple_utils{\n        template<class ...Ts, size_t ...Is>\n        ostream& println_tuple_impl(ostream& os, tuple<Ts...> tuple, index_sequence<Is...>){\n            static_assert(sizeof...(Is)==sizeof...(Ts),\"Indices must have same number of elements as tuple types!\");\n            static_assert(sizeof...(Ts)>0, \"Cannot insert empty tuple into stream.\");\n            auto last = sizeof...(Ts) - 1; // assuming index sequence 0,...,N-1\n            return ((os << get<Is>(tuple) << (Is != last ? \", \" : \")\")),...);\n        }\n    }\n    template<class ...Ts> ostream& operator<<(ostream& os, const tuple<Ts...> & tuple) {\n        os << \"(\";\n        return tuple_utils::println_tuple_impl(os, tuple, index_sequence_for<Ts...>{});\n    }\n    template <class Integer, class F>\n    Integer find_first_false(Integer l, Integer r, F&& f) {\n        --l; // ++r;\n        while (r - l > 1) {\n            Integer m = midpoint(l, r);\n            if (f(m)) l = m;\n            else r = m;\n        }\n        return r;\n    }\n    template <class Integer, class F>\n    Integer find_last_true(Integer l, Integer r, F &&f) {\n        return find_first_false(l, r, [&f](Integer i) { return f(i); }) - 1;\n    }\n    template <class Integer, class F>\n    Integer find_first_true(Integer l, Integer r, F &&f) {\n        return find_first_false(l, r, [&f](Integer i) { return !f(i); });\n    }\n    template <class T, class F>\n    T last_true(T lo, T hi, F&& f) { \n        lo--; // if all are false, return lo-1\n        while(lo < hi){\n            T mid = lo + (hi - lo + 1) / 2;\n            if(f(mid)) lo = mid; \n            else hi = mid - 1;\n        }\n        return lo;\n    }\n    template <class T, class F>\n    T first_true(T lo, T hi, F&& f) { \n        // return last_true(lo, hi, [&](T x){ return !f(x); }) + 1;\n        hi++; // if all are false, return hi+1\n        while(lo < hi){\n            T mid = lo + (hi - lo) / 2;\n            if(f(mid)) hi = mid; \n            else lo = mid + 1;\n        }\n        return lo;\n    }\n    auto init = []() {\n        ios::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL); return 'c';\n    }();\n\n    ll pwr(ll base, ll p, ll mod){\n        ll ans=1; while(p) {if(p&1) ans=(ans*base)%mod;\n            base=(base*base)%mod; p/=2;}\n        return ans;\n    }\n    ll gcd(ll a, ll b) {  return b == 0 ? a : gcd(b,a%b); }\n    ll lcm(ll a, ll b) {  return a*(b/gcd(a,b)); }\n\n    const long double PI = (long double)(3.1415926535897932384626433832795);\n    const ll  mx_ll   = numeric_limits<ll> :: max();\n    const int mx_int  = numeric_limits<int> :: max();\n\n    const int oo = 0x3f3f3f3f;\n    const ll  OO = 0x3f3f3f3f3f3f3f3fll;\n    const double eps = 1e-9;\n    const int DX[8]={0,1, 0,-1,-1,1,-1, 1};\n    const int DY[8]={1,0,-1, 0,-1,1, 1,-1};\n\nconst int maxn = 1e5 + 3;\nconst int mod = 1e9+7;\nclass Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        set<int> s(all(a));\n        while(*s.begin() < 0) {\n            if(sz(s) == 1) break;\n            s.erase(s.begin());\n\n        }\n        int ans = 0;\n        for(int x: s) ans += x;\n        return ans;\n    }\n};\n\n#ifdef LOCAL_RUN\nvoid _solve(){\n    Solution sol;\n\n}\n\n\n/*************************************************************************/\nint main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    //cout.precision(15);\n    // return 0;\n    while(cin.peek() == 32 or cin.peek() == 10) cin.get();\n    while(cin.peek() != EOF){\n        _solve();\n        while(cin.peek() == 32 or cin.peek() == 10) cin.get();\n    }\n}\n#endif\n","author":"Jose Coves","submissionId":"1575082519"},[]]},{"172":[{"id":"172","fileName":"1575081104.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        map<int,int> ma;\n        int mx = -1000;\n        for(int ch : nums) {\n            if(ch >= 0 and ma[ch] == 0) {\n                ans += ch;\n                ma[ch] = 1;\n            }\n            mx = max(mx,ch);\n        }\n        if(ans == 0) ans = mx;\n        return ans;\n    }\n};","author":"Tutul_dhar","submissionId":"1575081104"},[{"id":"172","similarity":0.7407407407407407,"totOverlap":40,"longestOverlap":18}]],"389":[{"id":"389","fileName":"1575082631.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxNeg=-101;\n        map<int,bool> seen;\n        int ans=0;\n        for(int n:nums){\n            if(n>0 && !seen[n]){\n                ans+=n;\n                seen[n]=true;\n            }\n            else if(n<=0){\n                maxNeg=max(maxNeg,n);\n            }\n        }\n        if(ans) return ans;\n        return maxNeg;\n    }\n};","author":"Adithya G","submissionId":"1575082631"},[{"id":"1011","similarity":0.7368421052631579,"totOverlap":42,"longestOverlap":14},{"id":"1011","similarity":0.7407407407407407,"totOverlap":40,"longestOverlap":18}]],"1011":[{"id":"1011","fileName":"1575087019.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        unordered_map<int,int> mp;\n        int neg = INT_MIN;\n        for(int num : nums){\n            if (num > 0 && mp[num] == 0){\n                sum+= num;\n            }\n            else if (num <= 0){\n                neg = max(num,neg);\n            }\n            mp[num]++;\n            \n        }\n        \n        return sum == 0 ? neg : sum;\n    }\n};","author":"Paras Yerunkar","submissionId":"1575087019"},[{"id":"389","similarity":0.7368421052631579,"totOverlap":42,"longestOverlap":14}]]},{"391":[{"id":"391","fileName":"1575082641.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set <Integer> st = new HashSet();\n        for(int x: nums){\n            st.add(x);\n        }\n\n        int sum = 0, mx = Integer.MIN_VALUE, cnt = 0;\n        for(int x : st){\n            if(x > 0){\n                sum += x;\n            }\n            else if(x < 0){\n                mx = Math.max(mx, x);\n            }\n            else if(x == 0){\n                cnt++;\n            }\n        }\n        if(sum == 0 && cnt > 0){\n            return 0;\n        }\n        if(sum == 0){\n            return mx;\n        }\n        return sum;\n    }\n}","author":"Sri Akshya","submissionId":"1575082641"},[]]},{"392":[{"id":"392","fileName":"1575082645.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        nums.sort()\n        idx = bisect_left(nums, 0)\n        idx = min(idx, len(nums)-1)\n        return sum(nums[idx:])\n","author":"domick","submissionId":"1575082645"},[]]},{"393":[{"id":"393","fileName":"1575082654.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        u = list(set(nums))\n        p = [x for x in u if x >= 0]\n        if len(p) > 0:\n            return sum(p)\n        else:\n            return sorted(u)[-1]\n","author":"saurav","submissionId":"1575082654"},[]]},{"395":[{"id":"395","fileName":"1575082652.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        mini, maxi = min(nums), max(nums)\n        if mini >= 0 and maxi >= 0:\n            return sum(nums)\n        elif mini < 0 and maxi >= 0:\n            return sum(num for num in nums if num > 0)\n        else:\n            return maxi","author":"Piyush Kumar","submissionId":"1575082652"},[]]},{"396":[{"id":"396","fileName":"1575082622.txt","sourceCode":"import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.StringTokenizer;\n\npublic class Solution {\n    static PrintWriter out;\n    static int inf = (int) 1e9;\n    static int mod = (int) 1e9 + 7;\n    \n    public static void main(String[] args) {\n        FastReader in = new FastReader();\n        out = new PrintWriter(System.out);\n        long t = in.nextInt();\n        long tc = 1;\n        while(tc <= t){\n            // out.println(maxSum(in.readArray(n)));\n            tc++;\n        }\n        out.close();\n    }\n    \n    /*--------------------------------------------------------------------------------------------------------------------------------*/\n    /*--------------------------------------------------------------------------------------------------------------------------------*/\n    private static int gcd(int a, int b) {\n        return b == 0 ? a : gcd(b, a % b);\n    }\n    \n    static boolean[] sieveOfEratosthenes(int n) {\n        boolean[] p = new boolean[n + 1];\n        Arrays.fill(p, true);\n        p[0] = p[1] = false;\n        for (int i = 2; i * i <= n; i++) {\n            if(p[i]) {\n                for (int j = i * i; j <= n; j += i)\n                    p[j] = false;\n            }\n        }\n        return p;\n    }\n    \n    static void sort(int[] a) {\n        List<Integer> l = new ArrayList<>();\n        for (int i : a)\n            l.add(i);\n        Collections.sort(l);\n        for (int i = 0; i < a.length; i++)\n            a[i] = l.get(i);\n    }\n    \n    static long modPow(long a, long b, long m) {\n        long r = 1;\n        a %= m;\n        while(b > 0) {\n            if ((b & 1) != 0)\n                r = r * a % m;\n            b >>= 1;\n            a = a * a % m;\n        }\n        return r;\n    }\n    \n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n        String next() {\n            while(st == null || !st.hasMoreElements()){\n                try{\n                    st = new StringTokenizer(br.readLine());\n                } catch(IOException e){\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n        int[] readArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n        String nextLine(){\n            String s = \"\";\n            try {\n                s = br.readLine();\n            } catch(IOException e){\n                e.printStackTrace();\n            }\n            return s;\n        }\n    }\n    \n    public int maxSum(int[] nums) {\n        Set<Integer> s = new HashSet<>();\n        int sm = 0;\n        boolean nn = false;\n        boolean z = false;\n        int mn = Integer.MIN_VALUE;\n        for (int x : nums) {\n            if(x >= 0) {\n                nn = true;\n                if(x == 0) z = true;\n                if(x > 0 && s.add(x)) {\n                    sm += x;\n                }\n            } else {\n                mn = Math.max(mn, x);\n            }\n        }\n        return nn ? sm : mn;\n    }\n}\n","author":"mk17","submissionId":"1575082622"},[]]},{"398":[{"id":"398","fileName":"1575082685.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int sum = 0;\n        boolean positiveFound = false;\n        HashSet<Integer> seen = new HashSet<>();\n        \n        for(int num : nums){\n            if(num > 0 && !seen.contains(num)){\n                seen.add(num);\n                sum += num;\n                positiveFound = true;\n            }\n        }\n        if (positiveFound) return sum;\n        int maxElement = nums[0];\n        for (int num : nums) maxElement = Math.max(maxElement, num);\n        return maxElement;\n    }\n}","author":"Md Yusuf","submissionId":"1575082685"},[]]},{"399":[{"id":"399","fileName":"1575082670.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int,greater<int>> st;\n        for(auto x:nums){\n            st.insert(x);\n        }\n        int ans=0;\n        bool f = false;\n        for(auto it:st){\n            if(it < 0){\n                if(f) break;\n                else{\n                    ans += (it);\n                    break;\n                }\n            }\n            ans += (it);\n            f = true;\n        }\n        return ans;\n    }\n};","author":"Archit Agarwal","submissionId":"1575082670"},[]]},{"400":[{"id":"400","fileName":"1575082683.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>mp;\n        for(auto a : nums) {\n             if(a <= 0)continue;\n            mp[a]++;\n        }\n        if(mp.size()) {\n             int ans = 0;\n             for(auto a : mp)ans+=a.first;\n            return ans;\n        }\n        else {\n             int ans = -1e9;\n            for(auto a : nums) {\n                 if(a <= 0) { \n                 ans = max(ans , a);\n                     }\n            }\n            return ans;\n        }\n    }\n};","author":"Prasann Trivedi","submissionId":"1575082683"},[]]},{"401":[{"id":"401","fileName":"1575082693.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        res = sum([x if x > 0 else 0 for x in nums])\n        if res == 0:\n            return max(nums)\n        else:\n            return res\n        ","author":"Kevin Cui","submissionId":"1575082693"},[]]},{"402":[{"id":"402","fileName":"1575082720.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        out = 0\n        a = max(nums)\n        if a < 0:\n            return a\n        for num in nums:\n            if num not in seen and num > 0:\n                out += num\n                seen.add(num)\n        return out\n                \n            ","author":"Xander Gardner","submissionId":"1575082720"},[]]},{"403":[{"id":"403","fileName":"1575082704.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, int> um;\n        int sum = 0;\n        int maxV = -100;\n        for (int i = 0; i < nums.size(); i++) {\n            maxV = max(maxV, nums[i]);\n            um[nums[i]]++;\n            if (um[nums[i]] == 1 && nums[i] >= 0) {\n                sum += nums[i];\n            }\n        }\n        if (sum > 0) {\n            return sum;\n        }\n        return maxV;\n    }\n};","author":"flametonat","submissionId":"1575082704"},[{"id":"740","similarity":0.7411764705882353,"totOverlap":63,"longestOverlap":7},{"id":"925","similarity":0.7261904761904762,"totOverlap":61,"longestOverlap":9},{"id":"1776","similarity":0.7341772151898734,"totOverlap":58,"longestOverlap":7},{"id":"1778","similarity":0.7466666666666667,"totOverlap":56,"longestOverlap":18},{"id":"902","similarity":0.7088607594936709,"totOverlap":56,"longestOverlap":11},{"id":"1591","similarity":0.7051282051282052,"totOverlap":55,"longestOverlap":11}]],"740":[{"id":"740","fileName":"1575084932.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        map<int,int> mp;\n        int cnt  = 0;\n        for(int i=0;i<nums.size();i++){\n            if(mp[nums[i]] == 0 && nums[i]>=0 ){\n                ans += nums[i];\n                mp[nums[i]]++;\n                cnt++;\n            }\n        }\n\n        if(cnt == 0){\n            int maxi =INT_MIN;\n            for(int i=0;i<nums.size();i++){\n                maxi = max(maxi,nums[i]);\n            }\n            return maxi;\n        }\n        return ans;\n    }\n};","author":"Harshit Chauhan","submissionId":"1575084932"},[{"id":"403","similarity":0.7411764705882353,"totOverlap":63,"longestOverlap":7}]],"770":[{"id":"770","fileName":"1575085207.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> hash;\n        int ans = 0;\n        int cnt = 0;\n        for(int i = 0 ; i<nums.size() ; i++)\n            {\n                if(nums[i]>=0 && hash.find(nums[i])==hash.end())\n                {\n                    ans+=nums[i];\n                    cnt++;\n                }\n                hash[nums[i]]++;\n            }\n        if(cnt >=1) return ans;\n        // if no count all are negative numbers \n        return *max_element(nums.begin(),nums.end());\n    }\n};","author":"Kalyan Vasanth","submissionId":"1575085207"},[{"id":"1776","similarity":0.7142857142857143,"totOverlap":60,"longestOverlap":9},{"id":"403","similarity":0.7341772151898734,"totOverlap":58,"longestOverlap":7}]],"902":[{"id":"902","fileName":"1575086150.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int> umap;\n        int counter = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums[i] > 0) {\n                if (umap[nums[i]] == 0) {\n                    counter += nums[i];\n                    umap[nums[i]]++;\n                }\n            }\n        }\n        if (counter == 0) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        return counter;\n    }\n};","author":"feli33","submissionId":"1575086150"},[{"id":"770","similarity":0.7088607594936709,"totOverlap":56,"longestOverlap":11}]],"925":[{"id":"925","fileName":"1575086310.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        int n = nums.size();\n        unordered_map<int, int> mp;\n        int pos = 0;\n        int mi = -1e9;\n        for(int i = 0; i < n; ++i)\n            {\n                mp[nums[i]]++;\n                if(mp[nums[i]] == 1 && nums[i] >= 0)\n                {\n                    ans += nums[i];\n                    pos++;\n                    \n                }\n                else if(nums[i] < 0)\n                {\n                    mi = max(mi, nums[i]);\n                }\n            }\n        if(pos == 0)\n        {\n            return mi;\n        }\n        return ans;\n    }\n};","author":"Neerav","submissionId":"1575086310"},[{"id":"1275","similarity":0.7802197802197802,"totOverlap":71,"longestOverlap":9},{"id":"403","similarity":0.7261904761904762,"totOverlap":61,"longestOverlap":9}]],"1275":[{"id":"1275","fileName":"611225514.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n=a.size();\n        map<int,int>p;\n        int ans=0,t=0;\n        int ma=-1e9;\n        for(int i=0;i<n;i++){\n            p[a[i]]++;\n            ma=max(ma,a[i]);\n            if(p[a[i]]==1&&a[i]>=0){\n                 ans+=a[i];\n                 t++;\n            }\n        }\n        if(t==0) ans=ma;\n        return ans;\n    }\n};","author":"20岁有志青年","submissionId":"611225514"},[{"id":"925","similarity":0.7802197802197802,"totOverlap":71,"longestOverlap":9}]],"1591":[{"id":"1591","fileName":"611227764.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, int> cnts;\n        int n = nums.size();\n        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            if (nums[i] > 0 && !cnts.count(nums[i])) {\n                sum += nums[i];\n                cnts[nums[i]]++;\n            }\n        }\n        if (sum == 0) {\n            return ranges::max(nums);\n        }\n        return sum;\n    }\n};","author":"cheningfrank","submissionId":"611227764"},[{"id":"770","similarity":0.7051282051282052,"totOverlap":55,"longestOverlap":11}]],"1776":[{"id":"1776","fileName":"611232711.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        std::map<int,int> h;\n        int res=0;\n        int cnt=0;int ma=-0x3f3f3f3f;\n        for(int i=0;i<nums.size();i++){\n            if(h[nums[i]]==0&&nums[i]>0){\n                res+=nums[i];\n                cnt++;\n            }\n            ma=std::max(ma,nums[i]);\n            h[nums[i]]++;\n        }\n        if(cnt==0){\n            return ma;\n        }\n        return res;\n    }\n};","author":"lemonade","submissionId":"611232711"},[{"id":"770","similarity":0.7142857142857143,"totOverlap":60,"longestOverlap":9}]],"1778":[{"id":"1778","fileName":"611232849.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int> mp;\n        int res=0;\n        int m=-1000;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>=0){\n                if(mp[nums[i]]==0){\n                    mp[nums[i]]++;\n                    res+=nums[i];\n                }\n            }\n            m=max(m,nums[i]);\n        }\n        if(m<=0){\n            return m;\n        }\n        return res;\n    }\n};","author":"xxz","submissionId":"611232849"},[{"id":"403","similarity":0.7466666666666667,"totOverlap":56,"longestOverlap":18}]]},{"405":[{"id":"405","fileName":"1575082702.txt","sourceCode":"class Solution {\npublic:\n    unordered_set<int> count;\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        int mn=INT_MIN;\n        for(const auto &num:nums){\n            if(num>0 && !(count.contains(num))){\n                ans+= num;\n                count.insert(num);\n            }\n            mn = max(mn, num);\n        }\n        if(count.empty()){\n            return mn;\n        }\n        return ans;\n    }\n};","author":"peak_slayer","submissionId":"1575082702"},[]]},{"407":[{"id":"407","fileName":"1575082743.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxi=INT_MIN;\n        \n        int sum=0,f=-1;\n        \n        unordered_map<int,int> u;\n        \n        for(int i=0;i<nums.size();i++){\n            maxi=max(maxi,nums[i]);\n            \n            if(nums[i]>=0){\n                f=1;\n                if(u[nums[i]]==0){\n                    u[nums[i]]++;\n                    sum+=nums[i];\n                }\n            }\n        }\n        \n        if(f>-1) return sum;\n        return maxi;\n    }\n};","author":"Sagar Goel","submissionId":"1575082743"},[]]},{"408":[{"id":"408","fileName":"1575082742.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return nums[0]\n\n        s = set()\n        ans = 0\n\n        for i in nums:\n            if i>0 and i not in s:\n                ans += i\n                s.add(i)\n\n        if not s:\n            return max(nums)\n\n        return ans","author":"Ajay Prem","submissionId":"1575082742"},[]]},{"409":[{"id":"409","fileName":"1575082744.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(auto it: nums) st.insert(it);\n        \n        int res = 0;\n        int maxi = INT_MIN;\n        for(auto it: st){\n            if(it > 0) res += it;\n            maxi = max(maxi, it);\n        }\n        \n        if(maxi <= 0) return maxi;\n        return res;\n    }\n};","author":"Mohit_is_back","submissionId":"1575082744"},[{"id":"907","similarity":0.7346938775510204,"totOverlap":36,"longestOverlap":17}]],"907":[{"id":"907","fileName":"1575086174.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(auto it : nums) st.insert(it);\n        int ans=0;\n        int c=INT_MIN;\n        for(auto it : st){\n            if(it>0) ans+=it;\n            else c=max(c,it);\n        }\n        return (ans?ans:c);\n    }\n};","author":"The mogorgon","submissionId":"1575086174"},[{"id":"409","similarity":0.7346938775510204,"totOverlap":36,"longestOverlap":17}]]},{"412":[{"id":"412","fileName":"1575082762.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int maxSum = INT_MIN;\n        \n        // Try all possible subsequences (not just subarrays)\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                // Try the subarray from i to j inclusive\n                vector<int> subsequence;\n                for (int k = i; k <= j; k++) {\n                    subsequence.push_back(nums[k]);\n                }\n                \n                // Now find all ways to delete elements from this subsequence\n                maxSum = max(maxSum, findMaxSumWithDeletions(subsequence));\n            }\n        }\n        \n        return maxSum;\n    }\n    \nprivate:\n    int findMaxSumWithDeletions(vector<int>& arr) {\n        int n = arr.size();\n        \n        // Keep only one copy of each element (greedily)\n        unordered_map<int, int> bestValueMap; // Value -> best position\n        \n        for (int i = 0; i < n; i++) {\n            // If we've seen this value before, keep the better one\n            if (bestValueMap.find(arr[i]) != bestValueMap.end()) {\n                // Keep the one with higher value\n                bestValueMap[arr[i]] = max(bestValueMap[arr[i]], arr[i]);\n            } else {\n                bestValueMap[arr[i]] = arr[i];\n            }\n        }\n        \n        // Sum all positive values\n        int sum = 0;\n        for (auto& pair : bestValueMap) {\n            if (pair.second > 0) {\n                sum += pair.second;\n            }\n        }\n        \n        // If no positive values, return the maximum value\n        if (sum == 0 && !bestValueMap.empty()) {\n            int maxVal = INT_MIN;\n            for (auto& pair : bestValueMap) {\n                maxVal = max(maxVal, pair.second);\n            }\n            return maxVal;\n        }\n        \n        return sum;\n    }\n};","author":"pavitra_dakarapu","submissionId":"1575082762"},[]]},{"413":[{"id":"413","fileName":"1575082779.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& v) {\n        unordered_map<int,bool>u;\n        for(auto &k: v) if(k>=0) u[k]=1;\n        int s=0;\n        if(u.size() == 0) return *max_element(v.begin(),v.end());\n        for(auto &[i,j]: u) s+=i;\n        return s;\n    }\n};","author":"Archit Jain","submissionId":"1575082779"},[]]},{"416":[{"id":"416","fileName":"1575082771.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        nums.erase(unique(nums.begin(),nums.end()),nums.end());\n        int sum = -1e9,ans = -1e9;\n        for(int i = 0;i < nums.size();i ++){\n            sum = max(sum + nums[i],nums[i]);\n            ans = max(ans,sum);\n        }\n        return ans;\n    }\n};","author":"LeThanhCong","submissionId":"1575082771"},[]]},{"419":[{"id":"419","fileName":"1575082826.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n        set<int> st;\n        int maxi = -1e9;\n        for(int it: nums) {\n            if(it >= 0)\n                st.insert(it);\n            if(it < 0)\n                maxi = max(maxi, it);\n        }\n\n        if(st.size() == 0)\n                return maxi;\n        \n        int sum = 0;\n        for(auto it: st) {\n            sum += it;\n        }\n        return sum;\n    }\n};","author":"Gagan B","submissionId":"1575082826"},[]]},{"420":[{"id":"420","fileName":"1575082838.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer>h=new HashSet<>();\n        int s=0;\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]>=0 && h.contains(nums[i])==false){\n                h.add(nums[i]);\n                s=s+nums[i];\n            }\n        }\n        if(h.size()!=0){\n            return s;\n        }else{\n            int max=Integer.MIN_VALUE;\n            for(int i=0;i<nums.length;i++){\n                max=Math.max(max,nums[i]);\n            }\n            return max;\n        }\n    }\n}","author":"grimreaper123","submissionId":"1575082838"},[]]},{"6":[{"id":"6","fileName":"1575079368.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int sum=0;\n        for(auto it:nums){\n            if(it>0)s.insert(it);\n        }\n        for(auto it:s)sum+=it;\n        int Max=-1e9;\n        if(s.empty()){\n            for(auto it:nums)Max=max(Max,it);\n            return Max;\n        }\n        return sum;\n    }\n};","author":"hank55663","submissionId":"1575079368"},[{"id":"6","similarity":0.7213114754098361,"totOverlap":44,"longestOverlap":12}]],"13":[{"id":"13","fileName":"1575079484.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> pos;\n        for(auto e : nums) if (e > 0) pos.insert(e);\n        if (pos.empty()) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        return accumulate(pos.begin(), pos.end(), 0);\n    }\n};","author":"Ian McKibben","submissionId":"1575079484"},[{"id":"13","similarity":0.7903225806451613,"totOverlap":49,"longestOverlap":10}]],"28":[{"id":"28","fileName":"1575079648.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool all_neg = true;\n        for (int n : nums) {\n            if (n >= 0) {\n                all_neg = false;\n            }\n        }\n        if (all_neg) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        set<int> s;\n        for (int n : nums) {\n            if (n >= 0) s.insert(n);\n        }\n        int ans = 0;\n        for (int n : s) ans += n;\n        return ans;\n        \n    }\n};","author":"SirTechnical","submissionId":"1575079648"},[{"id":"1192","similarity":0.7941176470588235,"totOverlap":54,"longestOverlap":17},{"id":"28","similarity":0.796875,"totOverlap":51,"longestOverlap":7}]],"29":[{"id":"29","fileName":"1575079751.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(int i=0;i<nums.size();i++){\n            st.insert(nums[i]);\n        }\n        int sum=0;\n        for(auto it:st){\n            if(it>0){\n                sum+=it;\n            }\n        }\n        if(sum==0){\n            sum=*prev(st.end());\n        }\n        return sum;\n    }\n};","author":"Mahmoud Ashour","submissionId":"1575079751"},[{"id":"29","similarity":0.7258064516129032,"totOverlap":45,"longestOverlap":13}]],"48":[{"id":"48","fileName":"1575079924.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        if(nums.back()<=0)return nums.back();\n        int ret = 0;\n        unordered_set<int>M;\n        for(int i: nums) {\n            if(i>0)M.insert(i);\n        }\n        for(auto i: M){\n            ret+=i;\n        }\n        return ret;\n    }\n};","author":"zerox130617","submissionId":"1575079924"},[{"id":"48","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":7}]],"50":[{"id":"50","fileName":"1575079909.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int m = INT_MIN;\n        for (int n : nums) {\n            if (n > 0) st.insert(n);\n            else m = max(m, n);\n        }\n        if (st.empty()) return m;\n        int res = 0;\n        for (int n : st) {\n            res += n;\n        }\n        return res;\n    }\n};","author":"raincoat911","submissionId":"1575079909"},[{"id":"577","similarity":0.9259259259259259,"totOverlap":50,"longestOverlap":25},{"id":"577","similarity":0.9090909090909091,"totOverlap":50,"longestOverlap":12}]],"51":[{"id":"51","fileName":"1575079963.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> mp;\n        int sum=0;\n        for(auto j : nums) mp[j]++;\n        for(auto j : mp) sum+=max(0,j.first);\n        int t=*max_element(nums.begin(),nums.end());\n        if(t<0) return t;\n        return sum;\n    }\n};","author":"Neel Y Tandel","submissionId":"1575079963"},[{"id":"51","similarity":0.7192982456140351,"totOverlap":41,"longestOverlap":13}]],"63":[{"id":"63","fileName":"1575080115.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int size = nums.size(), result = 0, maximum = *max_element(nums.begin(), nums.end());\n        unordered_set<int> s;\n        for (int num : nums) {\n            if (num > 0 && s.find(num) == s.end()) {\n                result += num;\n                s.insert(num);\n            }\n        }\n        return result == 0 ? maximum : result;\n    }\n};","author":"Mark Qi","submissionId":"1575080115"},[{"id":"63","similarity":0.8448275862068966,"totOverlap":49,"longestOverlap":7}]],"66":[{"id":"66","fileName":"1575080145.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> us;\n        for (auto num : nums) {\n            if (num >= 0) {\n                us.insert(num);\n            }\n        }\n        if (us.empty()) return *max_element(nums.begin(), nums.end());\n        int ret = 0;\n        for (auto num : us) {\n            ret += num;\n        }\n        return ret;\n    }\n};","author":"qirunzeng","submissionId":"1575080145"},[{"id":"949","similarity":0.8461538461538461,"totOverlap":55,"longestOverlap":17},{"id":"673","similarity":0.8125,"totOverlap":52,"longestOverlap":17},{"id":"984","similarity":0.8,"totOverlap":52,"longestOverlap":9},{"id":"949","similarity":0.7647058823529411,"totOverlap":52,"longestOverlap":10},{"id":"66","similarity":0.7727272727272727,"totOverlap":51,"longestOverlap":16}]],"67":[{"id":"67","fileName":"1575080137.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int mx = *max_element(nums.begin(), nums.end());\n        for (int x : nums)\n            if (x >= 0)\n                st.insert(x);\n        if (st.empty())\n            return mx;\n        int res = 0;\n        for (int x : st)\n            res += x;\n        return res;\n    }\n};","author":"Abhishek Srivastava","submissionId":"1575080137"},[{"id":"67","similarity":0.7936507936507936,"totOverlap":50,"longestOverlap":8}]],"70":[{"id":"70","fileName":"1575080157.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        set<int> s;\n        for(int i:nums) if(i>0) s.insert(i);\n\n        if(s.empty()) return *max_element(nums.begin(), nums.end());\n\n        int sum = 0;\n        for(int i:s) sum += i;\n\n        return sum;\n    }\n};","author":"Shashank Gupta","submissionId":"1575080157"},[{"id":"70","similarity":0.8307692307692308,"totOverlap":54,"longestOverlap":17}]],"71":[{"id":"71","fileName":"1575080203.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        for(auto n:nums) s.insert(n);\n        int ans=0;\n        ans+=*s.rbegin();\n        s.erase(ans);\n        for(auto e:s) {\n            if(e>0)\n                ans+=e;\n        }\n        return ans;\n    }\n};","author":"ads169573","submissionId":"1575080203"},[{"id":"71","similarity":0.7021276595744681,"totOverlap":33,"longestOverlap":12}]],"73":[{"id":"73","fileName":"1575080240.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> seen;\n        int ans = 0;\n        int mx = INT_MIN;\n        for(int i : nums) {\n            mx = max(mx, i);\n            if(i > 0 && seen.count(i) == 0) {\n                seen.insert(i);\n                ans += i;\n            }\n            mx = max(mx, i);\n        }\n        return seen.size() == 0 ? mx : ans;\n    }\n};","author":"Atul","submissionId":"1575080240"},[{"id":"73","similarity":0.7068965517241379,"totOverlap":41,"longestOverlap":13}]],"84":[{"id":"84","fileName":"1575080336.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(int i: nums) {\n            if(i>0) s.insert(i);\n        }\n        int res = 0;\n        for(int i: s) res += i;\n        if(res==0) return *max_element(begin(nums), end(nums));\n        return res;\n    }\n};","author":"7saken","submissionId":"1575080336"},[{"id":"84","similarity":0.7636363636363637,"totOverlap":42,"longestOverlap":8}]],"86":[{"id":"86","fileName":"1575080351.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        set<int> s;\n        int r = 0;\n        for (int x : a) {\n            if (x > 0 && !s.count(x)) {\n                s.insert(x);\n                r += x;\n            }\n        }\n        return r ? r : *max_element(a.begin(), a.end());\n    }\n};","author":"Nimish","submissionId":"1575080351"},[{"id":"86","similarity":0.7924528301886793,"totOverlap":42,"longestOverlap":10}]],"89":[{"id":"89","fileName":"1575080358.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        unordered_set <int> st;\n        for(int i =0;i<n;++i){\n            if(nums[i] > 0){\n                st.insert(nums[i]);\n            }\n        }\n        int sum = 0;\n        for(auto & i : st){\n            sum += i;\n        }\n        if(st.size() == 0){\n            return *max_element(nums.begin(),nums.end());\n        }\n        return sum;\n    }\n};","author":"sr6esI829x","submissionId":"1575080358"},[{"id":"89","similarity":0.7671232876712328,"totOverlap":56,"longestOverlap":21}]],"90":[{"id":"90","fileName":"1575080419.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        if(nums.back() < 0) return nums.back();\n        nums.erase(unique(nums.begin(), nums.end()), nums.end());\n        int result = 0;\n        for(int i : nums) if(i > 0) result += i;\n        return result;\n    }\n};","author":"Stanley Jian","submissionId":"1575080419"},[{"id":"90","similarity":0.7246376811594203,"totOverlap":50,"longestOverlap":11}]],"99":[{"id":"99","fileName":"1575080537.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n\n        unordered_set<int> dict;\n        int sum = 0;\n        for (int i = 0; i < nums.size(); ++i)\n            {\n                if (nums[i] < 0) continue;\n                if (dict.count(nums[i]) == 0)\n                {\n                    sum += nums[i];\n                    dict.insert(nums[i]);\n                }\n            }\n        if (dict.size() == 0)\n        {\n            return nums.back();\n        }\n\n        return sum;\n    }\n};","author":"pandapower","submissionId":"1575080537"},[{"id":"515","similarity":0.7912087912087912,"totOverlap":72,"longestOverlap":12},{"id":"199","similarity":0.7127659574468085,"totOverlap":67,"longestOverlap":11}]],"105":[{"id":"105","fileName":"1575080552.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        for (int n: nums)\n        {\n            if (n > 0)\n                s.insert(n);\n        }\n        if (s.empty())\n        {\n            int res = INT_MIN;\n            for (int n: nums)\n                res = max(res, n);\n            return res;\n        }\n        int res = 0;\n        for (int n: s)\n            res += n;\n        return res;\n    }\n};","author":"birds3345","submissionId":"1575080552"},[{"id":"105","similarity":0.7666666666666667,"totOverlap":46,"longestOverlap":18}]],"107":[{"id":"107","fileName":"1575080614.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s(nums.begin(), nums.end());\n        int t = *s.rbegin();\n        int c = 0;\n        int sum = 0;\n        for (auto &i : s) {\n            if (i > 0) {\n                sum += i;\n                c++;\n            }\n        }\n        return c == 0 ? t : sum;\n    }\n};","author":"allforest01","submissionId":"1575080614"},[{"id":"1082","similarity":0.7361111111111112,"totOverlap":53,"longestOverlap":15},{"id":"1292","similarity":0.7101449275362319,"totOverlap":49,"longestOverlap":15},{"id":"1090","similarity":0.7619047619047619,"totOverlap":48,"longestOverlap":12},{"id":"321","similarity":0.7580645161290323,"totOverlap":47,"longestOverlap":15},{"id":"321","similarity":0.7580645161290323,"totOverlap":47,"longestOverlap":17}]],"115":[{"id":"115","fileName":"1575080652.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        set<int, greater<int>> st(a.begin(), a.end());\n        int ans = 0;\n        for (int i : st) {\n            if (i > 0) {\n                ans += i;\n            }\n        }\n        if (*st.begin() < 0) {\n            ans += *st.begin();\n        }\n        return ans;\n    }\n};","author":"Dang Nguyen Bao","submissionId":"1575080652"},[{"id":"115","similarity":0.7037037037037037,"totOverlap":38,"longestOverlap":9}]],"118":[{"id":"118","fileName":"1575080666.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s(nums.begin(), nums.end());\n        if (*s.rbegin() <= 0) return *s.rbegin();\n        int ans = 0;\n        for (int num : s) {\n            ans += (num > 0 ? num : 0);\n        }\n        return ans;\n    }\n};","author":"JeffreyLC","submissionId":"1575080666"},[{"id":"118","similarity":0.8666666666666667,"totOverlap":52,"longestOverlap":26}]],"119":[{"id":"119","fileName":"1575080680.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> A;\n        int ss = 0;\n        for (auto& c : nums) {\n            if (c >= 0) A.insert(c);\n        }\n        if (A.size() == 0) {\n            A.insert(*max_element(nums.begin(),nums.end()));\n        }\n        for (auto& c : A) ss += c;\n        return ss;\n    }\n};","author":"abz-codes","submissionId":"1575080680"},[{"id":"119","similarity":0.7162162162162162,"totOverlap":53,"longestOverlap":10}]],"123":[{"id":"123","fileName":"1575080714.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for (int i: nums) {\n            if (i>=0) st.insert(i);\n        }\n        if (st.empty()) {\n            int m=nums[0];\n            for (int i: nums) {\n                m=max(m, i);\n            }\n            return m;\n        }\n        int res=0;\n        for (int i: st) {\n            res+=i;\n        }\n        return res;\n    }\n};","author":"lozy219","submissionId":"1575080714"},[{"id":"1868","similarity":0.8548387096774194,"totOverlap":53,"longestOverlap":11},{"id":"751","similarity":0.7692307692307693,"totOverlap":50,"longestOverlap":14},{"id":"123","similarity":0.71875,"totOverlap":46,"longestOverlap":18}]],"124":[{"id":"124","fileName":"1575080687.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int res = nums[0];\n        for(int i : nums) res = max(res, i);\n        unordered_set<int> st;\n        for(int i : nums) if(i > 0) st.insert(i);\n        if(!st.empty()) {\n            int s = 0;\n            for(int i : st) s += i;\n            res = max(res, s);\n        }\n        return res;\n    }\n};","author":"facelessvoid","submissionId":"1575080687"},[{"id":"124","similarity":0.7397260273972602,"totOverlap":54,"longestOverlap":12}]],"126":[{"id":"126","fileName":"1575080736.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        set<int> x;\n        int cnt=0;\n        int max_neg=-200;\n        for(auto e:nums){\n            if(e<0){\n                max_neg=max(max_neg,e);\n                continue;\n            }\n            \n            if(x.find(e) == x.end()){\n                cnt++;\n                ans=ans+e;\n            }\n            \n            x.insert(e);\n        }\n        \n        if(cnt==0){\n            ans=max_neg;\n        }\n        return ans;\n    }\n};","author":"Harikrishna Shenoy","submissionId":"1575080736"},[{"id":"878","similarity":0.7391304347826086,"totOverlap":51,"longestOverlap":7},{"id":"147","similarity":0.7352941176470589,"totOverlap":50,"longestOverlap":17}]],"127":[{"id":"127","fileName":"1575080730.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>0){\n                s.insert(nums[i]);\n            }\n        }\n        int sum=0;\n        for(auto x:s){\n            sum += x;\n        }\n        if(s.size()==0){\n            sum = *max_element(nums.begin(), nums.end());\n        }\n        return sum;\n    }\n};","author":"Jai Khanna","submissionId":"1575080730"},[{"id":"127","similarity":0.7837837837837838,"totOverlap":58,"longestOverlap":17}]],"130":[{"id":"130","fileName":"1575080749.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> nset;\n\n        for (int n: nums) {\n            if (n > 0) {\n                nset.insert(n);\n            }\n        }\n        \n        if (!nset.empty()) {\n            return accumulate(nset.begin(), nset.end(), 0);\n        } else {\n            return *max_element(nums.begin(), nums.end());\n        }\n    }\n};","author":"Daniel","submissionId":"1575080749"},[{"id":"130","similarity":0.7758620689655172,"totOverlap":45,"longestOverlap":13}]],"137":[{"id":"137","fileName":"1575080783.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& arr) {\n        unordered_set<int> st;\n        for (int x : arr) {\n            st.insert(x);\n        }\n        int ans = 0;\n        bool pos = false;\n        for (int x : st) {\n            if (x >= 0) {\n                ans += x;\n                pos = true;\n            }\n        }\n        if (!pos) {\n            ans = *max_element(st.begin(), st.end());\n        }\n        return ans;\n    }\n};\n","author":"Ekambareswar","submissionId":"1575080783"},[{"id":"137","similarity":0.796875,"totOverlap":51,"longestOverlap":8}]],"140":[{"id":"140","fileName":"1575080869.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st(nums.begin(), nums.end());\n        int res = 0;\n        int maxi = INT_MIN;\n        for (int i : st) {\n            if (i > 0) res += i;\n            maxi = max(maxi, i);\n        }\n\n        if (res == 0) return maxi;\n        return res;\n    }\n};","author":"Edward","submissionId":"1575080869"},[{"id":"140","similarity":0.8,"totOverlap":48,"longestOverlap":17}]],"147":[{"id":"147","fileName":"1575080918.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        set<int> s;\n        int sum=0;\n        int cnt=0;\n        for(auto i:nums){\n            if(i>=0 && s.count(i)==0){\n                sum+=i;\n                s.insert(i);\n                cnt++;\n            }\n        }\n        if(cnt==0) return *max_element(nums.begin(),nums.end());\n        return sum;\n    }\n};","author":"Ritik Arora","submissionId":"1575080918"},[{"id":"1633","similarity":0.7083333333333334,"totOverlap":51,"longestOverlap":6},{"id":"878","similarity":0.7352941176470589,"totOverlap":50,"longestOverlap":17},{"id":"179","similarity":0.7142857142857143,"totOverlap":50,"longestOverlap":15}]],"149":[{"id":"149","fileName":"1575080946.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        \n        sort(nums.begin() , nums.end());\n        \n        if(nums.back() < 0)     return nums.back();\n        \n        set<int> st;\n        \n        for(auto &it : nums){\n            \n            if(it > 0){\n                \n                st.insert(it);\n            }\n        }\n        \n        int sum = 0;\n        \n        for(auto &it : st)      sum += it;\n        \n        return sum;\n    }\n};","author":"Sunny Sehwag","submissionId":"1575080946"},[{"id":"149","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":10}]],"152":[{"id":"152","fileName":"1575080959.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int m = INT_MIN;\n        set<int> st;\n        for(int i : nums){\n            if(i > 0)\n                st.insert(i);\n            m = max(m, i);\n        }\n        int res=0;\n        for(int i : st)\n                res += i;\n        if(res == 0)\n            return m;\n        return res;\n    }\n};","author":"育志 林","submissionId":"1575080959"},[{"id":"152","similarity":0.7796610169491526,"totOverlap":46,"longestOverlap":8}]],"153":[{"id":"153","fileName":"1575080941.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int res = 0;\n        for (int i : nums) if (i > 0) st.insert(i);\n\n        if (st.empty()) {\n            res = INT_MIN;\n            for (int i : nums) res = max(res, i);\n            return res;\n        }\n        \n        for (int i : st) res += i;\n        return res;\n    }\n};","author":"PP Hunter","submissionId":"1575080941"},[{"id":"67","similarity":0.7704918032786885,"totOverlap":47,"longestOverlap":11}]],"161":[{"id":"161","fileName":"1575081024.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& v) \n    {\n        set<int>s;\n        int ans=0;\n        int tmp=-101;\n        for(auto it:v)\n            {\n            s.insert(it);\n            tmp=max(tmp,it);\n            }\n        int con=0;\n        for(auto it:s)\n        {\n            if(it>=0)\n                {\n                 ans+=it;\n                con=1;\n                }\n        }\n        if(con==1)\n        return ans;\n        return tmp;\n    }\n};","author":"Neelabh Rana","submissionId":"1575081024"},[{"id":"161","similarity":0.7049180327868853,"totOverlap":43,"longestOverlap":16}]],"167":[{"id":"167","fileName":"1575081085.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(auto& it:nums)\n            {\n                if(it>0) st.insert(it);\n            }\n        if(st.size()==0)\n        {\n            return *max_element(nums.begin(),nums.end());\n        }\n        int ans=0;\n        for(auto& it:st) ans+=it;\n        return ans;\n    }\n};","author":"Naman Dwivedi","submissionId":"1575081085"},[{"id":"514","similarity":0.8983050847457628,"totOverlap":53,"longestOverlap":19},{"id":"261","similarity":0.8032786885245902,"totOverlap":49,"longestOverlap":16}]],"177":[{"id":"177","fileName":"1575081119.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s(nums.begin(),nums.end());\n        long long ans=0;\n        ans += (*s.rbegin());\n        s.erase(*s.rbegin());\n        for(auto it:s){\n            if(it>0){\n                ans+=it;\n            }\n        }\n        return ans;\n    }\n};","author":"Avirat Joshi","submissionId":"1575081119"},[{"id":"177","similarity":0.7213114754098361,"totOverlap":44,"longestOverlap":17}]],"179":[{"id":"179","fileName":"1575081162.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        unordered_set<int> used;\n        int res = 0;\n        for(int n: nums) {\n            if(n > 0 && used.find(n) == used.end()) {\n                res += n;\n                used.insert(n);\n            }\n        }\n        if(res == 0) return nums.back();\n        return res;\n    }\n};","author":"karton9647","submissionId":"1575081162"},[{"id":"179","similarity":0.7846153846153846,"totOverlap":51,"longestOverlap":11}]],"192":[{"id":"192","fileName":"1575081298.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for (auto& elem: nums) {\n            if (elem > 0) {\n                st.insert(elem);\n            }\n        }\n        if (st.empty()) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        return accumulate(st.begin(), st.end(), 0);\n    }\n};","author":"Manikya Sharma","submissionId":"1575081298"},[{"id":"1610","similarity":0.967741935483871,"totOverlap":60,"longestOverlap":21},{"id":"647","similarity":0.8382352941176471,"totOverlap":57,"longestOverlap":19},{"id":"447","similarity":0.873015873015873,"totOverlap":55,"longestOverlap":15},{"id":"647","similarity":0.7638888888888888,"totOverlap":55,"longestOverlap":16},{"id":"227","similarity":0.7142857142857143,"totOverlap":55,"longestOverlap":12}]],"193":[{"id":"193","fileName":"1575081318.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(auto i:nums) st.insert(i);\n        int ans=0;\n        int op=0;\n        while(!st.empty()){\n            op++;\n            int x=*st.rbegin();\n            if(x<0){\n                if(op==1) ans=x;\n                break;}\n            ans+=x;\n            st.erase(x);\n        }\n        return ans;\n    }\n};","author":"Terror_404","submissionId":"1575081318"},[{"id":"481","similarity":0.7222222222222222,"totOverlap":39,"longestOverlap":13},{"id":"481","similarity":0.7090909090909091,"totOverlap":39,"longestOverlap":12}]],"199":[{"id":"199","fileName":"1575081383.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        int cnt=0;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]<0){\n                cnt++;\n                continue;\n            }\n            s.insert(nums[i]);\n        }\n        if(cnt==nums.size()){\n            sort(nums.begin(),nums.end());\n            return nums[nums.size()-1];\n        }\n        int ans=0;\n        for(auto it:s){\n            ans+=it;\n        }\n        return ans;\n    }\n};","author":"Popeye","submissionId":"1575081383"},[{"id":"1141","similarity":0.7912087912087912,"totOverlap":72,"longestOverlap":18},{"id":"515","similarity":0.7127659574468085,"totOverlap":67,"longestOverlap":11},{"id":"936","similarity":0.7058823529411765,"totOverlap":60,"longestOverlap":11},{"id":"1698","similarity":0.7023809523809523,"totOverlap":59,"longestOverlap":9},{"id":"598","similarity":0.7307692307692307,"totOverlap":57,"longestOverlap":25},{"id":"1018","similarity":0.803030303030303,"totOverlap":53,"longestOverlap":15},{"id":"598","similarity":0.8360655737704918,"totOverlap":51,"longestOverlap":11},{"id":"598","similarity":0.864406779661017,"totOverlap":51,"longestOverlap":18},{"id":"598","similarity":0.85,"totOverlap":51,"longestOverlap":18}]],"200":[{"id":"200","fileName":"1575081384.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        int sum = 0, mx = INT_MIN;\n        for(int num : nums) {\n            if(!s.count(num) && num >= 0) {\n                sum += num;\n                s.insert(num);\n            }\n            mx = max(mx, num);\n        }\n        if(s.empty()) {\n            return mx;\n        }\n        return sum;\n    }\n};","author":"jason7708","submissionId":"1575081384"},[{"id":"718","similarity":0.835820895522388,"totOverlap":56,"longestOverlap":17},{"id":"1842","similarity":0.8125,"totOverlap":52,"longestOverlap":11},{"id":"718","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":15}]],"203":[{"id":"203","fileName":"1575081386.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        set<int> s;\n        for(auto k:a)if(k>0)s.insert(k);\n        int sum = 0;\n        for(auto k:s)sum+=k;\n        if(s.size()==0){\n            sum = INT_MIN;\n            for(auto k:a)sum = max(sum,k);\n            return sum;\n        }\n        return sum;\n    }\n};","author":"Ashray Tiwari","submissionId":"1575081386"},[{"id":"987","similarity":0.9508196721311475,"totOverlap":58,"longestOverlap":29},{"id":"580","similarity":0.7741935483870968,"totOverlap":48,"longestOverlap":17},{"id":"516","similarity":0.7419354838709677,"totOverlap":46,"longestOverlap":8},{"id":"304","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":12}]],"208":[{"id":"208","fileName":"1575081423.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        bool hasPositive = false;\n        unordered_set<int> seen;\n        \n        // Add each positive element once.\n        for (int num : nums) {\n            if (num > 0 && seen.find(num) == seen.end()) {\n                sum += num;\n                seen.insert(num);\n                hasPositive = true;\n            }\n        }\n        \n        // If there's at least one positive, that sum is maximal.\n        if (hasPositive) return sum;\n        \n        // Otherwise, return the maximum element (best among negatives and/or zeros)\n        return *max_element(nums.begin(), nums.end());\n    }\n};\n","author":"Testing","submissionId":"1575081423"},[{"id":"208","similarity":0.7868852459016393,"totOverlap":48,"longestOverlap":9}]],"225":[{"id":"225","fileName":"1575081544.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>mp;\n        int ans = 0;\n        for(auto &it : nums){\n            if(mp.find(it)==mp.end() && it>0)ans+=it;\n            mp[it]++;\n        }\n        if(ans==0){\n            ans = *max_element(nums.begin(),nums.end());\n        }\n        return ans;\n    }\n};","author":"Chetan Sharma","submissionId":"1575081544"},[{"id":"225","similarity":0.7543859649122807,"totOverlap":43,"longestOverlap":12}]],"227":[{"id":"227","fileName":"1575081556.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = a.size();\n        set<int> s;\n        for (auto &x : a) {\n            if (x >= 0) s.insert(x);\n        }\n        if (s.empty()) return *max_element(a.begin(), a.end());\n        int ret = 0;\n        for (auto x : s) ret += x;\n        return ret;\n    }\n};","author":"umeshbahadur1729","submissionId":"1575081556"},[{"id":"261","similarity":0.8787878787878788,"totOverlap":58,"longestOverlap":22},{"id":"227","similarity":0.7638888888888888,"totOverlap":55,"longestOverlap":16}]],"229":[{"id":"229","fileName":"1575081555.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int largest=INT_MIN;\n        int sum=0;\n        unordered_set<int>visited;\n        for(int n:nums)\n        {\n            if(n > 0 && !visited.count(n))\n            {\n                visited.insert(n);\n                sum+=n;\n            }\n            largest = max(largest,n);\n        }\n        if(largest <= 0)\n            return largest;\n        return sum;\n    }\n};","author":"Mridul Gupta","submissionId":"1575081555"},[{"id":"794","similarity":0.8214285714285714,"totOverlap":46,"longestOverlap":14},{"id":"229","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":17}]],"232":[{"id":"232","fileName":"1575081577.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(auto i : nums) s.insert(i);\n\n        int ans = 0;\n        for(auto i : s) {\n            if(i > 0) ans += i;\n        }\n\n        if(*s.rbegin() < 0) return *s.rbegin();\n\n        return ans;\n    }\n};","author":"Ashutosh Kumar","submissionId":"1575081577"},[{"id":"272","similarity":0.8888888888888888,"totOverlap":40,"longestOverlap":11},{"id":"232","similarity":0.7090909090909091,"totOverlap":39,"longestOverlap":14}]],"234":[{"id":"234","fileName":"1575081597.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> bag;\n        int minn=INT_MAX;\n        for(int& num:nums){\n            if(num>=0)bag.insert(num);\n            minn=min(minn,abs(num));\n        }\n        if(bag.empty())return -minn;\n        int ans=0;\n        for(auto it:bag)ans+=it;\n        return ans;\n    }\n};","author":"VVS Raghavendra","submissionId":"1575081597"},[{"id":"234","similarity":0.7457627118644068,"totOverlap":44,"longestOverlap":20}]],"237":[{"id":"237","fileName":"1575081623.txt","sourceCode":"class Solution {\npublic:\n  int maxSum(vector<int>& nums) {\n    int ans = 0;\n    set<int> S{nums.begin(), nums.end()};\n    bool flag = false;\n    for (auto& u : S) {\n      if (u >= 0) {\n        ans += u;\n        flag = true;\n      }\n    }\n    if (!flag) {\n      return *max_element(nums.begin(), nums.end());\n    }\n    return ans;\n  }\n};","author":"C0ldSmi1e","submissionId":"1575081623"},[{"id":"237","similarity":0.7377049180327869,"totOverlap":45,"longestOverlap":7}]],"238":[{"id":"238","fileName":"1575081677.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort (nums.begin(), nums.end());\n        if (nums.back() <= 0)\n            return nums.back();\n        \n        int res = 0;\n        set<int> s;\n        for (int num : nums) {\n            if (num > 0 && s.count(num) == 0) {\n                res += num;\n                s.insert(num);\n            }\n        }\n            \n            \n        return res;\n    }\n};","author":"NaoJoeMiao","submissionId":"1575081677"},[{"id":"48","similarity":0.7966101694915254,"totOverlap":47,"longestOverlap":21}]],"242":[{"id":"242","fileName":"1575081685.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        \n        for(int i: nums)\n        {\n            if(i > 0) s.insert(i);\n        }\n        \n        if(s.size() == 0)\n        {\n            return *max_element(nums.begin(), nums.end());\n        }\n        \n        int res = 0;\n        for(int i: s) res+= i;\n        return res;\n    }\n};","author":"ForGive","submissionId":"1575081685"},[{"id":"625","similarity":0.9354838709677419,"totOverlap":58,"longestOverlap":29},{"id":"375","similarity":0.8615384615384616,"totOverlap":56,"longestOverlap":15}]],"249":[{"id":"249","fileName":"1575081725.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(auto& a : nums){\n            if(a > 0)st.insert(a);\n        }\n        int ans = 0;\n        for(auto& a : st)ans += a;\n        if(ans == 0){\n            int mx = INT_MIN;\n            for(auto& a : nums)mx = max(mx , a);\n            return mx;\n        }\n        return ans;\n    }\n};","author":"sujal das","submissionId":"1575081725"},[{"id":"249","similarity":0.7321428571428571,"totOverlap":41,"longestOverlap":20}]],"250":[{"id":"250","fileName":"1575081756.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        set<int> st(nums.begin(),nums.end());\n        int n = nums.size();\n        \n        if(nums[n-1] <= 0){\n            return nums[n-1];\n        }\n        int ans = 0;\n        for(auto it:st){\n            if(it>0){\n                ans += it;\n            }\n        }\n\n        return ans;\n    }\n};","author":"Harshit","submissionId":"1575081756"},[{"id":"250","similarity":0.7205882352941176,"totOverlap":49,"longestOverlap":17}]],"251":[{"id":"251","fileName":"1575081734.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> hm;\n        int maxi=INT_MIN;\n        for(auto it:nums){\n            if(it>0){\n                hm.insert(it);\n            }\n            else\n                maxi=max(maxi,it);\n        }\n        int ans=0;\n        for(auto it:hm){\n            ans+=it;\n        }\n        if(hm.size()==0)\n              return maxi;\n        return ans;\n    }\n};","author":"balaganesh","submissionId":"1575081734"},[{"id":"953","similarity":0.7962962962962963,"totOverlap":43,"longestOverlap":12},{"id":"251","similarity":0.7636363636363637,"totOverlap":42,"longestOverlap":8}]],"257":[{"id":"257","fileName":"1575081774.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int mx = INT_MIN;\n        for(int num:nums){\n            if(num > 0){\n                st.insert(num);\n            }\n            else{\n                mx = max(mx, num);\n            }\n        }\n\n        if(st.empty()) return mx;\n        \n        int ans = 0;\n        for(int x:st) ans += x;\n\n        return ans;\n    }\n};","author":"Ganesh Yadav","submissionId":"1575081774"},[{"id":"257","similarity":0.8888888888888888,"totOverlap":48,"longestOverlap":13}]],"258":[{"id":"258","fileName":"1575081784.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(auto it:nums){\n            if(it>=0){\n                st.insert(it);\n            }\n        }\n        if(st.size()==0){\n            sort(nums.rbegin(),nums.rend());\n            return nums[0];\n        }\n        int sum=0;\n        for(auto it:st) sum+=it;\n        return sum;\n    }\n};","author":"sprajjawalsingh","submissionId":"1575081784"},[{"id":"258","similarity":0.8360655737704918,"totOverlap":51,"longestOverlap":11}]],"259":[{"id":"259","fileName":"1575081786.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int maxi=INT_MIN;\n        int sum=0;\n        for(auto &val:nums){\n            if(val>0&&st.find(val)==st.end()){\n                st.insert(val);\n                sum+=val;\n            }else{\n                maxi=max(maxi,val);\n            }\n        }\n        if(st.size()!=0){\n            return sum;\n        }\n        return maxi;\n    }\n};","author":"Naramala Siva Vekata Pavan","submissionId":"1575081786"},[{"id":"259","similarity":0.746268656716418,"totOverlap":50,"longestOverlap":15}]],"261":[{"id":"261","fileName":"1575081782.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> values;\n        for (auto& num : nums) {\n            if (num > 0) values.insert(num);\n        }\n        if (values.empty()) return *max_element(nums.begin(), nums.end());\n        \n        int sum = 0;\n        for (auto& value : values) sum += value;\n        return sum;\n    }\n};","author":"Pepe","submissionId":"1575081782"},[{"id":"227","similarity":0.8787878787878788,"totOverlap":58,"longestOverlap":22}]],"262":[{"id":"262","fileName":"1575081813.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st(nums.begin(),nums.end());\n        int ans=0;\n        auto it=st.end();\n        it--;\n        if(*it<=0)\n            return *it;\n        for(auto &val:st)\n            {\n                if(val>0)\n                        ans+=val;\n            }\n        return ans;\n    }\n};","author":"dhruveel_gajipara","submissionId":"1575081813"},[{"id":"1508","similarity":0.7017543859649122,"totOverlap":40,"longestOverlap":14},{"id":"262","similarity":0.7037037037037037,"totOverlap":38,"longestOverlap":15}]],"263":[{"id":"263","fileName":"1575081793.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool k = false;\n        int mn = -101, sum = 0;\n        unordered_set<int> s;\n        for (int x : nums) {\n            if (x > 0) {\n                k = true;\n                if (s.find(x) == s.end()) {\n                    s.insert(x);\n                    sum += x;\n                }\n            }\n            else {\n                mn = max(mn, x);\n            }\n        }\n        return k ? sum : mn;\n    }\n};","author":"Divyansh Saxena","submissionId":"1575081793"},[{"id":"330","similarity":0.7941176470588235,"totOverlap":54,"longestOverlap":16},{"id":"388","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":8},{"id":"439","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":10},{"id":"1081","similarity":0.7230769230769231,"totOverlap":47,"longestOverlap":10},{"id":"439","similarity":0.7419354838709677,"totOverlap":46,"longestOverlap":7}]],"264":[{"id":"264","fileName":"1575081797.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int s = 0;\n        bool pos = 0;\n        for (auto& x : nums) {\n            if (x >= 0) {\n                st.insert(x);\n                pos = 1;\n            }\n        }\n\n        if (!pos)\n            return *max_element(nums.begin(), nums.end());\n        for (auto& x : st)\n            s += x;\n\n        return s;\n    }\n};","author":"Aryan Sethi","submissionId":"1575081797"},[{"id":"264","similarity":0.7377049180327869,"totOverlap":45,"longestOverlap":17}]],"265":[{"id":"265","fileName":"1575081814.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        if(*max_element(nums.begin(), nums.end()) <= 0)\n            return *max_element(nums.begin(), nums.end());\n        set<int> s(nums.begin(), nums.end());\n        int ans = 0;\n        for(int x: s){\n            if(x > 0)\n                ans += x;\n        }\n        return ans;\n    }\n};","author":"hero777","submissionId":"1575081814"},[{"id":"265","similarity":0.8,"totOverlap":48,"longestOverlap":6}]],"266":[{"id":"266","fileName":"1575081818.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size();\n        if(nums[n-1] < 0) {\n            return nums[n-1];\n        }\n        unordered_set<int> us;\n        for(int i=0;i<nums.size();i++) {\n            if(nums[i] > 0) {\n                us.insert(nums[i]);\n            }\n        }\n        int ans = 0;\n        for(auto ele:us) {\n            ans += ele;\n        }\n        return ans;\n    }\n};","author":"Aviral Agrawal","submissionId":"1575081818"},[{"id":"571","similarity":0.875,"totOverlap":70,"longestOverlap":21},{"id":"266","similarity":0.7837837837837838,"totOverlap":58,"longestOverlap":17},{"id":"89","similarity":0.7971014492753623,"totOverlap":55,"longestOverlap":9}]],"268":[{"id":"268","fileName":"1575081846.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool foundNonNegative = false;\n        for (int num : nums) {\n            if (num >= 0) {\n                foundNonNegative = true;\n                break;\n            }\n        }\n        \n        if (foundNonNegative) {\n            unordered_set<int> used;\n            int sum = 0;\n            for (int num : nums) {\n                if (num >= 0 && used.find(num) == used.end()) {\n                    sum += num;\n                    used.insert(num);\n                }\n            }\n            return sum;\n        } else {\n            return *max_element(nums.begin(), nums.end());\n        }\n    }\n};\n","author":"shubhhh_02","submissionId":"1575081846"},[{"id":"268","similarity":0.7101449275362319,"totOverlap":49,"longestOverlap":7}]],"272":[{"id":"272","fileName":"1575081850.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(auto val: nums) s.insert(val);\n        \n        if(*s.rbegin() <= 0) return *s.rbegin();\n        \n        int ans = 0;\n        for(auto val: s){\n            if(val > 0) ans += val;\n        }\n        return ans;\n    }\n};","author":"Gunaho ka Devta","submissionId":"1575081850"},[{"id":"232","similarity":0.8888888888888888,"totOverlap":40,"longestOverlap":11}]],"275":[{"id":"275","fileName":"1575081821.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> S;\n        int high = -1e9;\n        for(auto &u : nums)\n        {\n            if(u > 0)\n            {\n                S.insert(u);\n            }\n            else\n            {\n                high = max(high, u);\n            }\n        }\n        int sum = 0;\n        \n        if(S.empty())\n        {\n            return high;\n        }\n        \n        for(auto &u : S)\n        {\n            sum += u;\n        }\n        return sum;\n    }\n};","author":"Marmaduke","submissionId":"1575081821"},[{"id":"275","similarity":0.7049180327868853,"totOverlap":43,"longestOverlap":8}]],"276":[{"id":"276","fileName":"1575081854.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        int mx = INT_MIN;\n        for(auto x:nums)\n            {\n                if(x>0)\n                {\n                    st.insert(x);\n                }\n                mx = max(mx,x);\n            }\n        if(mx<=0)\n        {\n            return mx;\n        }\n        int sum = 0;\n        for(auto x:st)\n            {\n                sum+=x;\n            }\n        return sum;\n    }\n};","author":"Soumya Dhakad","submissionId":"1575081854"},[{"id":"276","similarity":0.765625,"totOverlap":49,"longestOverlap":11}]],"277":[{"id":"277","fileName":"1575081904.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(auto it:nums){\n            if(it>=0){\n                st.insert(it);\n            }\n        }\n        int ans=0;\n        for(auto it:st){\n            ans+=it;\n        }\n        if(st.size()==0){\n            ans=-1e9;\n            for(auto it:nums){\n                ans=max(ans,it);\n            }\n        }\n        return ans;\n    }\n};","author":"Fookin_Blinders","submissionId":"1575081904"},[{"id":"277","similarity":0.7377049180327869,"totOverlap":45,"longestOverlap":11}]],"278":[{"id":"278","fileName":"1575081886.txt","sourceCode":"\nclass Solution {\n    public:\n        int maxSum(vector<int>& nums) {\n            set<int> st(nums.begin(), nums.end()); \n            while (*st.begin() < 0 && st.size() > 1) {\n                st.erase(st.begin()); \n            }\n\n            int ans = 0; \n            while (!st.empty()) {\n                ans += (*st.begin()); \n                st.erase(st.begin()); \n            }\n            return ans; \n        }\n};","author":"qzyq","submissionId":"1575081886"},[{"id":"278","similarity":0.7123287671232876,"totOverlap":52,"longestOverlap":14}]],"281":[{"id":"281","fileName":"1575081926.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int minNeg = INT_MIN;\n        int sum = 0;\n        for(int i = 0; i < nums.size(); i++){\n            minNeg = max(minNeg, nums[i]);\n        }\n        if(minNeg < 0){\n            return minNeg;\n        }\n        for(int i = 0; i < nums.size(); i++){\n            if(st.count(nums[i]))continue;\n            if(nums[i] < 0)continue;\n            st.insert(nums[i]);\n            sum += nums[i];\n        }\n        return sum;\n    }\n};","author":"Renuka sinha","submissionId":"1575081926"},[{"id":"1743","similarity":0.75,"totOverlap":72,"longestOverlap":14},{"id":"1743","similarity":0.71875,"totOverlap":69,"longestOverlap":11},{"id":"928","similarity":0.735632183908046,"totOverlap":64,"longestOverlap":8}]],"282":[{"id":"282","fileName":"1575081920.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for (int num : nums) {\n            if (num > 0) {\n                s.insert(num);\n            }\n        }\n\n        int ans = 0;\n        for (int num : s) {\n            ans += num;\n        }\n\n        if (s.size() == 0) {\n            ans = *max_element(nums.begin(), nums.end());\n        }\n\n        return ans;\n    }\n};","author":"Alok Kumar Thakur","submissionId":"1575081920"},[{"id":"282","similarity":0.7796610169491526,"totOverlap":46,"longestOverlap":11}]],"291":[{"id":"291","fileName":"1575081979.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) \n    {\n        unordered_set<int>st;\n        for(int num:nums)\n            {\n                if(num>=0) st.insert(num);\n            }\n        if(st.empty()) return *max_element(nums.begin(),nums.end());\n        int ans = 0;\n        for(int i:st) ans+=i;\n        return ans;\n    }\n};","author":"Rohan Trivedi","submissionId":"1575081979"},[{"id":"660","similarity":1.0,"totOverlap":62,"longestOverlap":31},{"id":"1875","similarity":0.9354838709677419,"totOverlap":58,"longestOverlap":29},{"id":"1875","similarity":0.8923076923076924,"totOverlap":58,"longestOverlap":18},{"id":"1130","similarity":0.7125,"totOverlap":57,"longestOverlap":9},{"id":"747","similarity":0.9333333333333333,"totOverlap":56,"longestOverlap":15},{"id":"625","similarity":0.8615384615384616,"totOverlap":56,"longestOverlap":15},{"id":"375","similarity":0.8333333333333334,"totOverlap":55,"longestOverlap":14}]],"293":[{"id":"293","fileName":"1575081983.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n\n        // if(nums.size() == 1){\n        //     return nums[0];\n        // }\n\n        int flag = 0;\n        \n        for(auto x : nums)st.insert(x);\n\n        int ans = 0;\n\n        for(auto x : st){\n            if(x >= 0){\n                flag = 1;\n                ans += x;\n            }\n        }\n\n        if(flag == 0){\n            ans += *(st.rbegin());\n        }\n        \n        return ans;\n        \n        \n    }\n};","author":"EZKIfNgPkw","submissionId":"1575081983"},[{"id":"293","similarity":0.7037037037037037,"totOverlap":38,"longestOverlap":10}]],"298":[{"id":"298","fileName":"1575082024.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        int max = INT_MIN;\n        for (const int& i : nums) {\n            if (i > 0) s.insert(i);\n            max = ::max(max, i);\n        }\n        if (!s.size()) return max;\n        int ret = 0;\n        for (const int& i : s) {\n            ret += i;\n        }\n        return ret;\n    }\n};","author":"nsmartinx","submissionId":"1575082024"},[{"id":"50","similarity":0.7017543859649122,"totOverlap":40,"longestOverlap":11}]],"301":[{"id":"301","fileName":"1575082042.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(auto &i : nums)\n                if(i > 0)\n                    st.insert(i);\n        int ans = 0;\n        for(auto &i : st)\n                ans += i;\n        if(st.size() == 0)\n            ans = *max_element(nums.begin(), nums.end());\n        return ans;\n    }\n};","author":"Ankit sisodya","submissionId":"1575082042"},[{"id":"301","similarity":0.7391304347826086,"totOverlap":51,"longestOverlap":14}]],"304":[{"id":"304","fileName":"1575082068.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int total = 0;\n        for (auto n: nums) {\n            if (n > 0 && s.count(n) == 0) {\n                total += n;\n                s.insert(n);\n            }\n        }\n        if (s.size() > 0) return total;\n\n        int mx = -100000;\n        for (auto i:nums) mx = max(mx, i);\n        return mx;\n    }\n};","author":"enip2473","submissionId":"1575082068"},[{"id":"1866","similarity":0.7777777777777778,"totOverlap":49,"longestOverlap":14},{"id":"944","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":12}]],"306":[{"id":"306","fileName":"1575082071.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s(nums.begin(), nums.end());\n        int ans = 0, take = 0;\n        for(int i : s) {\n            if(i > 0) {\n                ans += i;\n                take++;\n            }\n        }\n        if(take == 0) ans += *s.rbegin();\n        return ans;\n    }\n};","author":"Abdulla bin ah","submissionId":"1575082071"},[{"id":"1438","similarity":0.8653846153846154,"totOverlap":45,"longestOverlap":16},{"id":"107","similarity":0.7241379310344828,"totOverlap":42,"longestOverlap":15}]],"312":[{"id":"312","fileName":"1575082129.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(auto it:nums){\n            if(it>0) s.insert(it);\n        }\n        int ans=0;\n        if(s.size()==0){\n            return *max_element(nums.begin(),nums.end());\n        }\n        for(auto it:s) ans+=it;\n        return ans;\n    }\n};","author":"aditya_tiwari_6186","submissionId":"1575082129"},[{"id":"312","similarity":0.8,"totOverlap":44,"longestOverlap":14}]],"313":[{"id":"313","fileName":"1575082138.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> vis;\n        int total = 0;\n        int found = false;\n        for (int num: nums) {\n            if (vis.find(num) != vis.end())\n                continue;\n            if (num <= 0)\n                continue;\n            total += num;\n            vis.insert(num);\n            found = true;\n        }\n        if (found)\n            return total;\n        else\n            return *max_element(nums.begin(), nums.end());\n    }\n};","author":"Patchy","submissionId":"1575082138"},[{"id":"1336","similarity":0.819672131147541,"totOverlap":50,"longestOverlap":16},{"id":"524","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":16}]],"317":[{"id":"317","fileName":"1575082158.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        bool flag = true;\n        for (int& it : nums) {\n            if (it > 0) {\n                flag = false;   \n                st.insert(it);\n            }\n        }\n\n        if (flag)\n            return *max_element(nums.begin(), nums.end());\n\n        int ans = 0;\n        for (int it : st)\n            ans += it;\n        return ans;\n    }\n};","author":"Mudit Anand","submissionId":"1575082158"},[{"id":"291","similarity":0.7377049180327869,"totOverlap":45,"longestOverlap":11}]],"321":[{"id":"321","fileName":"1575082172.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st(nums.begin(),nums.end());\n        int ans = 0;\n        int f = 0;\n        for(auto i: st) {\n            if(i > 0) {\n                ans += i;\n                f = 1;\n            }\n        }\n        if(!f) {\n            ans += *st.rbegin();\n        }\n        return ans;\n    }\n};","author":"Chandraveer Singh","submissionId":"1575082172"},[{"id":"107","similarity":0.7580645161290323,"totOverlap":47,"longestOverlap":15}]],"326":[{"id":"326","fileName":"1575082192.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s ; \n        for (auto num : nums)s.insert(num);\n\n        int sum = 0; \n        for (auto x : s) if (x > 0)sum += x ; \n        if(sum == 0){\n            sort(nums.begin() , nums.end());\n            sum = nums.back();\n        }\n        return sum ; \n    }\n};","author":"Rishabh Mishra","submissionId":"1575082192"},[{"id":"326","similarity":0.8181818181818182,"totOverlap":45,"longestOverlap":7}]],"329":[{"id":"329","fileName":"1575082206.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st(nums.begin(), nums.end());\n        int sum = 0;\n        for (auto i: st) {\n            if (i > 0) sum += i;\n        }\n        return sum == 0 ? *st.rbegin() : sum;\n    }\n};","author":"Bitan Das","submissionId":"1575082206"},[{"id":"329","similarity":0.7924528301886793,"totOverlap":42,"longestOverlap":14}]],"330":[{"id":"330","fileName":"1575082222.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool ok = false;\n        int ans = 0, M = -1e9;\n        set<int> S;\n        for(int x: nums) \n            {\n                if(S.find(x) == S.end())\n                {\n                    S.insert(x);\n                    if(x >= 0)\n                    {\n                        ok = true;\n                        ans += x;\n                    }\n                    else M = max(M, x);\n                }\n            }\n\n        if(ok) return ans;\n        else return M;\n    }\n};","author":"champ36","submissionId":"1575082222"},[{"id":"263","similarity":0.7941176470588235,"totOverlap":54,"longestOverlap":16}]],"339":[{"id":"339","fileName":"1575082271.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st(nums.begin(),nums.end());\n        int ans = 0;\n        for(auto &it : st){\n            if(it > 0) ans += it;\n        }\n        if(ans == 0) return *(--st.end());\n        return ans;\n    }\n};","author":"Parth Vijay","submissionId":"1575082271"},[{"id":"339","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":20}]],"357":[{"id":"357","fileName":"1575082373.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int mn=-1e9;\n        for(auto i:nums) {\n            if(i>0) st.insert(i);\n            mn=max(i,mn);\n        }\n        if(st.empty()) return mn;\n        int sum=0;\n        for(auto i:st) sum+=i;\n        return sum;\n    }\n};","author":"Mostafa Wael","submissionId":"1575082373"},[{"id":"357","similarity":0.8867924528301887,"totOverlap":47,"longestOverlap":10}]],"364":[{"id":"364","fileName":"1575082437.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int maxi=INT_MIN;\n        for(auto&val : nums){\n            if(val>=0)\n            s.insert(val);\n            maxi=max(maxi,val);\n        }\n        int sum=0;\n        for(auto&val : s) sum+=val;\n        if(s.size()>0)\n        return sum;\n        else return maxi;\n        \n    }\n};","author":"Dev Aghera","submissionId":"1575082437"},[{"id":"364","similarity":0.8275862068965517,"totOverlap":48,"longestOverlap":11}]],"367":[{"id":"367","fileName":"1575082443.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        set<int>sett;\n        for(int i=0;i<n;i++){\n            if(nums[i]>0)sett.insert(nums[i]);\n        }\n        if(sett.size()==0){\n            return *max_element(nums.begin(),nums.end());\n        }\n        int sum=0;\n        for(auto it:sett){\n            sum+=it;\n        }\n        return sum;\n    }\n};","author":"Tanmay khandelwal","submissionId":"1575082443"},[{"id":"941","similarity":0.7875,"totOverlap":63,"longestOverlap":23},{"id":"941","similarity":0.7045454545454546,"totOverlap":62,"longestOverlap":8}]],"368":[{"id":"368","fileName":"1575082497.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        set<int> s;\n        int mx=-1e9;\n        for(int i:a) \n        {\n            if(i>=0) s.insert(i);\n            mx=max(mx,i);\n        }\n        int ans=0;\n        for(int i:s) ans+=i;\n        \n        return s.empty()?mx:ans;\n    }\n};","author":"LeeMinHoon","submissionId":"1575082497"},[{"id":"994","similarity":0.9090909090909091,"totOverlap":50,"longestOverlap":24},{"id":"994","similarity":0.7966101694915254,"totOverlap":47,"longestOverlap":12}]],"370":[{"id":"370","fileName":"1575082436.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n       int n = nums.size();\n       sort(nums.begin(),nums.end());\n        int ans = 0;\n        set<int> st;\n        for(int i=0;i<n;i++){\n            if(nums[i]>0 && st.find(nums[i])==st.end()){\n                ans+=nums[i];\n                st.insert(nums[i]);\n            }\n        }\n        if(ans==0){\n            ans=nums[n-1];\n        }\n        return ans;\n    }\n};","author":"Patel Patel","submissionId":"1575082436"},[{"id":"450","similarity":0.825,"totOverlap":66,"longestOverlap":14},{"id":"1384","similarity":0.8227848101265823,"totOverlap":65,"longestOverlap":17},{"id":"665","similarity":0.810126582278481,"totOverlap":64,"longestOverlap":14},{"id":"1552","similarity":0.8,"totOverlap":64,"longestOverlap":11},{"id":"370","similarity":0.7590361445783133,"totOverlap":63,"longestOverlap":18}]],"374":[{"id":"374","fileName":"1575082514.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st(nums.begin(),nums.end());\n        int sum=0;\n        for(auto it:st) if(it>0) sum+=it;\n        if(sum==0) return *--st.end();\n        return sum;\n    }\n};","author":"Harshil","submissionId":"1575082514"},[{"id":"339","similarity":0.8125,"totOverlap":39,"longestOverlap":16}]],"375":[{"id":"375","fileName":"1575082503.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set <int> s;\n        for (int num: nums) {\n            if (num > 0) s.insert(num);\n        }\n        if (s.empty()) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        int ans = 0;\n        for (int val: s) {\n            ans += val;\n        }\n        return ans;\n    }\n};","author":"forasssk","submissionId":"1575082503"},[{"id":"757","similarity":0.7866666666666666,"totOverlap":59,"longestOverlap":19},{"id":"375","similarity":0.8923076923076924,"totOverlap":58,"longestOverlap":18}]],"376":[{"id":"376","fileName":"1575082502.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(auto x : nums) s.insert(x);\n        int ans = 0;\n        bool pos = 0;\n        for(auto x : s){\n            if(x>=0){\n                ans += x;\n                pos = 1;\n            }\n        }\n        if(pos) return ans;\n        sort(nums.begin(),nums.end());\n        return nums[nums.size()-1];\n    }\n};","author":"Swapnil Tyagi","submissionId":"1575082502"},[{"id":"321","similarity":0.7166666666666667,"totOverlap":43,"longestOverlap":10}]],"381":[{"id":"381","fileName":"1575082525.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int ans=0;\n        int mx=-101;\n        for(int& i : nums)\n        {\n            if(i>0) st.insert(i);\n            mx = max(mx, i);\n        }\n        for(auto it : st)\n        {\n            ans += it;\n        }\n        if(ans>0) return ans;\n        return mx;\n    }\n};","author":"Dee-Bug","submissionId":"1575082525"},[{"id":"381","similarity":0.7547169811320755,"totOverlap":40,"longestOverlap":11}]],"388":[{"id":"388","fileName":"1575082607.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        set<int>st;\n        for(int x:nums){\n            if(x>=0){\n                if(st.find(x)==st.end()){\n                    st.insert(x);\n                    ans+=x;\n                }\n            }\n        }\n        if(st.size()==0){\n            ans=*max_element(nums.begin(),nums.end());\n        }\n        return ans;\n    }\n};","author":"jai_hanumant","submissionId":"1575082607"},[{"id":"263","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":8}]],"394":[{"id":"394","fileName":"1575082664.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int maxm=-100;\n        for(int num:nums){\n            maxm=max(maxm,num);\n            if(num>0){\n                st.insert(num);\n            }\n        }\n        if(maxm<0){\n            return maxm;\n        }\n        int ans=0;\n        for(int num:st){\n            ans+=num;\n        }\n        return ans;\n    }\n};","author":"rkrohit123","submissionId":"1575082664"},[{"id":"394","similarity":0.8,"totOverlap":48,"longestOverlap":11}]],"404":[{"id":"404","fileName":"1575082734.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st(nums.begin(),nums.end());\n        int ans=0;\n        bool flag=0;\n        for(auto it:st){\n            if(it>=0){\n                flag=1;\n                ans+=it;\n                \n            }\n        }\n        if(flag){\n            return ans;\n        }\n        else{\n            return *--st.end();\n        }\n        \n    }\n};","author":"manideep2004","submissionId":"1575082734"},[{"id":"404","similarity":0.7301587301587301,"totOverlap":46,"longestOverlap":16}]],"411":[{"id":"411","fileName":"1575082765.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st(nums.begin(), nums.end());\n        int ans = 0;\n        bool flag = false;\n        for(auto i:st) {\n            if(i>=0) {\n                ans += i;\n                flag = true;\n            }\n        }\n        if(flag) return ans;\n        return *max_element(nums.begin(), nums.end());\n    }\n};","author":"Yash","submissionId":"1575082765"},[{"id":"1204","similarity":0.8571428571428571,"totOverlap":54,"longestOverlap":16},{"id":"137","similarity":0.7741935483870968,"totOverlap":48,"longestOverlap":12}]],"415":[{"id":"415","fileName":"1575082800.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& arr) {\n        int n = arr.size();\n        set<int> st;\n        int ans =0;\n        for(int i=0;i<n;i++){\n            if (arr[i]>0){\n                if (st.find(arr[i])!=st.end()) continue;\n                else{\n                    st.insert(arr[i]);\n                    ans+=arr[i];\n                }\n            }\n        }\n        if (st.size()>0) return ans;\n        else return *max_element(arr.begin(),arr.end());\n    }\n};","author":"Bu1h49jsB8","submissionId":"1575082800"},[{"id":"1397","similarity":0.7857142857142857,"totOverlap":66,"longestOverlap":11},{"id":"746","similarity":0.7303370786516854,"totOverlap":65,"longestOverlap":9},{"id":"415","similarity":0.7160493827160493,"totOverlap":58,"longestOverlap":22}]],"418":[{"id":"418","fileName":"1575082797.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st(nums.begin(),nums.end());\n        int sum=0;\n        int value = INT_MIN;\n        bool find = false;\n        for (int val : st){\n            if (val>=0) \n            {\n                find=true;\n                sum+=val;\n            }\n            value = max(value,val);\n        }\n        if (find) return sum;\n        return value;\n        \n    }\n};","author":"KIRA_K","submissionId":"1575082797"},[{"id":"727","similarity":0.746268656716418,"totOverlap":50,"longestOverlap":16},{"id":"418","similarity":0.8,"totOverlap":48,"longestOverlap":17},{"id":"1191","similarity":0.7058823529411765,"totOverlap":48,"longestOverlap":11},{"id":"727","similarity":0.7301587301587301,"totOverlap":46,"longestOverlap":16},{"id":"321","similarity":0.7758620689655172,"totOverlap":45,"longestOverlap":22}]],"422":[{"id":"422","fileName":"1575082839.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        set<int > S;\n        for(int i = 0; i < nums.size(); i++) {\n            if(nums[i] > 0 && S.find(nums[i]) == S.end()) {\n                ans += nums[i];\n                S.insert(nums[i]);\n            }\n        }\n        if(!S.size()) {\n            ans = nums[0];\n            for(int i = 0; i < nums.size(); i++) ans = max(ans, nums[i]);\n        }\n        return ans;\n    }\n};","author":"__shadow","submissionId":"1575082839"},[{"id":"1123","similarity":0.8902439024390244,"totOverlap":73,"longestOverlap":23},{"id":"1677","similarity":0.7303370786516854,"totOverlap":65,"longestOverlap":11},{"id":"714","similarity":0.7710843373493976,"totOverlap":64,"longestOverlap":9},{"id":"1730","similarity":0.735632183908046,"totOverlap":64,"longestOverlap":8},{"id":"1730","similarity":0.7590361445783133,"totOverlap":63,"longestOverlap":18},{"id":"1155","similarity":0.7209302325581395,"totOverlap":62,"longestOverlap":7},{"id":"1800","similarity":0.7469879518072289,"totOverlap":62,"longestOverlap":8},{"id":"1839","similarity":0.7721518987341772,"totOverlap":61,"longestOverlap":7},{"id":"1370","similarity":0.7176470588235294,"totOverlap":61,"longestOverlap":12},{"id":"839","similarity":0.7142857142857143,"totOverlap":60,"longestOverlap":18},{"id":"1730","similarity":0.75,"totOverlap":60,"longestOverlap":18},{"id":"1384","similarity":0.7341772151898734,"totOverlap":58,"longestOverlap":7},{"id":"1034","similarity":0.7037037037037037,"totOverlap":57,"longestOverlap":16},{"id":"888","similarity":0.7088607594936709,"totOverlap":56,"longestOverlap":9},{"id":"1017","similarity":0.7272727272727273,"totOverlap":56,"longestOverlap":9},{"id":"127","similarity":0.7971014492753623,"totOverlap":55,"longestOverlap":9},{"id":"941","similarity":0.7142857142857143,"totOverlap":55,"longestOverlap":12},{"id":"447","similarity":0.8333333333333334,"totOverlap":55,"longestOverlap":14},{"id":"748","similarity":0.7012987012987013,"totOverlap":54,"longestOverlap":14},{"id":"1177","similarity":0.7162162162162162,"totOverlap":53,"longestOverlap":10},{"id":"726","similarity":0.828125,"totOverlap":53,"longestOverlap":14},{"id":"291","similarity":0.8125,"totOverlap":52,"longestOverlap":15},{"id":"1194","similarity":0.7761194029850746,"totOverlap":52,"longestOverlap":10},{"id":"818","similarity":0.7536231884057971,"totOverlap":52,"longestOverlap":11},{"id":"724","similarity":0.8666666666666667,"totOverlap":52,"longestOverlap":24},{"id":"291","similarity":0.796875,"totOverlap":51,"longestOverlap":7},{"id":"227","similarity":0.7727272727272727,"totOverlap":51,"longestOverlap":16},{"id":"1832","similarity":0.7846153846153846,"totOverlap":51,"longestOverlap":11},{"id":"1832","similarity":0.85,"totOverlap":51,"longestOverlap":18},{"id":"1168","similarity":0.7391304347826086,"totOverlap":51,"longestOverlap":13},{"id":"1193","similarity":0.7611940298507462,"totOverlap":51,"longestOverlap":16},{"id":"70","similarity":0.7936507936507936,"totOverlap":50,"longestOverlap":8},{"id":"706","similarity":0.8620689655172413,"totOverlap":50,"longestOverlap":11},{"id":"1411","similarity":0.8333333333333334,"totOverlap":50,"longestOverlap":15},{"id":"706","similarity":0.9090909090909091,"totOverlap":50,"longestOverlap":12},{"id":"878","similarity":0.7246376811594203,"totOverlap":50,"longestOverlap":13},{"id":"1510","similarity":0.7575757575757576,"totOverlap":50,"longestOverlap":20},{"id":"1789","similarity":0.704225352112676,"totOverlap":50,"longestOverlap":9},{"id":"1789","similarity":0.8064516129032258,"totOverlap":50,"longestOverlap":16},{"id":"1168","similarity":0.7903225806451613,"totOverlap":49,"longestOverlap":10},{"id":"1412","similarity":0.8032786885245902,"totOverlap":49,"longestOverlap":11},{"id":"709","similarity":0.8032786885245902,"totOverlap":49,"longestOverlap":8},{"id":"768","similarity":0.7424242424242424,"totOverlap":49,"longestOverlap":7},{"id":"514","similarity":0.8032786885245902,"totOverlap":49,"longestOverlap":16},{"id":"1169","similarity":0.7538461538461538,"totOverlap":49,"longestOverlap":10},{"id":"809","similarity":0.765625,"totOverlap":49,"longestOverlap":11},{"id":"1707","similarity":0.7101449275362319,"totOverlap":49,"longestOverlap":11},{"id":"944","similarity":0.7424242424242424,"totOverlap":49,"longestOverlap":10},{"id":"971","similarity":0.7205882352941176,"totOverlap":49,"longestOverlap":12},{"id":"597","similarity":0.8166666666666667,"totOverlap":49,"longestOverlap":23},{"id":"1192","similarity":0.7424242424242424,"totOverlap":49,"longestOverlap":13},{"id":"1789","similarity":0.7538461538461538,"totOverlap":49,"longestOverlap":10},{"id":"1018","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":7},{"id":"691","similarity":0.7619047619047619,"totOverlap":48,"longestOverlap":8},{"id":"647","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":10},{"id":"773","similarity":0.7868852459016393,"totOverlap":48,"longestOverlap":9},{"id":"577","similarity":0.8888888888888888,"totOverlap":48,"longestOverlap":13},{"id":"606","similarity":0.7868852459016393,"totOverlap":48,"longestOverlap":6},{"id":"646","similarity":0.7868852459016393,"totOverlap":48,"longestOverlap":9},{"id":"1767","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":8},{"id":"1565","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":10},{"id":"1480","similarity":0.7741935483870968,"totOverlap":48,"longestOverlap":15},{"id":"1667","similarity":0.7619047619047619,"totOverlap":48,"longestOverlap":13},{"id":"238","similarity":0.7966101694915254,"totOverlap":47,"longestOverlap":21},{"id":"208","similarity":0.8103448275862069,"totOverlap":47,"longestOverlap":12},{"id":"153","similarity":0.7704918032786885,"totOverlap":47,"longestOverlap":11},{"id":"268","similarity":0.7230769230769231,"totOverlap":47,"longestOverlap":12},{"id":"1293","similarity":0.7580645161290323,"totOverlap":47,"longestOverlap":11},{"id":"1326","similarity":0.7966101694915254,"totOverlap":47,"longestOverlap":10},{"id":"1608","similarity":0.8245614035087719,"totOverlap":47,"longestOverlap":17},{"id":"514","similarity":0.7580645161290323,"totOverlap":47,"longestOverlap":9},{"id":"1204","similarity":0.7580645161290323,"totOverlap":47,"longestOverlap":17},{"id":"1678","similarity":0.7121212121212122,"totOverlap":47,"longestOverlap":12},{"id":"1293","similarity":0.7833333333333333,"totOverlap":47,"longestOverlap":21},{"id":"1471","similarity":0.7704918032786885,"totOverlap":47,"longestOverlap":7},{"id":"1678","similarity":0.746031746031746,"totOverlap":47,"longestOverlap":17},{"id":"929","similarity":0.746031746031746,"totOverlap":47,"longestOverlap":10},{"id":"724","similarity":0.8392857142857143,"totOverlap":47,"longestOverlap":14},{"id":"946","similarity":0.7704918032786885,"totOverlap":47,"longestOverlap":10},{"id":"944","similarity":0.7230769230769231,"totOverlap":47,"longestOverlap":12},{"id":"1253","similarity":0.7540983606557377,"totOverlap":46,"longestOverlap":7},{"id":"1329","similarity":0.71875,"totOverlap":46,"longestOverlap":14},{"id":"291","similarity":0.7666666666666667,"totOverlap":46,"longestOverlap":18},{"id":"1875","similarity":0.71875,"totOverlap":46,"longestOverlap":18},{"id":"1329","similarity":0.7796610169491526,"totOverlap":46,"longestOverlap":8},{"id":"425","similarity":0.7301587301587301,"totOverlap":46,"longestOverlap":20},{"id":"1791","similarity":0.7301587301587301,"totOverlap":46,"longestOverlap":7},{"id":"455","similarity":0.7540983606557377,"totOverlap":46,"longestOverlap":8},{"id":"1313","similarity":0.7666666666666667,"totOverlap":46,"longestOverlap":12},{"id":"586","similarity":0.7796610169491526,"totOverlap":46,"longestOverlap":11},{"id":"1082","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":20},{"id":"632","similarity":0.7419354838709677,"totOverlap":46,"longestOverlap":8},{"id":"513","similarity":0.7419354838709677,"totOverlap":46,"longestOverlap":7},{"id":"1163","similarity":0.7540983606557377,"totOverlap":46,"longestOverlap":9},{"id":"524","similarity":0.71875,"totOverlap":46,"longestOverlap":14},{"id":"593","similarity":0.7931034482758621,"totOverlap":46,"longestOverlap":14},{"id":"1027","similarity":0.8363636363636363,"totOverlap":46,"longestOverlap":11},{"id":"1090","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":7},{"id":"937","similarity":0.8070175438596491,"totOverlap":46,"longestOverlap":14},{"id":"783","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":15},{"id":"1092","similarity":0.7796610169491526,"totOverlap":46,"longestOverlap":9},{"id":"1463","similarity":0.7301587301587301,"totOverlap":46,"longestOverlap":11},{"id":"1866","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":12},{"id":"1346","similarity":0.7419354838709677,"totOverlap":46,"longestOverlap":11},{"id":"1533","similarity":0.7796610169491526,"totOverlap":46,"longestOverlap":12},{"id":"1389","similarity":0.71875,"totOverlap":46,"longestOverlap":10},{"id":"127","similarity":0.7258064516129032,"totOverlap":45,"longestOverlap":13},{"id":"1584","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":11},{"id":"1710","similarity":0.703125,"totOverlap":45,"longestOverlap":12},{"id":"447","similarity":0.7758620689655172,"totOverlap":45,"longestOverlap":13},{"id":"1445","similarity":0.8823529411764706,"totOverlap":45,"longestOverlap":10},{"id":"1268","similarity":0.7627118644067796,"totOverlap":45,"longestOverlap":15},{"id":"411","similarity":0.7377049180327869,"totOverlap":45,"longestOverlap":7},{"id":"491","similarity":0.8333333333333334,"totOverlap":45,"longestOverlap":21},{"id":"1767","similarity":0.7377049180327869,"totOverlap":45,"longestOverlap":17},{"id":"517","similarity":0.7377049180327869,"totOverlap":45,"longestOverlap":11},{"id":"317","similarity":0.7377049180327869,"totOverlap":45,"longestOverlap":11},{"id":"516","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":12},{"id":"858","similarity":0.703125,"totOverlap":45,"longestOverlap":10},{"id":"404","similarity":0.7758620689655172,"totOverlap":45,"longestOverlap":22},{"id":"614","similarity":0.8181818181818182,"totOverlap":45,"longestOverlap":7},{"id":"1096","similarity":0.7627118644067796,"totOverlap":45,"longestOverlap":16},{"id":"1728","similarity":0.75,"totOverlap":45,"longestOverlap":14},{"id":"1204","similarity":0.7258064516129032,"totOverlap":45,"longestOverlap":14},{"id":"1421","similarity":0.7258064516129032,"totOverlap":45,"longestOverlap":8},{"id":"1268","similarity":0.8035714285714286,"totOverlap":45,"longestOverlap":7},{"id":"1346","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":6},{"id":"944","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":12},{"id":"1820","similarity":0.7377049180327869,"totOverlap":45,"longestOverlap":7},{"id":"1015","similarity":0.7258064516129032,"totOverlap":45,"longestOverlap":10},{"id":"1700","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":6},{"id":"1420","similarity":0.7258064516129032,"totOverlap":45,"longestOverlap":10},{"id":"875","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":10},{"id":"1408","similarity":0.703125,"totOverlap":45,"longestOverlap":6},{"id":"1107","similarity":0.7258064516129032,"totOverlap":45,"longestOverlap":9},{"id":"1710","similarity":0.703125,"totOverlap":45,"longestOverlap":15},{"id":"516","similarity":0.7213114754098361,"totOverlap":44,"longestOverlap":12},{"id":"997","similarity":0.7333333333333333,"totOverlap":44,"longestOverlap":11},{"id":"1300","similarity":0.7586206896551724,"totOverlap":44,"longestOverlap":15},{"id":"475","similarity":0.7457627118644068,"totOverlap":44,"longestOverlap":8},{"id":"437","similarity":0.7213114754098361,"totOverlap":44,"longestOverlap":17},{"id":"1107","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":17},{"id":"668","similarity":0.7457627118644068,"totOverlap":44,"longestOverlap":20},{"id":"502","similarity":0.8,"totOverlap":44,"longestOverlap":14},{"id":"1734","similarity":0.8,"totOverlap":44,"longestOverlap":14},{"id":"878","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":6},{"id":"994","similarity":0.7857142857142857,"totOverlap":44,"longestOverlap":10},{"id":"938","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":19},{"id":"1336","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":16},{"id":"1006","similarity":0.7333333333333333,"totOverlap":44,"longestOverlap":14},{"id":"1593","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":10},{"id":"1119","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":14},{"id":"1300","similarity":0.8,"totOverlap":44,"longestOverlap":9},{"id":"1268","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":15},{"id":"1342","similarity":0.7457627118644068,"totOverlap":44,"longestOverlap":10},{"id":"1465","similarity":0.8461538461538461,"totOverlap":44,"longestOverlap":11},{"id":"1820","similarity":0.7457627118644068,"totOverlap":44,"longestOverlap":10},{"id":"1408","similarity":0.7049180327868853,"totOverlap":43,"longestOverlap":16},{"id":"475","similarity":0.7049180327868853,"totOverlap":43,"longestOverlap":8},{"id":"376","similarity":0.7166666666666667,"totOverlap":43,"longestOverlap":10},{"id":"1455","similarity":0.7288135593220338,"totOverlap":43,"longestOverlap":8},{"id":"1201","similarity":0.7413793103448276,"totOverlap":43,"longestOverlap":12},{"id":"1105","similarity":0.7049180327868853,"totOverlap":43,"longestOverlap":13},{"id":"1324","similarity":0.7288135593220338,"totOverlap":43,"longestOverlap":9},{"id":"803","similarity":0.7049180327868853,"totOverlap":43,"longestOverlap":11},{"id":"1010","similarity":0.8113207547169812,"totOverlap":43,"longestOverlap":15},{"id":"1341","similarity":0.7049180327868853,"totOverlap":43,"longestOverlap":13},{"id":"1494","similarity":0.7818181818181819,"totOverlap":43,"longestOverlap":9},{"id":"152","similarity":0.7636363636363637,"totOverlap":42,"longestOverlap":8},{"id":"1438","similarity":0.7241379310344828,"totOverlap":42,"longestOverlap":15},{"id":"964","similarity":0.7636363636363637,"totOverlap":42,"longestOverlap":19},{"id":"1398","similarity":0.711864406779661,"totOverlap":42,"longestOverlap":11},{"id":"277","similarity":0.7636363636363637,"totOverlap":42,"longestOverlap":8},{"id":"744","similarity":0.7777777777777778,"totOverlap":42,"longestOverlap":18},{"id":"498","similarity":0.7924528301886793,"totOverlap":42,"longestOverlap":14},{"id":"937","similarity":0.7241379310344828,"totOverlap":42,"longestOverlap":7},{"id":"1626","similarity":0.711864406779661,"totOverlap":42,"longestOverlap":13},{"id":"953","similarity":0.7241379310344828,"totOverlap":42,"longestOverlap":9},{"id":"1408","similarity":0.7636363636363637,"totOverlap":42,"longestOverlap":8},{"id":"489","similarity":0.7068965517241379,"totOverlap":41,"longestOverlap":13},{"id":"1411","similarity":0.7321428571428571,"totOverlap":41,"longestOverlap":20},{"id":"1477","similarity":0.7192982456140351,"totOverlap":41,"longestOverlap":11},{"id":"1389","similarity":0.7192982456140351,"totOverlap":41,"longestOverlap":7},{"id":"1289","similarity":0.7321428571428571,"totOverlap":41,"longestOverlap":10},{"id":"1570","similarity":0.7884615384615384,"totOverlap":41,"longestOverlap":10},{"id":"298","similarity":0.7017543859649122,"totOverlap":40,"longestOverlap":11},{"id":"457","similarity":0.7142857142857143,"totOverlap":40,"longestOverlap":8},{"id":"489","similarity":0.7547169811320755,"totOverlap":40,"longestOverlap":11},{"id":"1167","similarity":0.7142857142857143,"totOverlap":40,"longestOverlap":8},{"id":"1253","similarity":0.7142857142857143,"totOverlap":40,"longestOverlap":8},{"id":"1291","similarity":0.7692307692307693,"totOverlap":40,"longestOverlap":20},{"id":"1096","similarity":0.7090909090909091,"totOverlap":39,"longestOverlap":14},{"id":"1391","similarity":0.75,"totOverlap":39,"longestOverlap":10},{"id":"374","similarity":0.8125,"totOverlap":39,"longestOverlap":16},{"id":"1096","similarity":0.7090909090909091,"totOverlap":39,"longestOverlap":12},{"id":"588","similarity":0.7169811320754716,"totOverlap":38,"longestOverlap":11},{"id":"1447","similarity":0.7450980392156863,"totOverlap":38,"longestOverlap":12},{"id":"265","similarity":0.7037037037037037,"totOverlap":38,"longestOverlap":9},{"id":"339","similarity":0.7037037037037037,"totOverlap":38,"longestOverlap":15},{"id":"1311","similarity":0.7169811320754716,"totOverlap":38,"longestOverlap":8},{"id":"1408","similarity":0.7037037037037037,"totOverlap":38,"longestOverlap":10},{"id":"1869","similarity":0.7037037037037037,"totOverlap":38,"longestOverlap":13},{"id":"232","similarity":0.7021276595744681,"totOverlap":33,"longestOverlap":12}]],"423":[{"id":"423","fileName":"1575082866.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = a.size(),ans = 0;\n        sort(a.begin(),a.end());\n        set<int> s;\n        for(auto i : a) if(i > 0) s.insert(i);\n        for(auto i : s) ans += i;\n        if(ans == 0) return a[n-1];\n        return ans;\n    }\n};","author":"Gaurav Kumar Jangam","submissionId":"1575082866"},[{"id":"1092","similarity":0.7704918032786885,"totOverlap":47,"longestOverlap":8},{"id":"726","similarity":0.7796610169491526,"totOverlap":46,"longestOverlap":9}]],"425":[{"id":"425","fileName":"1575082870.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = 0;\n        bool find = false;\n        set<int> s;\n        for (int i : nums) {\n            if (i >= 0 && s.find(i) == s.end()) {\n                res += i;\n                find = true;\n                s.insert(i);\n            }\n        }\n        if (find) return res;\n        res = -100;\n        for (int i : nums) res = max(res, i);\n        return res;\n    }\n};","author":"jfantasy90","submissionId":"1575082870"},[{"id":"208","similarity":0.7301587301587301,"totOverlap":46,"longestOverlap":20}]],"437":[{"id":"437","fileName":"1575082895.txt","sourceCode":"class Solution {\n    public:\n        int maxSum(vector<int>& nums) {\n            set<int> s(nums.begin(), nums.end());\n            long long sum = 0;\n            \n            bool taken = false;\n            for (int x : s) {\n                if (x >= 0) {\n                    taken = true;\n                    sum += x;\n                }\n            }\n            if (!taken) {\n                sum += *s.rbegin();\n            }\n            return sum;\n        }\n    };","author":"Sameer Rawat","submissionId":"1575082895"},[{"id":"437","similarity":0.7258064516129032,"totOverlap":45,"longestOverlap":14}]],"438":[{"id":"438","fileName":"1575082914.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        \n        int ans=0;\n        set<int>s;\n        int mx=INT_MIN;\n        for(auto it:nums)\n        {\n            if(it>=0)\n            {\n                s.insert(it);\n            }\n            mx=max(mx,it);\n        }\n        \n        if(s.size())\n        {\n            for(auto it:s)\n                ans+=it;\n            \n        }\n        else\n        {\n            return mx;\n        }\n        \n        return ans;\n        \n    }\n};","author":"Prateek Bahukhandi","submissionId":"1575082914"},[{"id":"438","similarity":0.7101449275362319,"totOverlap":49,"longestOverlap":11}]],"439":[{"id":"439","fileName":"1575082920.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size() ;\n        int sum=0;\n        set<int>st, m ;\n        for(auto it : nums ) {\n            if(it>0) {\n                if(st.find(it) == st.end()) {\n                    st.insert(it) ;\n                    sum+=it ;\n                }\n            }\n            else m.insert(it) ;\n        }\n\n        if(sum == 0) return *(m.rbegin()) ;\n\nreturn sum;\n        \n    }\n};","author":"deSTROYer","submissionId":"1575082920"},[{"id":"388","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":10}]],"446":[{"id":"446","fileName":"1575082970.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int ans = 0, maxi = INT_MIN;\n        for (auto x: nums) {\n            if (x >= 0) {\n                if (st.find(x) == st.end()) {\n                    ans += x;\n                    st.insert(x);\n                }\n            } else {\n                maxi = max(maxi, x);\n            }\n        }\n        if (st.size() == 0) return maxi;\n        return ans;\n    }\n};","author":"frameboy_27","submissionId":"1575082970"},[{"id":"1437","similarity":0.8571428571428571,"totOverlap":54,"longestOverlap":14},{"id":"446","similarity":0.7424242424242424,"totOverlap":49,"longestOverlap":10}]],"447":[{"id":"447","fileName":"1575082952.txt","sourceCode":"class Solution {\npublic:\n  int maxSum(vector<int>& nums) {\n    unordered_set<int> st;\n    for (int i : nums) {\n      if (i > 0) {\n        st.insert(i);\n      }\n    }\n    if (st.empty()) {\n      return *max_element(nums.begin(), nums.end());\n    }\n    else {\n      return accumulate(st.begin(), st.end(), 0);\n    }\n  }\n};","author":"Zejun Wu","submissionId":"1575082952"},[{"id":"192","similarity":0.873015873015873,"totOverlap":55,"longestOverlap":15}]],"449":[{"id":"449","fileName":"1575082972.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mxNum = INT_MIN;\n        int sum = 0;\n        unordered_set<int> st;\n        for(int i: nums)\n            {\n                mxNum = max(mxNum, i);\n                if (i > 0)\n                {\n                    if (st.find(i) == st.end())\n                    {\n                        sum+= i;\n                        st.insert(i);\n                    }\n                }\n            }\n        if (mxNum <= 0)\n            return mxNum;\n\n        return sum;\n    }\n};","author":"sitanshushukla29","submissionId":"1575082972"},[{"id":"449","similarity":0.7761194029850746,"totOverlap":52,"longestOverlap":9}]],"450":[{"id":"450","fileName":"1575082995.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int x = *max_element(nums.begin(),nums.end());\n        int sum = 0;\n        unordered_set<int> st;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>0 && st.find(nums[i])==st.end()){\n                sum+=nums[i];\n                st.insert(nums[i]);\n            } \n        }\n        if(sum>0) return sum;\n        else return x;\n        \n    }\n};","author":"somandhir","submissionId":"1575082995"},[{"id":"370","similarity":0.825,"totOverlap":66,"longestOverlap":14}]],"455":[{"id":"455","fileName":"1575083045.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        set<int> s2;\n        for (auto& n : nums){\n            if (n >= 0)\n            s.insert(n);\n            else s2.insert(n);\n        }\n        if (s.empty()) return *s2.rbegin();\n        int ans = 0;\n        for (auto& n : s) ans += n;\n        return ans;\n\n    }\n};","author":"epicfailure2015","submissionId":"1575083045"},[{"id":"1239","similarity":0.864406779661017,"totOverlap":51,"longestOverlap":10},{"id":"261","similarity":0.7540983606557377,"totOverlap":46,"longestOverlap":8}]],"457":[{"id":"457","fileName":"1575083076.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = -1e9;\n        int sum = 0;\n        set<int> temp;\n        for(auto i:nums){\n            temp.insert(i);\n\n        }\n        for(auto i : temp){\n            if(i >=0){\n                sum += i;\n            }\n            ans = max(ans , i);\n        }\n        if(sum == 0)return ans;\n        return sum;\n    }\n};","author":"marmick Mathur","submissionId":"1575083076"},[{"id":"735","similarity":0.7068965517241379,"totOverlap":41,"longestOverlap":7},{"id":"229","similarity":0.7142857142857143,"totOverlap":40,"longestOverlap":8}]],"459":[{"id":"459","fileName":"1575083071.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        set<int> elements;\n        int mn = INT_MIN;\n        for(int i = 0; i < n; ++i){\n            if(nums[i] < 0){\n                mn = max(mn, nums[i]);\n                continue;\n            }\n            elements.insert(nums[i]);\n        }\n        if(elements.size() == 0)return mn;\n        int s = 0;\n        for(auto &x:elements){\n            s += x;\n        }\n        return s;\n    }\n};","author":"Arghadeep Das","submissionId":"1575083071"},[{"id":"459","similarity":0.7317073170731707,"totOverlap":60,"longestOverlap":14}]],"461":[{"id":"461","fileName":"1575083082.txt","sourceCode":"class Solution {\n\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> numSet(nums.begin(), nums.end());\n        nums.clear();\n        for (int num : numSet) {\n            nums.push_back(num);\n        }\n        sort(nums.begin(), nums.end());\n\n        if(nums.back() <= 0)\n            return nums.back();\n\n        int sum = 0;\n        for(int x : nums){\n            if(x >= 0)\n                sum += x;\n        }\n\n        return sum;\n        \n    }\n};","author":"Bedre Dhanush","submissionId":"1575083082"},[{"id":"498","similarity":0.8507462686567164,"totOverlap":57,"longestOverlap":14},{"id":"1251","similarity":0.746268656716418,"totOverlap":50,"longestOverlap":14},{"id":"1452","similarity":0.7575757575757576,"totOverlap":50,"longestOverlap":14},{"id":"1251","similarity":0.8333333333333334,"totOverlap":50,"longestOverlap":15},{"id":"742","similarity":0.7313432835820896,"totOverlap":49,"longestOverlap":15},{"id":"1251","similarity":0.8,"totOverlap":48,"longestOverlap":6},{"id":"498","similarity":0.8,"totOverlap":48,"longestOverlap":15}]],"462":[{"id":"462","fileName":"1575083123.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int neg = 0;\n        set<int> s;\n        for(int i = 0; i<n; ++i){\n            if(nums[i] >= 0) s.insert(nums[i]);\n            else neg++;\n        }\n        if(neg == n) return *max_element(nums.begin(),nums.end());\n        else{\n            int sum = 0;\n            for(auto &x : s) sum += x;\n            return sum;\n        }\n    }\n};","author":"Saurabh Dubey","submissionId":"1575083123"},[{"id":"462","similarity":0.7160493827160493,"totOverlap":58,"longestOverlap":8}]],"464":[{"id":"464","fileName":"1575083084.txt","sourceCode":"class Solution\n{\npublic:\n    int maxSum(vector<int> &nums)\n    {\n        set<int> s(nums.begin(), nums.end());\n        if (*s.rbegin() <= 0)\n            return *s.rbegin();\n        int sum = 0;\n        for (int i : s)\n            if (i > 0)\n                sum += i;\n        return sum;\n    }\n};","author":"Aditya Raj","submissionId":"1575083084"},[{"id":"576","similarity":1.0,"totOverlap":58,"longestOverlap":29},{"id":"464","similarity":0.8666666666666667,"totOverlap":52,"longestOverlap":26},{"id":"464","similarity":0.8333333333333334,"totOverlap":50,"longestOverlap":15}]],"465":[{"id":"465","fileName":"1575083147.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int res = 0;\n        for(auto& x: nums){\n            if(x <= 0) continue;\n            if(st.count(x) > 0) continue;\n            res += x;\n            st.insert(x);\n        }\n\n        if(res == 0) return *max_element(nums.begin(), nums.end());\n\n        return res;\n    }\n};","author":"Anand Amar","submissionId":"1575083147"},[{"id":"465","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":6}]],"475":[{"id":"475","fileName":"1575083199.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>stp;\n        set<int>stn;\n        for(auto &i:nums)\n            {\n                if(i>0){\n                stp.insert(i);\n                }else{\n                    stn.insert(i);\n                }\n            }\n       if(stp.size()==0)\n       {\n           return *stn.rbegin();\n       }\n        int totp=0;\n        for(auto &i:stp)\n            {\n                totp+=i;\n            }\n        return totp;\n    }\n};","author":"ky198484","submissionId":"1575083199"},[{"id":"167","similarity":0.7457627118644068,"totOverlap":44,"longestOverlap":8}]],"481":[{"id":"481","fileName":"1575083344.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        for(auto x:nums)\n            s.insert(x);\n        int sum =0;\n        auto x = *s.rbegin();\n        if(x<0)\n            return x;\n        for(auto x:s)\n            if(x>0)\n            sum+=x;\n\n        return sum;\n    }\n};","author":"Khem Singh","submissionId":"1575083344"},[{"id":"193","similarity":0.7222222222222222,"totOverlap":39,"longestOverlap":13}]],"488":[{"id":"488","fileName":"1575083390.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int maxi=-1e9;\n        for (auto &x:nums){\n            if (x>=0)\n                s.insert(x);\n            maxi=max(maxi,x);\n        }\n        if (s.size()==0){\n            return maxi;\n        }\n        else{\n            int sum=0;\n            for (auto &x:s){\n                sum+=x;\n            }\n            return sum;\n        }\n    }\n};","author":"Bollepalli Ram Teja","submissionId":"1575083390"},[{"id":"816","similarity":0.8793103448275862,"totOverlap":51,"longestOverlap":11},{"id":"1342","similarity":0.8166666666666667,"totOverlap":49,"longestOverlap":20},{"id":"1342","similarity":0.8275862068965517,"totOverlap":48,"longestOverlap":11},{"id":"702","similarity":0.8545454545454545,"totOverlap":47,"longestOverlap":9},{"id":"702","similarity":0.8301886792452831,"totOverlap":44,"longestOverlap":19},{"id":"994","similarity":0.7457627118644068,"totOverlap":44,"longestOverlap":10}]],"489":[{"id":"489","fileName":"1575083392.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int sum=0;\n        int maxi = INT_MIN;\n        for(int num: nums){\n            if(num>0) s.insert(num);\n            maxi = max(maxi, num); \n        }\n        for(int num: s){\n            sum+= num;\n        }\n        if(s.empty()) return maxi;\n        return sum;\n    }\n};","author":"Prabhjot Singh Walia","submissionId":"1575083392"},[{"id":"489","similarity":0.7857142857142857,"totOverlap":44,"longestOverlap":10}]],"491":[{"id":"491","fileName":"1575083400.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> set;\n        int least_neg = INT_MIN;\n        \n        for (int num : nums) {\n            if (num >= 0) {\n                set.insert(num);\n            } else {\n                least_neg = max(least_neg, num);\n            }\n        }\n        \n        if (set.empty()) {\n            return least_neg;\n        } else {\n            return accumulate(set.begin(), set.end(), 0);\n        }\n    }\n};","author":"timothyleong97","submissionId":"1575083400"},[{"id":"257","similarity":0.8333333333333334,"totOverlap":45,"longestOverlap":21}]],"498":[{"id":"498","fileName":"1575083491.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> arr(nums.begin(), nums.end());\n        sort(nums.begin(), nums.end());\n\n        if(nums.back() < 0) return nums.back();\n\n        int ans = 0;\n        for(auto x: arr){\n            if(x > 0) ans+=x;\n        }\n        return ans;\n    }\n};","author":"Shaurya","submissionId":"1575083491"},[{"id":"461","similarity":0.8507462686567164,"totOverlap":57,"longestOverlap":14}]],"502":[{"id":"502","fileName":"1575083498.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> ans;\n        for(auto it: nums){\n            if(it>=0) ans.insert(it);\n        }\n        if(ans.size()==0){\n            return *max_element(nums.begin(),nums.end());\n        }\n        else{\n            int ansfinal=0;\n            for(auto it : ans) ansfinal+= it;\n            return ansfinal;\n        }\n    }\n};","author":"GavnishKumar","submissionId":"1575083498"},[{"id":"559","similarity":0.9473684210526315,"totOverlap":54,"longestOverlap":24},{"id":"502","similarity":0.864406779661017,"totOverlap":51,"longestOverlap":18}]],"504":[{"id":"504","fileName":"1575083497.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end()) ;\n        if(nums.back()<0){\n            return nums.back() ;\n        }\n        unordered_set<int> st ;\n        int ans = 0 ;\n        for(auto x : nums){\n            st.insert(x) ;\n        }\n        for(auto x : st){\n            if (x >=0) ans += x ;\n        }\n        return ans ;\n    }\n};","author":"singlanitinsn","submissionId":"1575083497"},[{"id":"504","similarity":0.7833333333333333,"totOverlap":47,"longestOverlap":21}]],"506":[{"id":"506","fileName":"1575083515.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int ma = -101;\n        for(int cur: nums)\n        {\n            ma = max(cur, ma);\n            if(cur>0)\n                s.insert(cur);\n        }\n        if(ma<0)\n            return ma;\n        int ans = 0;\n        for(int cur: s)\n            ans += cur;\n        return ans;\n    }\n};","author":"ycyubill","submissionId":"1575083515"},[{"id":"858","similarity":0.8253968253968254,"totOverlap":52,"longestOverlap":22},{"id":"1420","similarity":0.8032786885245902,"totOverlap":49,"longestOverlap":21},{"id":"560","similarity":0.8,"totOverlap":48,"longestOverlap":11},{"id":"1420","similarity":0.7966101694915254,"totOverlap":47,"longestOverlap":12},{"id":"304","similarity":0.703125,"totOverlap":45,"longestOverlap":10}]],"513":[{"id":"513","fileName":"1575083547.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum=0;\n        unordered_set<int>s;\n        for(auto i:nums)\n        {\n            if(i>0 && s.find(i)==s.end()){\n                sum+=i;\n                s.insert(i);\n            }\n        }\n        if(sum==0)return *max_element(nums.begin(),nums.end());\n        return sum;\n    }\n};","author":"Ankur Borkar","submissionId":"1575083547"},[{"id":"1214","similarity":0.9454545454545454,"totOverlap":52,"longestOverlap":14},{"id":"513","similarity":0.8166666666666667,"totOverlap":49,"longestOverlap":23}]],"514":[{"id":"514","fileName":"1575083548.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        \n        for(auto &i:nums){\n            if(i>0)\n            st.insert(i);\n        }\n        \n        if(st.size()>0){\n            int sum=0;\n            \n            for(auto &i:st)\n            sum+=i;\n            \n            return sum;\n        }\n        \n        sort(nums.begin(),nums.end());\n        \n        return nums.back();\n    }\n};","author":"Nishant Patil","submissionId":"1575083548"},[{"id":"167","similarity":0.8983050847457628,"totOverlap":53,"longestOverlap":19}]],"515":[{"id":"515","fileName":"1575083551.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<int>v;\n        for(auto i : nums){\n            if(i >= 0) v.push_back(i);\n        }\n        if(v.size() == 0){\n            sort(nums.rbegin(), nums.rend());\n            return nums[0];\n        }\n        set<int>s;\n        int ans = 0;\n        for(int i = 0; i < v.size(); i++){\n            if(s.find(v[i]) == s.end()){\n                ans += v[i];\n                s.insert(v[i]);\n            }\n        }\n        return ans;\n    }\n};","author":"u1904123","submissionId":"1575083551"},[{"id":"99","similarity":0.7912087912087912,"totOverlap":72,"longestOverlap":12}]],"516":[{"id":"516","fileName":"1575083552.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int mina = -1e9;\n        for (auto x : nums) mina = max(mina,x);\n        for (auto x : nums) if (x>0) st.insert(x);\n        int su = 0;\n        if (st.size()==0) return mina;\n        for (auto x : st) su += x;\n        return su;\n    }\n};","author":"Kushhhhh42","submissionId":"1575083552"},[{"id":"203","similarity":0.7419354838709677,"totOverlap":46,"longestOverlap":8}]],"517":[{"id":"517","fileName":"1575083566.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        set<int> s;\n        for(auto i: nums){\n            if(i>0 && s.count(i) == false) {\n                ans += i;\n                s.insert(i);\n            }\n        }\n        if(s.size() == 0){\n            ans = -1e9;\n            for(auto i: nums){\n                ans = max(ans, i);\n            }\n        }\n        return ans;\n    }\n};","author":"amit_n","submissionId":"1575083566"},[{"id":"597","similarity":0.875,"totOverlap":56,"longestOverlap":14},{"id":"1789","similarity":0.859375,"totOverlap":55,"longestOverlap":11},{"id":"944","similarity":0.8181818181818182,"totOverlap":54,"longestOverlap":11},{"id":"840","similarity":0.7285714285714285,"totOverlap":51,"longestOverlap":7},{"id":"1633","similarity":0.704225352112676,"totOverlap":50,"longestOverlap":9}]],"518":[{"id":"518","fileName":"1575083554.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> cnt;\n        int ans = 0;\n        bool flag = false;\n        for (int num : nums){\n            if (!cnt.count(num) && num >= 0){\n                ans += num;\n                flag = true;\n            }\n            cnt.insert(num);\n        }\n        if (!flag)\n            return *max_element(nums.begin(), nums.end());\n        return ans;\n    }\n};","author":"jerry5841314","submissionId":"1575083554"},[{"id":"518","similarity":0.71875,"totOverlap":46,"longestOverlap":14}]],"523":[{"id":"523","fileName":"1575083586.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> used;\n        sort(nums.begin(),nums.end());\n        int sum=nums.back();\n        used.insert(nums.back());\n        for(auto it:nums){\n            if(it<=0 or used.count(it)) continue;\n            sum+=it;\n            used.insert(it);\n        }\n        return sum;\n    }\n};","author":"Melon Musk","submissionId":"1575083586"},[{"id":"523","similarity":0.8035714285714286,"totOverlap":45,"longestOverlap":7}]],"524":[{"id":"524","fileName":"1575083606.txt","sourceCode":"class Solution {\npublic:\n\tint maxSum(vector<int>& a) {\n\t\tset<int> seen;\n\t\tint sum = 0;\n\t\tbool flag = false;\n\n\t\tfor (int num : a) {\n\t\t\tif (num >= 1) {\n\t\t\t\tif (seen.find(num) == seen.end()) {\n\t\t\t\t\tsum += num;\n\t\t\t\t\tseen.insert(num);\n\t\t\t\t}\n\t\t\t\tflag = true;\n\t\t\t}\n\t\t}\n\n\t\tif (flag)return sum;\n\n\t\treturn *max_element(a.begin(), a.end());\n\t}\n};","author":"CallMeHaldey","submissionId":"1575083606"},[{"id":"1040","similarity":0.782608695652174,"totOverlap":54,"longestOverlap":10},{"id":"524","similarity":0.796875,"totOverlap":51,"longestOverlap":8},{"id":"838","similarity":0.7846153846153846,"totOverlap":51,"longestOverlap":11},{"id":"1040","similarity":0.7101449275362319,"totOverlap":49,"longestOverlap":7},{"id":"1204","similarity":0.7741935483870968,"totOverlap":48,"longestOverlap":12},{"id":"179","similarity":0.7230769230769231,"totOverlap":47,"longestOverlap":12}]],"529":[{"id":"529","fileName":"1575083611.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> used;\n        int ans = 0;\n        for (auto num : nums) {\n            if (num > 0 && !used.count(num)) {\n                used.insert(num);\n                ans += num;\n            }\n        }\n        if (used.empty()) {\n            sort(begin(nums), end(nums));\n            return nums.back();\n        }\n        return ans;\n    }\n};","author":"Clark Li","submissionId":"1575083611"},[{"id":"1567","similarity":0.8679245283018868,"totOverlap":46,"longestOverlap":20},{"id":"1567","similarity":0.7924528301886793,"totOverlap":42,"longestOverlap":10},{"id":"86","similarity":0.7169811320754716,"totOverlap":38,"longestOverlap":11}]],"531":[{"id":"531","fileName":"1575083638.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(int i : nums) {\n            st.insert(i);\n        }\n\n        int ans = 0;\n        for(auto it : st) {\n            if (it > 0) ans += it;\n        }\n        if (ans == 0) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        return ans;\n    }\n};","author":"KANISHK JAIN","submissionId":"1575083638"},[{"id":"946","similarity":0.8867924528301887,"totOverlap":47,"longestOverlap":11},{"id":"673","similarity":0.7704918032786885,"totOverlap":47,"longestOverlap":10}]],"546":[{"id":"546","fileName":"1575083718.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st(nums.begin(),nums.end());\n        if(*(st.rbegin())<=0)return *st.rbegin();\n        while(*(st.begin())<0)st.erase(st.begin());\n        int sum=0;\n        for(auto i:st)sum+=i;\n        return sum;\n    }\n};","author":"LevelUp","submissionId":"1575083718"},[{"id":"546","similarity":0.7014925373134329,"totOverlap":47,"longestOverlap":14}]],"552":[{"id":"552","fileName":"1575083742.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> uniquePositives;\n        int minNegative = INT_MIN;\n        bool hasPositive = false;\n\n        for (int num : nums) {\n            if (num >= 0) {\n                uniquePositives.insert(num);\n                hasPositive = true;\n            } else {\n                minNegative = max(minNegative, num);\n            }\n        }\n        \n        if (hasPositive) {\n            return accumulate(uniquePositives.begin(), uniquePositives.end(), 0);\n        }\n        return minNegative;\n    }\n};","author":"kumark6769704","submissionId":"1575083742"},[{"id":"552","similarity":0.746031746031746,"totOverlap":47,"longestOverlap":17}]],"553":[{"id":"553","fileName":"1575083748.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        for(int num: nums) {\n            if(num > 0 && s.find(num) == s.end()){\n                s.insert(num);\n            }\n        }\n        if(s.empty()) return *max_element(nums.begin(), nums.end());\n        int ans = 0;\n        for(int num: s){\n            ans += num;\n        }\n        return ans;\n    }\n};","author":"Jialuo Yuan","submissionId":"1575083748"},[{"id":"1875","similarity":0.921875,"totOverlap":59,"longestOverlap":18},{"id":"291","similarity":0.9354838709677419,"totOverlap":58,"longestOverlap":29}]],"555":[{"id":"555","fileName":"1575083774.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int, int> m;\n        int res = -200, mn = -200;\n        for(auto i: nums){\n            mn = max(mn, i);\n            if(i<0||m.find(i)!= m.end()){\n                continue;\n            }\n            if(res == -200){\n                res = 0;\n            }\n            res += i;\n            m[i] = 1;\n        }\n        if(res == -200){\n            res = mn;\n        }\n        return res;\n    }\n};","author":"Madhav Jha","submissionId":"1575083774"},[{"id":"1343","similarity":0.75,"totOverlap":54,"longestOverlap":24},{"id":"1433","similarity":0.7142857142857143,"totOverlap":50,"longestOverlap":15},{"id":"1433","similarity":0.7384615384615385,"totOverlap":48,"longestOverlap":10},{"id":"595","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":12}]],"559":[{"id":"559","fileName":"1575083777.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for (auto i:nums){\n            if (i >= 0)st.insert(i);\n        }\n        if (st.size() == 0){\n            return *max_element(nums.begin(), nums.end());\n        }\n        int ans = 0;\n        for (auto i:st)ans += i;\n        return ans;\n    }\n};","author":"gammadelta","submissionId":"1575083777"},[{"id":"502","similarity":0.9473684210526315,"totOverlap":54,"longestOverlap":24}]],"560":[{"id":"560","fileName":"1575083781.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int minval = nums[0];\n        for(int n : nums) {\n            minval = max(n, minval);\n            if(n >= 0) {\n                st.insert(n);\n            }\n        }\n        int ret = 0;\n        for(int ele : st) {\n            ret += ele;\n        }\n        if(st.size() == 0) {\n            ret = minval;\n        }\n        return ret;\n    }\n};","author":"Aster233","submissionId":"1575083781"},[{"id":"1420","similarity":0.8064516129032258,"totOverlap":50,"longestOverlap":11},{"id":"506","similarity":0.8032786885245902,"totOverlap":49,"longestOverlap":21}]],"561":[{"id":"561","fileName":"1575083812.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxNum = *max_element(nums.begin(), nums.end());\n        if(maxNum < 0) {\n            return maxNum;\n        }\n\n        int ans = 0;\n        unordered_set<int> unique(nums.begin(), nums.end());\n        for(int num : unique) {\n            if(num >= 0) {\n                ans += num;\n            }\n        }\n        \n        return ans;\n    }\n};","author":"Sam Lee","submissionId":"1575083812"},[{"id":"561","similarity":0.7931034482758621,"totOverlap":46,"longestOverlap":14}]],"563":[{"id":"563","fileName":"1575083816.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> ap;\n        int res = 0;\n        int curMax = INT_MIN;\n        for(int n:nums) {\n            if(ap.find(n) == ap.end() && n > 0) {\n                res += n;\n                ap.insert(n);\n            } else if(ap.empty()) {\n                curMax = max(curMax, n);\n            }\n        }\n        if(ap.empty()) {\n            return curMax;\n        }\n        return res;\n    }\n};","author":"JiahangZhang","submissionId":"1575083816"},[{"id":"563","similarity":0.7285714285714285,"totOverlap":51,"longestOverlap":12}]],"571":[{"id":"571","fileName":"1575083892.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        if(nums.back()<0){return nums.back();}\n        set<int> st;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>=0){st.insert(nums[i]);}   \n        }\n        int sum=0;\n        for(auto x: st){\n        sum+=x;\n        }\n        return sum;\n    }\n};","author":"yashsinghbhadauria05","submissionId":"1575083892"},[{"id":"266","similarity":0.875,"totOverlap":70,"longestOverlap":21}]],"572":[{"id":"572","fileName":"1575083879.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int cnt = 0;\n        int res = 0;\n        set<int> check;\n        \n        for (int i = 0; i < n;i++) {\n            int a = nums[i];\n            if (a >= 0 && check.find(a) == check.end()) {\n                res += a;\n                check.insert(a);\n            } else {\n                cnt += 1;\n            }\n        }\n        \n        if (cnt == n) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        \n        return res;\n    }\n};","author":"huzy","submissionId":"1575083879"},[{"id":"1870","similarity":0.7349397590361446,"totOverlap":61,"longestOverlap":11},{"id":"1471","similarity":0.7083333333333334,"totOverlap":51,"longestOverlap":7},{"id":"513","similarity":0.7704918032786885,"totOverlap":47,"longestOverlap":7}]],"576":[{"id":"576","fileName":"1575083895.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s(nums.begin(), nums.end());\n        if (*s.rbegin() < 0) return *s.rbegin();\n        int ans = 0;\n        for (int x : s) if (x > 0) ans += x;\n        return ans;\n    }\n};","author":"Shik Chen","submissionId":"1575083895"},[{"id":"464","similarity":1.0,"totOverlap":58,"longestOverlap":29}]],"577":[{"id":"577","fileName":"1575083913.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums){\n        set<int> s;\n        int mx = -1e9;\n        for(int x : nums){ \n            if(x > 0) s.insert(x);\n            else mx = max(mx, x);\n        }\n        if(s.empty()) return mx;\n        int sum = 0;\n        for(int x : s) sum += x;\n        return sum;\n    }\n};","author":"godoflogix","submissionId":"1575083913"},[{"id":"50","similarity":0.9259259259259259,"totOverlap":50,"longestOverlap":25}]],"578":[{"id":"578","fileName":"1575083925.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int neg = 0;\n        int pos = 0;\n        for (auto i : nums) {\n            if (i < 0 ) neg++;\n            if ( i >= 0) pos++;\n            \n        }\n        \n        set<int> s(nums.begin(), nums.end());\n        int ans = 0;\n        for (auto i : s) if (i > 0) ans += i;\n        if (pos) \n            return ans;\n        else {\n            return *s.rbegin();\n        }\n        return ans;\n    }\n};","author":"Swaroop vaze","submissionId":"1575083925"},[{"id":"578","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":7}]],"580":[{"id":"580","fileName":"1575083939.txt","sourceCode":"class Solution {\n    public:\n        int maxSum(vector<int>& nums) {\n            unordered_set <int> hash;\n            for (auto num : nums) if (num > 0) hash.insert(num);\n            int tot = 0;\n            if (hash.empty()) {\n                int ret = INT_MIN;\n                for (auto num : nums) ret = max(ret, num);\n                return ret;\n            }\n            for (auto num : hash) tot += num;\n            return tot;\n        }\n    };","author":"tsigave","submissionId":"1575083939"},[{"id":"203","similarity":0.7741935483870968,"totOverlap":48,"longestOverlap":17}]],"586":[{"id":"586","fileName":"1575083973.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n\n        for(int i : nums){\n            if(i > 0)\n                s.insert(i);\n        }\n\n        int ans = 0;\n        for(int i : s){\n            ans += i;\n        }\n        if(ans == 0){\n            sort(nums.begin(),nums.end());\n\n            return nums[nums.size()-1];\n        }\n        return ans;\n    }\n};","author":"Giriraj bidwai","submissionId":"1575083973"},[{"id":"586","similarity":0.7424242424242424,"totOverlap":49,"longestOverlap":13}]],"588":[{"id":"588","fileName":"1575083977.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set <int> s;\n        int sum = 0;\n        for(int &i:nums) {\n            if(i > 0 && !s.count(i)) {\n                sum += i;\n            }\n            s.insert(i);\n        }\n        if(sum == 0) {\n            sum = *max_element(nums.begin(),nums.end());\n        }\n        return sum;\n    }\n};","author":"RGM","submissionId":"1575083977"},[{"id":"588","similarity":0.7049180327868853,"totOverlap":43,"longestOverlap":11}]],"589":[{"id":"589","fileName":"1575083984.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n      int n = nums.size();\n      int mx = INT_MIN;\n      \n      set<int> st;\n      for(int i : nums){\n        if(i>=0)st.insert(i);\n        else{\n          mx = max(i,mx);\n        }\n      }\n      int ans = 0;\n      if(st.size()==0)return mx;\n      \n      for(int i: st){\n        \n        ans+=i;\n      }\n\n      \n      return ans;\n    }\n};","author":"ngmi","submissionId":"1575083984"},[{"id":"589","similarity":0.7241379310344828,"totOverlap":42,"longestOverlap":7}]],"590":[{"id":"590","fileName":"1575083994.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        set<int> st;\n        for(int a:nums) if(a>=0) st.insert(a);\n\n        if(st.size()==0){\n            sort(nums.begin(), nums.end());\n\n            return nums[n-1];\n        }\n\n        int sum = 0;\n        for(auto it:st) sum+= (it);\n\n        return sum;\n    }\n};","author":"Siddhesh Pandey","submissionId":"1575083994"},[{"id":"590","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":6}]],"593":[{"id":"593","fileName":"1575084012.txt","sourceCode":"#include<bits/stdc++.h>\nusing namespace std;\n\nclass Solution\n{\n    public:\n    int maxSum(vector<int>& nums)\n    {\n        int m = *max_element(nums.begin(), nums.end());\n        if(m < 0)\n        {\n            return m;\n        }\n\n        unordered_set<int> s(nums.begin(), nums.end());\n        int ans = 0;\n\n        for(int x : s)\n        {\n            if(x > 0)\n            {\n                ans += x;\n            }\n        }\n\n        return ans;\n    }\n};","author":"Himal Rana","submissionId":"1575084012"},[{"id":"265","similarity":0.7666666666666667,"totOverlap":46,"longestOverlap":11}]],"595":[{"id":"595","fileName":"1575084001.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s; \n        int mx = -200;\n        for(auto a: nums){\n            mx = max(mx, a);\n            if(a >= 0)\n                s.insert(a);\n        }\n        int ans = 0;\n        if(mx <= 0)\n            return mx;\n        else{\n            for(auto a: s){\n                ans += a;\n            }\n        }\n        return ans;\n    }\n};","author":"Mohammad","submissionId":"1575084001"},[{"id":"903","similarity":0.875,"totOverlap":49,"longestOverlap":12},{"id":"595","similarity":0.7384615384615385,"totOverlap":48,"longestOverlap":10}]],"597":[{"id":"597","fileName":"1575084004.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        unordered_set<int> s1;\n        for(auto x:nums){\n            if(x>0 && s1.find(x)==s1.end()){\n                ans+=x;\n                s1.insert(x);\n            }\n        }\n        if(ans==0){\n            ans = -200;\n            for(auto x:nums){\n                ans= max(ans,x);\n            }\n        }\n        return ans;\n    }\n};","author":"Nakul","submissionId":"1575084004"},[{"id":"517","similarity":0.875,"totOverlap":56,"longestOverlap":14}]],"598":[{"id":"598","fileName":"1575084032.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        for(auto i:nums) \n        {\n            if(i>=0) s.insert(i);\n        }\n        if(s.size()==0)\n        {\n            sort(nums.begin(),nums.end());\n            return nums.back();\n        }\n        int ans=0;\n        for(auto i:s) ans+=i;\n        return ans;\n    }\n};","author":"stfudevansh","submissionId":"1575084032"},[{"id":"515","similarity":0.7307692307692307,"totOverlap":57,"longestOverlap":25}]],"606":[{"id":"606","fileName":"1575084089.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        set<int> s;\n        for (auto cur : nums) {\n            if (cur > 0) {\n                s.insert(cur);\n            }\n        }\n        int sm = 0;\n        for (auto i : s) {\n            sm += i;\n        }\n        if (s.size() == 0) {\n            return nums.back();\n        }\n        return sm;\n    }\n};","author":"whitemagic7456","submissionId":"1575084089"},[{"id":"258","similarity":0.7868852459016393,"totOverlap":48,"longestOverlap":6}]],"612":[{"id":"612","fileName":"1575084140.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(int i:nums){\n            if(i > 0)st.insert(i);\n        }\n        int v = accumulate(st.begin(),st.end(),0);\n        if(v == 0) {\n            return *max_element(nums.begin(),nums.end());\n        }\n        return v;\n    }\n};","author":"Udit Dwivedi","submissionId":"1575084140"},[{"id":"612","similarity":0.8392857142857143,"totOverlap":47,"longestOverlap":14}]],"614":[{"id":"614","fileName":"1575084154.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        set<int> st;\n        for(auto it:nums) st.insert(it);\n\n        int ans = 0;\n        for(auto it:st) {\n            if(it>0) ans += it;\n        }\n        if(ans == 0) ans = nums.back();\n        return ans;\n    }\n};","author":"Navdeep Rathore","submissionId":"1575084154"},[{"id":"614","similarity":0.7014925373134329,"totOverlap":47,"longestOverlap":11}]],"625":[{"id":"625","fileName":"1575084206.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> a;\n        for (int num : nums) {\n            if (num > 0) a.insert(num);\n        }\n        if (a.size() == 0) {\n            return *max_element(nums.begin(), nums.end());\n        }\n\n        int res = 0;\n        for (int num : a) {\n            res += num;\n        }\n        return res;\n    }\n};","author":"hiJason","submissionId":"1575084206"},[{"id":"242","similarity":0.9354838709677419,"totOverlap":58,"longestOverlap":29}]],"629":[{"id":"629","fileName":"1575084242.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        \n        set<int> st;\n        int neg=-1e9;\n        for(int i=0;i<n;i++){\n            if(nums[i]>=0) st.insert(nums[i]);\n            else neg= max(neg,nums[i]);\n        }\n        \n        if(st.size()==0) return neg;\n        \n        int sum=0;\n        for(auto it:st){\n            sum+=it;\n            // if(it<0) neg++;\n        }\n        \n        return sum;\n    }\n};","author":"shresth024","submissionId":"1575084242"},[{"id":"367","similarity":0.7407407407407407,"totOverlap":60,"longestOverlap":11}]],"632":[{"id":"632","fileName":"1575084267.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>s;\n        int res = 0;\n        for(int i:nums){\n            if(i > 0)\n                s.insert(i);\n        }\n        if(s.size()){\n            for(int i : s){\n                res += i;\n            }\n            return res;\n        }else{\n            return *max_element(nums.begin(), nums.end());\n        }\n    }\n};","author":"qianyifan010203","submissionId":"1575084267"},[{"id":"375","similarity":0.7419354838709677,"totOverlap":46,"longestOverlap":8}]],"641":[{"id":"641","fileName":"1575084290.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(auto x: nums){\n            if(x>0) st.insert(x);\n        }\n        bool allneg = true;\n        for(auto x: nums){\n            if(x>=0){allneg = false;\n                     break;\n                }\n        }\n        if(allneg){\n            int res = INT_MIN;\n            for(auto x:nums){\n                res = max(x, res);\n            }\n            return res;\n        }\n        int sum = 0;\n        for(auto x: st) sum+=x;\n        \n        return sum;\n    }\n};","author":"Abhinav Choukse","submissionId":"1575084290"},[{"id":"840","similarity":0.7105263157894737,"totOverlap":54,"longestOverlap":12},{"id":"809","similarity":0.7123287671232876,"totOverlap":52,"longestOverlap":11}]],"645":[{"id":"645","fileName":"1575084328.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st(nums.begin(),nums.end());\n        int sum=0,cnt=0;\n        for(auto i : st) if(i>0)sum+=i,cnt++;\n        if(cnt==0) return (*max_element(nums.begin(),nums.end()));\n        return sum;\n    }\n};","author":"Sai","submissionId":"1575084328"},[{"id":"645","similarity":0.7049180327868853,"totOverlap":43,"longestOverlap":13}]],"646":[{"id":"646","fileName":"1575084333.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        int cnt=0;\n        for(auto it: nums){\n            if(it>=0)st.insert(it);\n            else cnt++;\n        }\n        if(cnt==nums.size()){\n            return *max_element(nums.begin(), nums.end());\n        }\n        int sum=0;\n        for(auto it: st)sum+=it;\n        return sum;\n    }\n};","author":"am_607","submissionId":"1575084333"},[{"id":"559","similarity":0.7868852459016393,"totOverlap":48,"longestOverlap":9}]],"647":[{"id":"647","fileName":"1575084351.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& v) {\n        int n = v.size();\n        set<int> st;\n        for(auto &c : v){\n            if(c > 0){\n                st.insert(c);\n            }\n        }\n        if(st.empty()){\n            return *max_element(v.begin() , v.end());\n        }\n        int ans = 0;\n        for(auto &c : st){\n            ans += c;\n        }\n        return ans;\n    }\n};","author":"simplesheep03","submissionId":"1575084351"},[{"id":"192","similarity":0.8382352941176471,"totOverlap":57,"longestOverlap":19}]],"649":[{"id":"649","fileName":"1575084338.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum=0;\n        int p=0;\n        int maxi=-100;\n        set<int> s;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i] >=0){\n                if(s.find(nums[i]) ==s.end())\n                sum +=(nums[i]);\n                p++;\n                s.insert(nums[i]);\n            }\n            maxi=max(maxi,nums[i]);\n        }\n        if(maxi >=0){\n            return sum;\n        }\n        return maxi;\n    }\n};","author":"vadlapudi_sekhar","submissionId":"1575084338"},[{"id":"714","similarity":0.7857142857142857,"totOverlap":66,"longestOverlap":17},{"id":"422","similarity":0.7710843373493976,"totOverlap":64,"longestOverlap":9}]],"658":[{"id":"658","fileName":"1575084372.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        set<int>st;\n        for(int i = 0; i < nums.size(); i++){\n            st.insert(nums[i]);\n        }\n        int cnt = 0;\n        for(int x:st){\n            if(x < 0) continue;\n            cnt++;\n            ans += x;\n        }\n        if(cnt == 0){\n            ans += *(--st.end());\n        }\n        return ans;\n    }\n};","author":"Siddharth Singh","submissionId":"1575084372"},[{"id":"658","similarity":0.7014925373134329,"totOverlap":47,"longestOverlap":20}]],"660":[{"id":"660","fileName":"1575084381.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(int x:nums){\n            if(x>=0)st.insert(x);\n        }\n        if(st.empty())return *max_element(nums.begin(),nums.end());\n        int ans =0 ;\n        for(int x:st)ans+=x;\n        return ans;\n    }\n};","author":"nimish yadav","submissionId":"1575084381"},[{"id":"291","similarity":1.0,"totOverlap":62,"longestOverlap":31}]],"663":[{"id":"663","fileName":"1575084409.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, int> m;\n        int ans = 0;\n        for(auto x: nums) {\n            if(x <=0 || m.find(x)!=m.end())\n                continue;\n            ans+=x;\n            m[x]++;\n        }\n        if(ans==0) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        return ans;\n    }\n};","author":"guptasuchit","submissionId":"1575084409"},[{"id":"1001","similarity":0.8070175438596491,"totOverlap":46,"longestOverlap":11},{"id":"663","similarity":0.7543859649122807,"totOverlap":43,"longestOverlap":12},{"id":"1049","similarity":0.7166666666666667,"totOverlap":43,"longestOverlap":9},{"id":"1001","similarity":0.7241379310344828,"totOverlap":42,"longestOverlap":13},{"id":"663","similarity":0.7192982456140351,"totOverlap":41,"longestOverlap":13},{"id":"855","similarity":0.7068965517241379,"totOverlap":41,"longestOverlap":13},{"id":"681","similarity":0.7192982456140351,"totOverlap":41,"longestOverlap":7}]],"665":[{"id":"665","fileName":"1575084412.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        unordered_set<int> numSet;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums[i] > 0 && numSet.count(nums[i]) == 0) {\n                sum += nums[i];\n            }\n\n            numSet.insert(nums[i]);\n        }\n\n        int maxNum = *max_element(nums.begin(), nums.end());\n        if (maxNum < 0) {\n            return maxNum;\n        }\n\n        return sum;\n    }\n};","author":"NTU_Anonymous","submissionId":"1575084412"},[{"id":"450","similarity":0.810126582278481,"totOverlap":64,"longestOverlap":14}]],"667":[{"id":"667","fileName":"1575084428.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool tag = false;\n        unordered_set<int> s;\n        int res = 0;\n        for (int i : nums) {\n            if (i >= 0) {\n                tag = true;\n                s.insert(i);\n            }\n        }\n        if (tag) {\n            for (int i : s) res += i;\n            return res;\n        }\n        return *max_element(nums.begin(), nums.end());\n    }\n};","author":"AegeanYU","submissionId":"1575084428"},[{"id":"947","similarity":0.7017543859649122,"totOverlap":40,"longestOverlap":8},{"id":"667","similarity":0.7142857142857143,"totOverlap":40,"longestOverlap":8}]],"668":[{"id":"668","fileName":"1575084426.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> db;\n        int rett = INT_MIN;\n        for (int& x: nums) {\n            if (x > 0) db.insert(x);\n            rett = max(rett, x);\n        }\n        return db.empty() ? rett : accumulate(db.begin(), db.end(), 0);\n    }\n};","author":"Annie W","submissionId":"1575084426"},[{"id":"1533","similarity":0.8166666666666667,"totOverlap":49,"longestOverlap":12},{"id":"1027","similarity":0.7796610169491526,"totOverlap":46,"longestOverlap":12}]],"672":[{"id":"672","fileName":"1575084455.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st(nums.begin(), nums.end());\n        while(st.size() > 1 && (*(st.begin())) < 0) {\n            st.erase(st.begin());\n        }\n\n        vector<int> arr(st.begin(), st.end());\n        return accumulate(arr.begin(), arr.end(), 0);\n    }\n};","author":"Neelabhra Roy","submissionId":"1575084455"},[{"id":"1378","similarity":0.8769230769230769,"totOverlap":57,"longestOverlap":18},{"id":"672","similarity":0.7123287671232876,"totOverlap":52,"longestOverlap":14},{"id":"498","similarity":0.7121212121212122,"totOverlap":47,"longestOverlap":14}]],"673":[{"id":"673","fileName":"1575084448.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n\n        for(auto it:nums){\n            if(it>0){\n                 s.insert(it);\n            }\n        }\n\n        if(s.empty()){\n            int ele = *max_element(nums.begin(),nums.end());\n            s.insert(ele);\n        }\n\n        int sum=0;\n        for(auto it:s) sum+=it;\n        return sum;\n    }\n};","author":"Tanmay Singh","submissionId":"1575084448"},[{"id":"66","similarity":0.8125,"totOverlap":52,"longestOverlap":17}]],"681":[{"id":"681","fileName":"1575084526.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        unordered_map<int,int> mp;\n        int sum = 0;\n        int el = *max_element(a.begin(), a.end());\n        for(int e : a){\n            if(e <= 0 || mp.count(e))  continue ;\n            sum += e;\n            mp[e]++;\n        }   \n        return sum ? sum : el;\n    }   \n};","author":"Gopal Krushna","submissionId":"1575084526"},[{"id":"681","similarity":0.7241379310344828,"totOverlap":42,"longestOverlap":13}]],"685":[{"id":"685","fileName":"1575084538.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int ans=0,mx=-200;\n        bool inc=0;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>=0&&st.find(nums[i])==st.end()){\n                inc=1;\n                ans+=nums[i];\n                st.insert(nums[i]);\n            }\n            mx=max(mx,nums[i]);\n        }\n        if(!inc)return mx;\n        return ans;\n    }\n};","author":"Hrithik Kumar","submissionId":"1575084538"},[{"id":"1034","similarity":0.7176470588235294,"totOverlap":61,"longestOverlap":13},{"id":"1034","similarity":0.7142857142857143,"totOverlap":60,"longestOverlap":14},{"id":"422","similarity":0.7037037037037037,"totOverlap":57,"longestOverlap":16}]],"691":[{"id":"691","fileName":"1575084601.txt","sourceCode":"\n#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& arr) {\n        \n        unordered_set<int> S;\n        for(int i: arr) if(i >=0)   S.insert(i);\n        \n        if(S.size() == 0) {\n            return *max_element(arr.begin(), arr.end());\n        }\n        \n        int ret = 0;\n        for(int i: S) ret += i;\n        \n        return ret;\n        \n    }\n};","author":"gy3T3vtplO","submissionId":"1575084601"},[{"id":"70","similarity":0.7619047619047619,"totOverlap":48,"longestOverlap":8}]],"697":[{"id":"697","fileName":"1575084632.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int m_element = *max_element(nums.begin(), nums.end());\n        if(m_element < 0)\n            return m_element;\n        \n        unordered_set<int> s;\n        for(int num : nums)\n            s.insert(num);\n\n        int ans = 0;\n        for(int e : s) {\n            if(e > 0)\n                ans += e;\n        }\n\n        return ans;\n    }\n};","author":"maomao0414","submissionId":"1575084632"},[{"id":"697","similarity":0.8,"totOverlap":44,"longestOverlap":9}]],"702":[{"id":"702","fileName":"1575084707.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>s;\n        int maxi = -100;\n        for(auto n : nums){\n            if(n > 0)s.insert(n);\n            maxi = max(maxi, n);\n        }\n        int ans = 0;\n        for(auto n : s)ans += n;\n        if(s.size() == 0)return maxi;\n        return ans;\n    }\n};","author":"im_nitin","submissionId":"1575084707"},[{"id":"364","similarity":0.8545454545454545,"totOverlap":47,"longestOverlap":9}]],"706":[{"id":"706","fileName":"1575084719.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int maxMin = INT_MIN;\n        for(int n : nums) if(n>0) st.insert(n); else maxMin = max(maxMin,n);\n        if(st.empty()) return maxMin;\n        int maxSum = 0;\n        for(int n : st) maxSum += n;\n        return maxSum;\n    }\n};","author":"Adas","submissionId":"1575084719"},[{"id":"67","similarity":0.8620689655172413,"totOverlap":50,"longestOverlap":11}]],"709":[{"id":"709","fileName":"1575084751.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size(), ans = 0;\n        set<int> s;\n        for (int i : nums) if (i > 0) s.insert(i);\n        if (!s.size()) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        for (int i : s) ans += i;\n        return ans;\n    }\n};","author":"math84081155","submissionId":"1575084751"},[{"id":"70","similarity":0.8032786885245902,"totOverlap":49,"longestOverlap":8}]],"710":[{"id":"710","fileName":"1575084714.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int maxi = INT_MIN;\n        int sum = 0;\n        unordered_set<int> unique;\n        for (auto it:nums){\n            if (it <= 0){\n                maxi = max(maxi,it);\n            }\n            else{\n                if (unique.find(it) == unique.end()) {\n                    sum += it;\n                    unique.insert(it);\n                }\n            }\n        }\n        if (sum != 0){\n            return sum;\n        }\n        return maxi;\n    }\n};","author":"AKProgrammer","submissionId":"1575084714"},[{"id":"710","similarity":0.7285714285714285,"totOverlap":51,"longestOverlap":15}]],"714":[{"id":"714","fileName":"1575084763.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& v) {\n        int m = -200;\n        for (int i = 0; i < v.size(); i++) m = max(m, v[i]);\n        if (m <= 0) return m;\n        int res = 0;\n        set<int> st;\n        for (int i = 0; i < v.size(); i++) {\n            if (v[i] > 0) {\n                if (st.find(v[i]) == st.end()) {\n                    res += v[i];\n                    st.insert(v[i]);\n                }\n            }\n        }\n        return res;\n    }\n};","author":"Sohel Hafiz","submissionId":"1575084763"},[{"id":"649","similarity":0.7857142857142857,"totOverlap":66,"longestOverlap":17}]],"715":[{"id":"715","fileName":"1575084770.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        set<int> s1(nums.begin(),nums.end());\n        int ans=0,a1=0;\n        for(auto it:s1){\n            if(it>0)\n            ans+=it;\n            else{\n                a1++;\n            }\n        }\n        if(a1==s1.size()){\n            return *(prev(s1.end()));\n        }\n        return ans;\n    }\n};","author":"1oPhytGbYO","submissionId":"1575084770"},[{"id":"715","similarity":0.7066666666666667,"totOverlap":53,"longestOverlap":11}]],"718":[{"id":"718","fileName":"1575084779.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int ans = 0;\n        int max_val = INT_MIN;\n        for (auto x: nums) {\n            if (!s.count(x) && x >= 0) {\n                ans+=x;\n                s.insert(x);\n            }\n            max_val = max(max_val, x);\n        }\n        if (s.size() == 0) {\n            return max_val;\n        }\n        return ans;\n    }\n};","author":"Siddharth Maddikayala","submissionId":"1575084779"},[{"id":"200","similarity":0.835820895522388,"totOverlap":56,"longestOverlap":17}]],"720":[{"id":"720","fileName":"1575084823.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mx = INT_MIN, sm = 0;\n        unordered_set<int> st;\n        \n        for (int& i: nums) {\n            if (i >= 0 && !st.count(i)) {\n                sm += i;\n                st.insert(i);\n            }\n\n            mx = max(mx, i);\n        }\n\n        if (mx < 0) {\n            return mx;\n        }\n\n        return sm;\n    }\n};","author":"Ajay Singh Deopa","submissionId":"1575084823"},[{"id":"720","similarity":0.84375,"totOverlap":54,"longestOverlap":14}]],"724":[{"id":"724","fileName":"1575084842.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>st;\n        for(int i : nums){\n            if(i >= 0) st.insert(i);\n        }\n        if(st.empty()) return *max_element(nums.begin(),nums.end());\n        return accumulate(st.begin(),st.end(),0);\n    }\n};","author":"edward7780","submissionId":"1575084842"},[{"id":"291","similarity":0.8666666666666667,"totOverlap":52,"longestOverlap":24}]],"726":[{"id":"726","fileName":"1575084836.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        unordered_set<int>st;\n        for(auto it:nums){\n            if(it>0)st.insert(it);\n        }\n        if(st.empty())return *max_element(nums.begin(),nums.end());\n        for(auto it:st)ans+=it;\n        return ans;\n    }\n};","author":"Saddam Hussain","submissionId":"1575084836"},[{"id":"227","similarity":0.828125,"totOverlap":53,"longestOverlap":14}]],"727":[{"id":"727","fileName":"1575084850.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        set<int> s(a.begin(),a.end());\n        int ans = 0;\n        int c = 0;\n        int mini = a[0];\n        for(auto &i : s){\n            if(i>=0){\n                c = 1;\n                ans+=i;\n            }\n            mini = max(mini,i);\n        }\n        if(!c) ans = mini;\n        return ans;\n    }\n};","author":"Manorath Reddy","submissionId":"1575084850"},[{"id":"418","similarity":0.746268656716418,"totOverlap":50,"longestOverlap":16}]],"730":[{"id":"730","fileName":"1575084895.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n      int sum=0;\n      set<int>st;\n      for(auto i:nums){\n        if(st.find(i)==st.end() && i>0)sum+=i;\n        st.insert(i);\n      }\n      if(sum==0)sum=*max_element(nums.begin(),nums.end());\n\n      return sum;\n    }\n};","author":"Bhawnachauhan","submissionId":"1575084895"},[{"id":"1081","similarity":0.8253968253968254,"totOverlap":52,"longestOverlap":7},{"id":"439","similarity":0.7230769230769231,"totOverlap":47,"longestOverlap":10}]],"735":[{"id":"735","fileName":"1575084918.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool allNeg = true;\n        int mx = -1e9;\n        set<int> st;\n        for(auto x:nums)\n        {\n            if(x>=0)\n            {\n                allNeg = false;\n                st.insert(x);\n            }\n            \n            mx = max(mx, x);\n\n            \n        }\n\n        if(allNeg)\n            return mx;\n\n        int ans = 0;\n        for(auto x:st)\n            ans+=x;\n\n        return ans;\n    }\n};","author":"Suryansh Gupta","submissionId":"1575084918"},[{"id":"457","similarity":0.7068965517241379,"totOverlap":41,"longestOverlap":7}]],"742":[{"id":"742","fileName":"1575084958.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        map<int,int> m;\n        for(auto x : nums) {\n            if(x > 0)m[x]++;\n        }\n        sort(nums.begin() , nums.end());\n        if(nums.back() < 0)return nums.back();\n\n        int ans = 0;\n        for(auto x : m) {\n            ans += x.first;\n        }\n        return ans;\n    }\n};","author":"NityaJangra","submissionId":"1575084958"},[{"id":"498","similarity":0.7313432835820896,"totOverlap":49,"longestOverlap":15}]],"744":[{"id":"744","fileName":"1575084963.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(auto x : nums){\n            if(x >= 0) st.insert(x);\n        }\n        int ans = -1000;\n        if(st.size() == 0){\n            for(auto x : nums) ans = max(ans,x);\n            return ans;\n        }\n        ans = 0;\n        for(auto x : st) ans += x;\n        return ans;\n    }\n};","author":"Naveen Khuntey","submissionId":"1575084963"},[{"id":"312","similarity":0.7777777777777778,"totOverlap":42,"longestOverlap":18}]],"746":[{"id":"746","fileName":"1575084990.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        int sum=0;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>=0){\n                if(st.count(nums[i])!=0){\n                continue;\n            }else{\n                st.insert(nums[i]);\n                sum+=nums[i];\n            }\n            }\n        }\n        if(st.size()==0){\n            int mx=-1e9;\n            for(int i=0;i<nums.size();i++){\n                mx=max(nums[i],mx);\n            }\n            sum+=mx;\n        }\n        return sum;\n    }\n};","author":"Samyak Rote","submissionId":"1575084990"},[{"id":"415","similarity":0.7303370786516854,"totOverlap":65,"longestOverlap":9}]],"747":[{"id":"747","fileName":"1575084982.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        for (int x : nums) {\n            if (x < 0)\n                continue;\n            s.insert(x);\n        }\n        if (s.empty())\n            return *max_element(nums.begin(), nums.end());\n        \n        int sum = 0;\n        for (int x : s)\n            sum += x;\n        return sum;\n    }\n};","author":"oscp","submissionId":"1575084982"},[{"id":"291","similarity":0.9333333333333333,"totOverlap":56,"longestOverlap":15}]],"748":[{"id":"748","fileName":"1575084973.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n    int n=a.size();\n    set<int>st;\n    int ans=0,mx=-1e5;\n    for(int i=0;i<n;i++){\n        if(a[i]<=0){\n            mx=max(mx,a[i]);\n        }\n        else{\n            if(st.find(a[i])==st.end()){\n                ans+=a[i];\n                st.insert(a[i]);\n            }\n        }\n    }\n    if(ans==0){\n        ans=mx;\n    }\n    return ans;\n}\n};","author":"Meet Modi","submissionId":"1575084973"},[{"id":"459","similarity":0.7012987012987013,"totOverlap":54,"longestOverlap":14}]],"749":[{"id":"749","fileName":"1575085007.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        set<int> s;\n        for (int x : nums)\n            if (x > 0)\n                s.insert(x);\n        int ans = 0;\n        for (int x : s)\n            ans += x;\n        if (ans == 0)\n            return *max_element(nums.begin(), nums.end());\n        return ans;\n    }\n};","author":"Catchet","submissionId":"1575085007"},[{"id":"1143","similarity":0.875,"totOverlap":56,"longestOverlap":15},{"id":"1510","similarity":0.835820895522388,"totOverlap":56,"longestOverlap":18},{"id":"749","similarity":0.8307692307692308,"totOverlap":54,"longestOverlap":17},{"id":"1510","similarity":0.7397260273972602,"totOverlap":54,"longestOverlap":12},{"id":"70","similarity":0.8125,"totOverlap":52,"longestOverlap":15}]],"751":[{"id":"751","fileName":"1575085015.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(int i: nums){\n            if(i < 0) continue;\n            s.insert(i);\n        }\n        int ans = 0;\n        if(s.size() == 0){\n            int maxi = nums[0];\n            for(int i: nums){\n                maxi = max(maxi, i);\n            }\n            return maxi;\n        }\n        for(int i: s){\n            ans += i;\n        }\n        \n        return ans;\n    }\n};","author":"Tikam_Gupta","submissionId":"1575085015"},[{"id":"123","similarity":0.7692307692307693,"totOverlap":50,"longestOverlap":14}]],"752":[{"id":"752","fileName":"1575085000.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> ht;\n        sort(nums.begin(), nums.end());\n        int sum = 0;\n        for (int num: nums) {\n            if (ht.find(num) == ht.end()) {\n                ht.insert(num);\n                if (num > 0) sum += num;\n            }\n        }\n        if (sum == 0) sum = nums[nums.size()-1];\n        return sum;\n    }\n};","author":"thatdns","submissionId":"1575085000"},[{"id":"1447","similarity":0.711864406779661,"totOverlap":42,"longestOverlap":8},{"id":"86","similarity":0.7450980392156863,"totOverlap":38,"longestOverlap":12}]],"757":[{"id":"757","fileName":"1575085070.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        for(int i = 0; i < nums.size(); i++) {\n            if(nums[i] > 0) st.insert(nums[i]);\n        }\n        if(st.empty()) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        int ans = 0;\n        for(int i: st) {\n            ans += i;\n        }\n        return ans;\n    }\n};","author":"neelesh404","submissionId":"1575085070"},[{"id":"375","similarity":0.7866666666666666,"totOverlap":59,"longestOverlap":19}]],"768":[{"id":"768","fileName":"1575085153.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        set<int> st;\n        int m = -1e9;\n        for(auto i : nums)\n            {\n                if(i<0){\n                    m = max(m,i);\n                    continue;\n                }\n                st.insert(i);\n            }\n        int ans = 0; \n         for(auto i : st)\n            {\n                ans+=i;\n            }\n        if(st.size()==0)\n        {\n            ans = m;\n        }\n        return ans;\n    }\n};","author":"Shubham Mishra","submissionId":"1575085153"},[{"id":"126","similarity":0.7424242424242424,"totOverlap":49,"longestOverlap":7}]],"773":[{"id":"773","fileName":"1575085257.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxElem = INT_MIN;\n        int sum = 0;\n        bool hasNonNegative = false;\n        unordered_set<int> seen;\n        \n        for (int x : nums) {\n            maxElem = max(maxElem, x);\n            if (x >= 0 && seen.find(x) == seen.end()) {\n                sum += x;\n                seen.insert(x);\n                hasNonNegative = true;\n            }\n        }\n        \n        return hasNonNegative ? sum : maxElem;\n    }\n};","author":"Jacob Ma","submissionId":"1575085257"},[{"id":"449","similarity":0.78125,"totOverlap":50,"longestOverlap":10}]],"783":[{"id":"783","fileName":"1575085298.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int result = 0, mx = INT_MIN;\n        set<int> s;\n        for (int n : nums) {\n            if (n > 0 && !s.count(n)) {\n                result += n;\n                s.insert(n);\n            }\n            mx = max(mx, n);\n        }\n        if (s.size() == 0) {\n            return mx;\n        }\n        return result;\n    }\n};","author":"Colin Moy","submissionId":"1575085298"},[{"id":"783","similarity":0.8307692307692308,"totOverlap":54,"longestOverlap":12}]],"794":[{"id":"794","fileName":"1575085357.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = 0;\n        unordered_set<int> un;\n        int mx = INT_MIN;\n        for(int n: nums){\n            if(n > 0 && !un.count(n)){\n                un.insert(n);\n                res += n;\n            }\n            mx = max(mx, n);\n        }\n\n        if(res == 0) return mx;\n\n        return res;\n    }\n};","author":"Abhijeet Jadhav","submissionId":"1575085357"},[{"id":"229","similarity":0.8214285714285714,"totOverlap":46,"longestOverlap":14}]],"797":[{"id":"797","fileName":"1575085381.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> used;\n        int maxElement = -101;\n        int sum = 0;\n        for (int x : nums) {\n            maxElement = max(maxElement, x);\n            if(x > 0 && used.find(x) == used.end()){\n                sum += x;\n                used.insert(x);\n            }\n        }\n        return (sum > 0 ? sum : maxElement);\n    }\n};","author":"nadoor_7","submissionId":"1575085381"},[{"id":"1476","similarity":0.7692307692307693,"totOverlap":50,"longestOverlap":11},{"id":"797","similarity":0.7258064516129032,"totOverlap":45,"longestOverlap":10}]],"802":[{"id":"802","fileName":"1575085433.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n =nums.size();\n        int ans = 0;\n        set<int>s;\n        int mx = -1e9;\n        for(int i =0;i<n;i++)\n            {\n                if(nums[i]>0)\n                {\n                    s.insert(nums[i]);\n                }\n                mx = max(mx,nums[i]);\n            }\n        if(s.size()>0)\n        {\n            for(auto x:s)\n                {\n                    ans+=x;\n                }\n            return ans;\n        }\n        return mx;\n    }\n};","author":"Dark_Days","submissionId":"1575085433"},[{"id":"1646","similarity":0.7948717948717948,"totOverlap":62,"longestOverlap":16},{"id":"629","similarity":0.7228915662650602,"totOverlap":60,"longestOverlap":11}]],"803":[{"id":"803","fileName":"1575085412.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int ret = 0;\n        sort(nums.begin(), nums.end());\n        for(const auto& n : nums) {\n            if (n >= 0 && st.find(n) == st.end()) {\n                ret +=n;\n                st.insert(n);\n            }\n        }\n        if (ret == 0) {\n            return nums.back();\n        }\n        return ret;\n        \n    }\n};","author":"HeadingWest","submissionId":"1575085412"},[{"id":"803","similarity":0.7534246575342466,"totOverlap":55,"longestOverlap":18}]],"807":[{"id":"807","fileName":"1575085481.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        set<int>st;\n        for(int i=0;i<n;i++){\n            if(nums[i]>0){\n            st.insert(nums[i]);\n            }\n        }\n        if(st.size()==0){\n            int maxi=*max_element(nums.begin(),nums.end());\n            return maxi;\n        }\n        int ans=0;\n        for(auto it:st) ans+=it;\n        return ans;\n    }\n};","author":"Divye Maloo","submissionId":"1575085481"},[{"id":"807","similarity":0.7215189873417721,"totOverlap":57,"longestOverlap":17}]],"809":[{"id":"809","fileName":"1575085499.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n\n        set<int> st;\n        int mx = -10000;\n        for(int i : nums){\n            if(i > 0){\n                st.insert(i);\n            }\n\n            mx = max(mx, i);\n        }\n\n        if(st.empty()){\n            return mx;\n        }\n\n        int ans = 0;\n        for(auto i : st){\n            ans += i;\n        }\n        return ans;\n    }\n};","author":"shivamCodes24_7","submissionId":"1575085499"},[{"id":"1707","similarity":0.7297297297297297,"totOverlap":54,"longestOverlap":12},{"id":"840","similarity":0.7123287671232876,"totOverlap":52,"longestOverlap":11},{"id":"517","similarity":0.7285714285714285,"totOverlap":51,"longestOverlap":7}]],"814":[{"id":"814","fileName":"1575085527.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n       int sum = 0;\n        set<int> se;\n        \n        int n = nums.size();\n        for(int i=0;i<n;i++){\n            if(nums[i]>0){\n                se.insert(nums[i]);\n            }\n        }\n        for(auto x: se){\n            sum+=x;\n        }\n        if(se.size() == 0){\n            sum = nums[0];\n            for(int i=0;i<n;i++){\n                sum = max(sum, nums[i]);\n            }\n        }\n        return sum;\n    }\n};","author":"roronoazoro2000","submissionId":"1575085527"},[{"id":"814","similarity":0.75,"totOverlap":60,"longestOverlap":18}]],"816":[{"id":"816","fileName":"1575085529.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>uset;\n        int maxx = INT_MIN;\n        for(auto& ele: nums){\n            if(ele>0)uset.insert(ele);\n            maxx = max(maxx,ele);\n        }\n        if(uset.size()==0){\n            return maxx;\n            \n        }\n        int ans = 0;\n        for(auto& ele: uset){\n            ans+=ele;\n        }\n        return ans;\n    }\n};","author":"gutu","submissionId":"1575085529"},[{"id":"488","similarity":0.8793103448275862,"totOverlap":51,"longestOverlap":11}]],"818":[{"id":"818","fileName":"1575085548.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        set<int> st;\n        int maxi = *max_element(nums.begin(),nums.end());\n        for(auto &ele:nums){\n            if(ele>=0) st.insert(ele);\n        }\n        if(st.empty()) return maxi;\n        int ans = 0;\n        for(auto &ele:st) ans+=ele;\n        return ans;\n    }\n};","author":"Hritik Anand","submissionId":"1575085548"},[{"id":"227","similarity":0.7536231884057971,"totOverlap":52,"longestOverlap":11}]],"838":[{"id":"838","fileName":"1575085718.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(int i : nums) st.insert(i);\n        int ans = 0;\n        int neg = 1;\n        int atleast = false;\n        \n        for(int i : st){\n            if(i >= 0){\n                ans += i;\n                atleast = true;\n            }\n        }\n        if(atleast){\n            return ans;\n        }else{\n            int mx = *max_element(nums.begin(), nums.end());\n            return mx;\n        }\n        return 0;\n    }\n};","author":"Pravinkumar S","submissionId":"1575085718"},[{"id":"137","similarity":0.7846153846153846,"totOverlap":51,"longestOverlap":11}]],"839":[{"id":"839","fileName":"1575085717.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>&arr) {\n        int ans=0;\n        set<int>st;\n          for(int i=0;i<arr.size();i++)\n              {\n                  if(arr[i]>=0 && !st.count(arr[i]))\n                  {\n                      ans+=arr[i];\n                      st.insert(arr[i]);\n                      \n                  }\n                  \n                  \n              }\n        int n=arr.size();\n        if(st.size()==0)\n        {\n            sort(arr.begin(),arr.end());\n            return arr[n-1];\n        }\n        return ans;\n        \n    }\n};","author":"Anuj Nagpure","submissionId":"1575085717"},[{"id":"422","similarity":0.7142857142857143,"totOverlap":60,"longestOverlap":18}]],"840":[{"id":"840","fileName":"1575085719.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = a.size();\n        set<int>s;\n        for(auto i:a){\n            if(i>=0)\n            s.insert(i);\n        }\n        if(s.size()==0){\n            int mx=INT_MIN;\n            for(auto i:a){\n                mx = max(mx,i);\n            }\n            return mx;\n        }\n        int ans=0;\n        for(auto i:s){\n            ans+=i;\n        }\n        return ans;\n    }\n};","author":"20je0056","submissionId":"1575085719"},[{"id":"641","similarity":0.7105263157894737,"totOverlap":54,"longestOverlap":12}]],"855":[{"id":"855","fileName":"1575085809.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int>mp;\n        int answer=0;\n\n        \n        for(auto n:nums){\n            if(!mp.count(n)&&n>0){\n                answer+=n;\n            }\n            mp[n]=1;\n        }\n        sort(nums.begin(),nums.end());\n        if(answer==0)answer=nums[nums.size()-1];\n        return answer;\n    }\n};","author":"Franky_Hsiao","submissionId":"1575085809"},[{"id":"663","similarity":0.7068965517241379,"totOverlap":41,"longestOverlap":13}]],"858":[{"id":"858","fileName":"1575085843.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int mx = INT_MIN;\n        for(int ele : nums){\n            mx = max(mx, ele);\n            if(ele >= 0) st.insert(ele);\n        }\n        if(st.size() == 0) return mx;\n        int ans = 0;\n        for(auto ele : st) ans += ele;\n        return ans;\n    }\n};","author":"Prakhar Gupta","submissionId":"1575085843"},[{"id":"506","similarity":0.8253968253968254,"totOverlap":52,"longestOverlap":22}]],"866":[{"id":"866","fileName":"1575085890.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> addedNum;\n        int sum = 0;\n        for (auto &n: nums) {\n            if (n > 0 && addedNum.find(n) == addedNum.end()) {\n                sum += n;\n                addedNum.insert(n);\n            }\n        }\n        if (addedNum.size() > 0) {\n            return sum;\n        } else {\n            return *max_element(nums.begin(), nums.end());\n        }\n    }\n};","author":"syujy","submissionId":"1575085890"},[{"id":"803","similarity":0.7575757575757576,"totOverlap":50,"longestOverlap":10}]],"868":[{"id":"868","fileName":"1575085891.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>see;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>0)\n            see.insert(nums[i]);\n        }\n        int ans=0;\n        for(auto it: see){\n            ans=ans+it;\n        }\n        sort(nums.begin(),nums.end());\n        if(ans==0 && see.find(0)==see.end()){\n            ans=nums[nums.size()-1];\n            return ans;\n        }\n        return ans;\n    }\n};","author":"sakutsadragonpowerranger","submissionId":"1575085891"},[{"id":"888","similarity":0.7411764705882353,"totOverlap":63,"longestOverlap":14},{"id":"1097","similarity":0.7325581395348837,"totOverlap":63,"longestOverlap":7},{"id":"1097","similarity":0.7045454545454546,"totOverlap":62,"longestOverlap":8},{"id":"629","similarity":0.7407407407407407,"totOverlap":60,"longestOverlap":11},{"id":"629","similarity":0.7317073170731707,"totOverlap":60,"longestOverlap":14},{"id":"802","similarity":0.7228915662650602,"totOverlap":60,"longestOverlap":11},{"id":"1585","similarity":0.7142857142857143,"totOverlap":60,"longestOverlap":13},{"id":"923","similarity":0.7341772151898734,"totOverlap":58,"longestOverlap":13},{"id":"1646","similarity":0.7160493827160493,"totOverlap":58,"longestOverlap":22},{"id":"1097","similarity":0.7160493827160493,"totOverlap":58,"longestOverlap":8},{"id":"941","similarity":0.7215189873417721,"totOverlap":57,"longestOverlap":17},{"id":"807","similarity":0.7671232876712328,"totOverlap":56,"longestOverlap":21},{"id":"450","similarity":0.7088607594936709,"totOverlap":56,"longestOverlap":9}]],"870":[{"id":"870","fileName":"1575085896.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        sort(nums.begin(), nums.end());\n        set<int> x;\n        int sum = 0;\n        bool f = false;\n        for (auto a : nums)\n            if (a > 0 && x.count(a) == 0) {\n                x.insert(a);\n                sum += a;\n                f = true;\n            }\n\n        if (f == false)\n            return nums[nums.size() - 1];\n        else\n            return sum;\n    }\n};","author":"Vlad Sobin","submissionId":"1575085896"},[{"id":"870","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":15}]],"873":[{"id":"873","fileName":"1575085936.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int n =nums.size();\n        if(nums[n-1]<0) return nums[n-1];\n        set<int> s;\n        for(auto &i:nums) if(i>0) s.insert(i);\n        int sum=0;\n        for(auto &i:s) sum+=i;\n        return sum;\n    }\n};","author":"I-tachi","submissionId":"1575085936"},[{"id":"877","similarity":0.8108108108108109,"totOverlap":60,"longestOverlap":15},{"id":"873","similarity":0.7391304347826086,"totOverlap":51,"longestOverlap":14},{"id":"301","similarity":0.7580645161290323,"totOverlap":47,"longestOverlap":9}]],"875":[{"id":"875","fileName":"1575085963.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> hashset;\n        auto maximum = nums[0];\n        for (auto num : nums) {\n            maximum = max(maximum, num);\n            if (num >= 0)\n                hashset.emplace(num);\n        }\n\n        if (hashset.empty())\n        {\n            return maximum;\n        }\n        \n        auto sum = 0;\n        for (auto num : hashset)\n            sum += num;\n        return sum;\n    }\n};","author":"Piggy Wang","submissionId":"1575085963"},[{"id":"858","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":10}]],"877":[{"id":"877","fileName":"1575085948.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        if(nums[nums.size()-1]<0) return nums[nums.size()-1];\n        set<int> set;\n        for(auto &x: nums) if(x>0) set.insert(x);\n        int ans=0;\n        for(auto &x: set) ans+=x;\n        return ans;\n    }\n};","author":"Random Coder","submissionId":"1575085948"},[{"id":"873","similarity":0.8108108108108109,"totOverlap":60,"longestOverlap":15}]],"878":[{"id":"878","fileName":"1575085990.txt","sourceCode":"class Solution {\npublic:\nint maxSum(vector<int>& nums) {\n    int n = nums.size();\n    set<int> st ; \n    int ans = 0 ; \n    int count = 0 ; \n    for(auto &iter : nums){\n        if(st.find(iter) == st.end()){\n            if(iter > 0){\n                count++ ; \n                ans += iter ; \n            }\n        }\n        st.insert(iter) ; \n    }       \n    if(count == 0){\n        ans = *max_element(nums.begin() , nums.end()) ;    \n    }\n    // cout << (*min_element(nums.begin() , nums.end())) << endl;\n    return ans ; \n}\n};","author":"Abhishek12115047","submissionId":"1575085990"},[{"id":"126","similarity":0.7391304347826086,"totOverlap":51,"longestOverlap":7}]],"883":[{"id":"883","fileName":"1575086010.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>st;\n        int sum=0;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>0 && st.find(nums[i])==st.end()){\n                sum+=nums[i];\n                \n            }\n            st.insert(nums[i]);\n        }\n        if(st.find(0)==st.end() && sum==0){\n            return *(max_element)(nums.begin(),nums.end());\n        }\n        return sum;\n    }\n};","author":"crying_2003","submissionId":"1575086010"},[{"id":"883","similarity":0.7142857142857143,"totOverlap":60,"longestOverlap":14}]],"888":[{"id":"888","fileName":"1575086051.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        set<int>st;\n        for(int i=0;i<nums.size();i++){\n             if(nums[i]>=0)st.insert(nums[i]);\n        }\n        for(auto it:st){\n            ans+=it;\n        }\n        if(ans==0 && st.find(0)==st.end()){\n            int maxi=*max_element(nums.begin(),nums.end());\n            ans=maxi;\n        }\n        return ans;\n    }\n};","author":"viking","submissionId":"1575086051"},[{"id":"868","similarity":0.7411764705882353,"totOverlap":63,"longestOverlap":14}]],"895":[{"id":"895","fileName":"1575086111.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int mx = INT_MIN;\n        \n        for (int i: nums) {\n            if (i >= 0) st.insert(i);\n            else {\n                mx = max(mx, i);\n            }\n        }\n        \n        int sum = 0;\n        for (auto i: st) sum += i;\n        \n        if (st.empty()) return mx;\n        \n        return sum;\n    }\n};","author":"Aitijhya Modak","submissionId":"1575086111"},[{"id":"895","similarity":0.7241379310344828,"totOverlap":42,"longestOverlap":9}]],"903":[{"id":"903","fileName":"1575086153.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int maxi=INT_MIN;\n        for (auto it : nums) {\n            maxi=max(maxi,it);\n            if (it > 0)\n                s.insert(it);\n        }\n        int ans = 0;\n        for (auto it : s)\n            ans += it;\n        if(ans==0) return maxi;\n        return ans;\n    }\n};","author":"Romit Sovakar","submissionId":"1575086153"},[{"id":"595","similarity":0.875,"totOverlap":49,"longestOverlap":12}]],"910":[{"id":"910","fileName":"1575086190.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n     int sum=0;\n        set<int> se;\n        for(auto it: nums){\n            if(it>0){\n                se.insert(it);\n            }\n        }\n        if(se.size()==0){\n            sort(nums.begin(),nums.end(),greater<int>());\n            return nums[0];\n        }\n        for(auto it: se){\n            sum+=it;\n        }\n        return sum;\n    \n    }\n};","author":"Shashank Shekhar","submissionId":"1575086190"},[{"id":"910","similarity":0.7647058823529411,"totOverlap":52,"longestOverlap":10}]],"915":[{"id":"915","fileName":"1575086258.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int sum = 0 ;\n\n        for(auto i : nums){\n            st.insert(i);\n        }\n        for(auto i : st){\n            sum += max(0 , i);\n        }\n\n        if(sum > 0){\n            return sum;\n        }\n\n        int ans = -101;\n        for(auto i : st){\n            ans = max(ans , i);\n        }\n\n        return ans;\n    }\n};","author":"Anshul Sharma","submissionId":"1575086258"},[{"id":"915","similarity":0.7230769230769231,"totOverlap":47,"longestOverlap":12}]],"923":[{"id":"923","fileName":"1575086289.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int n=nums.size();\n        for(int j=0; j<n; j++){\n            if(nums[j]>=0)s.insert(nums[j]);\n        }\n        if(s.size()==0)return *(max_element(nums.begin(),nums.end()));\n        else{\n            int sum=0;\n            for(auto it:s)sum+=it;\n            return sum;\n        }\n        return 0;\n    }\n};","author":"AJ148","submissionId":"1575086289"},[{"id":"1177","similarity":0.7529411764705882,"totOverlap":64,"longestOverlap":16},{"id":"367","similarity":0.7341772151898734,"totOverlap":58,"longestOverlap":13}]],"924":[{"id":"924","fileName":"1575086292.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0, cnt = 0, maxNum = INT_MIN;\n        unordered_set<int> st;\n        \n        for (int num: nums) {\n            maxNum = max(maxNum, num);\n            \n            if (num <= 0) {\n                continue;\n            }\n\n            cnt++;\n\n            if (st.find(num) == st.end()) {\n                sum += num;\n                st.insert(num);\n            }\n        }\n\n        if (cnt == 0) return maxNum;\n\n        return sum;\n    }\n};","author":"akms","submissionId":"1575086292"},[{"id":"449","similarity":0.7727272727272727,"totOverlap":51,"longestOverlap":8}]],"926":[{"id":"926","fileName":"1575086332.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n           int sum=0;\n           int maxele=INT_MIN;\n        unordered_map<int,int>mpp;\n        for(auto it:nums){\n            if(it>=0  && mpp.find(it)==mpp.end()){sum+=it;mpp[it]++;}\n            maxele=max(maxele,it);\n        }\n\n        if(maxele<0){return maxele;}\n        return sum;\n    }\n};","author":"chennakeshava_ck","submissionId":"1575086332"},[{"id":"926","similarity":0.7258064516129032,"totOverlap":45,"longestOverlap":9}]],"928":[{"id":"928","fileName":"1575086338.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        unordered_map<int,int> map;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>0 && map.find(nums[i])==map.end() ){\n                map[nums[i]]++;\n                ans+=nums[i];\n            }\n        }\n        if(ans==0){\n            ans=INT_MIN;\n            for(int i=0;i<nums.size();i++){\n                ans=max(ans,nums[i]);\n            }\n        }\n        return ans;\n    }\n};","author":"Akshit_Nagar2","submissionId":"1575086338"},[{"id":"928","similarity":0.71875,"totOverlap":69,"longestOverlap":11}]],"929":[{"id":"929","fileName":"1575086339.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        unordered_set<int> mySet;\n\n        for(auto &num : nums) {\n            if(num <= 0 || mySet.count(num)) continue;\n\n            mySet.insert(num);\n            ans += num;\n        }\n\n        if(ans == 0) {\n            ans = INT_MIN;\n            for(auto i : nums) {\n                ans = max(ans, i);\n            }\n        }\n\n        return ans;\n    }\n};","author":"zxxxxy1998","submissionId":"1575086339"},[{"id":"597","similarity":0.746031746031746,"totOverlap":47,"longestOverlap":10}]],"936":[{"id":"936","fileName":"1575086394.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        bool flag=false;\n        for(int i=0;i<nums.size();++i){\n            if(nums[i]>=0) {\n                flag=true;\n                break;\n            }\n        }\n\n        if(flag==false){\n            sort(nums.begin(),nums.end());\n            return nums[nums.size()-1];\n        }\n        \n        for(auto it:nums) st.insert(it);\n        int sum=0;\n        for(auto it:st) {\n          if(it>=0)   sum+=it;\n        }\n        return sum;\n    }\n};","author":"ASAYUSH35","submissionId":"1575086394"},[{"id":"199","similarity":0.7058823529411765,"totOverlap":60,"longestOverlap":11}]],"937":[{"id":"937","fileName":"1575086408.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        for (int n : nums) {\n            if (n > 0) st.insert(n);\n        }\n        int ans = 0;\n        if (st.size() == 0) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        for (int i : st) {\n            ans += i;\n        }\n        return ans;\n    }\n};","author":"pp2925","submissionId":"1575086408"},[{"id":"625","similarity":0.8070175438596491,"totOverlap":46,"longestOverlap":14}]],"938":[{"id":"938","fileName":"1575086417.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int maxi=INT_MIN;\n        for(int x: nums) {\n            if(x>=0) {\n                s.insert(x);\n            }\n            else {\n                maxi=max(maxi, x);\n            }\n        }\n        if(s.size()==0) {\n            return maxi;\n        }\n        int ans=0;\n        for(auto it=s.begin(); it!=s.end(); it++){\n            ans+=(*it);\n        }\n        return ans;\n    }\n};","author":"Nipun","submissionId":"1575086417"},[{"id":"491","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":19}]],"941":[{"id":"941","fileName":"1575086429.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> rem;\n        for(int i=0;i<n;i++)\n        {\n            if(nums[i] > 0) rem.push_back(nums[i]);\n        }\n        if(rem.empty()) return *max_element(nums.begin(), nums.end());\n        set<int> set(rem.begin(), rem.end());\n        int total = 0;\n        for(auto st : set) total += st;\n        return total;\n    }\n};","author":"Mohit Budhlakoti","submissionId":"1575086429"},[{"id":"367","similarity":0.7875,"totOverlap":63,"longestOverlap":23}]],"944":[{"id":"944","fileName":"1575086466.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>st;\n        int res = 0;\n        for(auto e:nums){\n            if(e <= 0)continue;\n            if(st.find(e) == st.end()){\n                res += e;\n                st.insert(e);\n            }\n        }\n        if(res == 0){\n            res = INT_MIN;\n            for(auto e:nums){\n                res = max(e,res);\n            }\n        }\n        return res;\n    }\n};","author":"Shalini","submissionId":"1575086466"},[{"id":"597","similarity":0.8181818181818182,"totOverlap":54,"longestOverlap":11}]],"946":[{"id":"946","fileName":"1575086468.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(auto itr:nums)\n        {\n            st.insert(itr);\n        }\n        int s=0;\n        for(auto itr: st)\n        {\n            if(itr>0)\n                s+=itr;\n        }\n        if(s>0) return s;\n        else return *max_element(nums.begin(), nums.end());\n    }\n};","author":"Ayush Pratap Singh","submissionId":"1575086468"},[{"id":"531","similarity":0.8867924528301887,"totOverlap":47,"longestOverlap":11}]],"947":[{"id":"947","fileName":"1575086499.txt","sourceCode":"class Solution {\n  public:\n      int maxSum(vector<int>& nums) {\n          set<int> st;\n          bool b1 = false;\n          for (auto& it : nums) {\n              if(it >= 0) { st.insert(it); b1 = true; }\n          }\n          if(b1) {\n              int ans = 0;\n              for (int it : st) ans += it;\n              return ans;\n          }\n          return *max_element(nums.begin(), nums.end());\n      }\n  };","author":"Khushal Midha","submissionId":"1575086499"},[{"id":"667","similarity":0.7017543859649122,"totOverlap":40,"longestOverlap":8}]],"949":[{"id":"949","fileName":"1575086505.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(auto it : nums){\n            if(it >= 0){\n                st.insert(it);\n            }\n        }\n        if(st.empty()){\n            sort(nums.begin(),nums.end(),greater<int>());\n            return nums[0];\n        }\n        int ans = 0;\n        for(auto it : st){\n            ans += it;\n        }\n        return ans;\n    }\n};","author":"adi_097","submissionId":"1575086505"},[{"id":"66","similarity":0.8461538461538461,"totOverlap":55,"longestOverlap":17}]],"953":[{"id":"953","fileName":"1575086541.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int mx = INT_MIN;\n        for(auto p : nums){\n            if(p >= 0) st.insert(p);\n            else mx = max(mx , p);\n        }\n        int ans = 0;\n        for(auto p : st){\n            if(p >= 0) ans += p;\n        }\n        if(!st.size()) return mx;\n        return ans;\n    }\n};","author":"Raj Singh","submissionId":"1575086541"},[{"id":"251","similarity":0.7962962962962963,"totOverlap":43,"longestOverlap":12}]],"956":[{"id":"956","fileName":"1575086545.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        sort(a.begin(), a.end());\n        a.erase(unique(a.begin(), a.end()), a.end());\n        if(a.back() <= 0) return a.back();\n        int ans = 0;\n        for(auto u: a) {\n            if(u <= 0) continue;\n            ans += u;\n        }\n        return ans;\n    }\n};","author":"abcd","submissionId":"1575086545"},[{"id":"1601","similarity":0.7941176470588235,"totOverlap":54,"longestOverlap":18},{"id":"1601","similarity":0.7605633802816901,"totOverlap":54,"longestOverlap":19},{"id":"1601","similarity":0.7066666666666667,"totOverlap":53,"longestOverlap":11},{"id":"1601","similarity":0.7162162162162162,"totOverlap":53,"longestOverlap":21},{"id":"1383","similarity":0.7878787878787878,"totOverlap":52,"longestOverlap":18},{"id":"1601","similarity":0.7428571428571429,"totOverlap":52,"longestOverlap":20},{"id":"1601","similarity":0.7183098591549296,"totOverlap":51,"longestOverlap":15},{"id":"1601","similarity":0.7246376811594203,"totOverlap":50,"longestOverlap":11},{"id":"1601","similarity":0.7575757575757576,"totOverlap":50,"longestOverlap":19},{"id":"715","similarity":0.7205882352941176,"totOverlap":49,"longestOverlap":17},{"id":"1686","similarity":0.7313432835820896,"totOverlap":49,"longestOverlap":11},{"id":"1611","similarity":0.8135593220338984,"totOverlap":48,"longestOverlap":15},{"id":"956","similarity":0.8,"totOverlap":48,"longestOverlap":15},{"id":"1885","similarity":0.8421052631578947,"totOverlap":48,"longestOverlap":22},{"id":"672","similarity":0.7121212121212122,"totOverlap":47,"longestOverlap":14},{"id":"672","similarity":0.7014925373134329,"totOverlap":47,"longestOverlap":14},{"id":"1601","similarity":0.7014925373134329,"totOverlap":47,"longestOverlap":11},{"id":"593","similarity":0.7666666666666667,"totOverlap":46,"longestOverlap":11},{"id":"265","similarity":0.7666666666666667,"totOverlap":46,"longestOverlap":12}]],"964":[{"id":"964","fileName":"1575086639.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> uniqueElements(nums.begin(), nums.end());\n        int total = 0;\n        int maxElement = INT_MIN;\n        for(int num : uniqueElements){\n            if(num > 0){\n                total += num;    \n            }\n            if(num > maxElement){\n                maxElement = num;\n            }\n        }\n        if(total == 0){\n            return maxElement;\n        }\n        else {\n            return total;\n        }\n    }\n};","author":"FabioSungurlian","submissionId":"1575086639"},[{"id":"140","similarity":0.7636363636363637,"totOverlap":42,"longestOverlap":19}]],"971":[{"id":"971","fileName":"1575086685.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>st;\n        int mi = INT_MIN;\n        int res = 0;\n        for(auto el : nums){\n            if(el<=0){\n                mi = max(mi, el);\n            }\n            else{\n                if(st.find(el)==st.end()){\n                    res += el;\n                    st.insert(el);\n                }\n            }\n        }\n\n        if(st.size()==0) return mi;\n\n        return res;\n    }\n};","author":"dhavalk439","submissionId":"1575086685"},[{"id":"1852","similarity":0.7222222222222222,"totOverlap":52,"longestOverlap":17},{"id":"971","similarity":0.7285714285714285,"totOverlap":51,"longestOverlap":15},{"id":"446","similarity":0.7205882352941176,"totOverlap":49,"longestOverlap":12}]],"984":[{"id":"984","fileName":"1575086734.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        if(nums.back()<0){\n            return (nums.back());\n        }\n        set<int> st;\n        for(auto i:nums){\n            if(i<0) continue;\n            st.insert(i);\n        }\n        int ans=0;\n        for(auto i:st) ans+=i;\n        return ans;\n    }\n};","author":"sutanjoypal","submissionId":"1575086734"},[{"id":"673","similarity":0.8,"totOverlap":52,"longestOverlap":9}]],"987":[{"id":"987","fileName":"1575086775.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(auto i: nums)  if(i >= 0)  st.insert(i);\n        int ans = 0;\n        for(auto i: st)   ans += i;\n        if(st.size() == 0){\n            ans = INT_MIN;\n           for(auto i: nums)   ans = max(ans, i);\n        }\n        return ans;\n    }\n};","author":"Srdjr000","submissionId":"1575086775"},[{"id":"203","similarity":0.9508196721311475,"totOverlap":58,"longestOverlap":29}]],"990":[{"id":"990","fileName":"1575086833.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& input) {\n        unordered_set<int> values;\n        int min_value = INT_MIN;\n        int answer = 0;\n        for ( int i: input) {\n            if ( i > 0 ) {\n                if ( not values.contains(i) ) {\n                    values.insert(i);\n                    answer += i;\n                }\n            } else {\n                min_value = max(min_value, i);\n            }\n        }\n        \n        return values.empty() ? min_value : answer;\n    }\n};","author":"DepressedDumbass","submissionId":"1575086833"},[{"id":"1678","similarity":0.8333333333333334,"totOverlap":55,"longestOverlap":19},{"id":"1678","similarity":0.746268656716418,"totOverlap":50,"longestOverlap":15},{"id":"446","similarity":0.7121212121212122,"totOverlap":47,"longestOverlap":12}]],"994":[{"id":"994","fileName":"1575086871.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        \n        set<int> s;\n        int mx=INT_MIN;\n        for(int num: nums) {\n            if(num>0) s.insert(num);\n            mx = max(mx, num);\n        }\n        \n        int ans=0;\n        \n        for(int num:s){\n            ans+= num;\n        }\n        \n        if(s.size() ==0) return mx;\n        return ans;\n        \n    }\n};","author":"QT3DbyBL5R","submissionId":"1575086871"},[{"id":"368","similarity":0.9090909090909091,"totOverlap":50,"longestOverlap":24}]],"997":[{"id":"997","fileName":"1575086878.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> Set;\n        bool flag = false;\n        for (int x: nums) if (x > 0) {\nSet.insert(x);\n            \n            flag = true;\n        }\n        int ans =0 ;\n        for (int x: Set) ans += x;\n        if (flag) return ans;\n        return *max_element(nums.begin(), nums.end());\n    }\n};","author":"Shannon Lis","submissionId":"1575086878"},[{"id":"67","similarity":0.7333333333333333,"totOverlap":44,"longestOverlap":11}]],"1001":[{"id":"1001","fileName":"1575086926.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int>m;\n        int ans=0;\n        int cnt=0;\n        for(auto it:nums){\n            if(it>=0&&m.find(it)==m.end())\n            {\n                cnt++;\n                ans+=it;\n            }\n            m[it]++;\n        }\n        if(cnt)\n        return ans;\n        return *max_element(nums.begin(),nums.end());\n    }\n};","author":"kraphe001","submissionId":"1575086926"},[{"id":"663","similarity":0.8070175438596491,"totOverlap":46,"longestOverlap":11}]],"1006":[{"id":"1006","fileName":"1575086951.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mv = INT_MIN;\n        unordered_set<int> st;\n        for(int val : nums) {\n            mv = max(mv, val);\n            if(val > 0) { st.insert(val); }\n        }\n        int sum = 0;\n        for(int p : st) {\n            sum += p;\n        }\n        // cout << st.empty() << endl << sum << endl;\n        return st.empty() ? mv : sum;\n    }\n};","author":"ArthurCx","submissionId":"1575086951"},[{"id":"560","similarity":0.7333333333333333,"totOverlap":44,"longestOverlap":14}]],"1010":[{"id":"1010","fileName":"1575087014.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        for(int x : nums){\n            if(x>0) s.insert(x);\n        }\n        int ans =0;\n        for(auto x : s){\n            ans += x;\n        }\n        if(s.size()== 0) return *max_element(nums.begin(), nums.end());\n        else return ans;\n    }\n};","author":"Prince Chaudhary","submissionId":"1575087014"},[{"id":"612","similarity":0.8113207547169812,"totOverlap":43,"longestOverlap":15}]],"1015":[{"id":"1015","fileName":"1575087069.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        for (auto i : nums) {\n            st.insert(i);\n        }\n        int ans = 0;\n        for (auto i : st) {\n            ans += i > 0 ? i : 0;\n        }\n        if (ans == 0) {\n            ans += *max_element(nums.begin(), nums.end());\n        }\n        return ans;\n    }\n};","author":"SKCPP","submissionId":"1575087069"},[{"id":"673","similarity":0.7258064516129032,"totOverlap":45,"longestOverlap":10}]],"1017":[{"id":"1017","fileName":"1575087050.txt","sourceCode":"class Solution {\npublic:\n    \n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        \n        set<int> set;\n        int negative = INT_MIN;\n        for(int i=0;i<n;i++)\n        {\n            if(nums[i]>=0)\n            {\n                set.insert(nums[i]);\n            }\n            else\n            {\n                negative=max(negative,nums[i]);\n            }\n        }\n        \n        if(set.size()>0)\n        {\n            long long ans = 0;\n            for(auto it: set)\n            {\n                ans = ans + 1LL*it;\n            }\n            return ans;\n        }\n        \n        return negative;\n    }\n};","author":"onkarjondhale","submissionId":"1575087050"},[{"id":"802","similarity":0.7272727272727273,"totOverlap":56,"longestOverlap":9}]],"1018":[{"id":"1018","fileName":"1575087084.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(int num:nums)\n            {\n                if(num>=0)\n                st.insert(num);\n                \n            }\n        if(st.size()==0)\n        {\n            sort(nums.begin(),nums.end());\n            return nums[nums.size()-1];\n        }\n        int sum=0;\n        for(auto it:st)\n            {\n                sum+=it;\n            }\n        \n        return sum;\n        \n    }\n};","author":"shubcoder","submissionId":"1575087084"},[{"id":"598","similarity":0.803030303030303,"totOverlap":53,"longestOverlap":15}]],"1027":[{"id":"1027","fileName":"1575087133.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        int ans = 0, neg = INT_MIN;\n        for(int num: nums) {\n            if(num >= 0) s.insert(num);\n            else neg = max(neg, num);\n        }\n\n        if(s.size() == 0) return neg;\n\n        for(int num: s) ans += num;\n        return ans;\n    }\n};","author":"curious_04","submissionId":"1575087133"},[{"id":"577","similarity":0.8363636363636363,"totOverlap":46,"longestOverlap":11}]],"1034":[{"id":"1034","fileName":"1575087205.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> a;\n        int maximal=nums[0],sum=0;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>=0&&a.find(nums[i])==a.end())\n            {\n                sum+=nums[i];\n                a.insert(nums[i]);\n            }\n            else{\n                maximal=max(maximal,nums[i]);\n            }\n        }\n        if(a.size()==0){\n            return maximal;\n        }\n        else\n        {\n            return sum;\n        }\n    }\n};","author":"cvnpko","submissionId":"1575087205"},[{"id":"685","similarity":0.7176470588235294,"totOverlap":61,"longestOverlap":13}]],"1040":[{"id":"1040","fileName":"1575087226.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n\n        int sum1 = *max_element(nums.begin(), nums.end());\n\n        int sum=0;\n\n        bool flag=false;\n\n        for(int i: nums)\n            {\n                if(i>=0)\n                {\n                    flag=true;\n                    if(st.find(i)==st.end())\n                    {\n                        sum+=i;\n                        st.insert(i);\n                    }\n                }\n            }\n\n        return (flag? sum : sum1);\n    }\n};","author":"Samarth Patel","submissionId":"1575087226"},[{"id":"524","similarity":0.782608695652174,"totOverlap":54,"longestOverlap":10}]],"1041":[{"id":"1041","fileName":"1575087280.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> seen;\n        int sum = 0;\n        int maxElem = nums[0];\n        bool hasPositive = false;\n        \n        for (int num : nums) {\n            maxElem = max(maxElem, num);\n            if (num > 0 && seen.find(num) == seen.end()) {\n                seen.insert(num);\n                sum += num;\n                hasPositive = true;\n            }\n        }\n        \n        return hasPositive ? sum : maxElem;\n    }\n};\n","author":"Sarban Sah","submissionId":"1575087280"},[{"id":"1477","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":10},{"id":"394","similarity":0.7192982456140351,"totOverlap":41,"longestOverlap":11}]],"1049":[{"id":"1049","fileName":"1575087347.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> seen;\n\n        int sum = 0, count = 0;\n        for(auto x:nums) {\n            if(x < 0 || seen.find(x) != seen.end()) continue;\n\n            seen.insert(x);\n            sum += x;\n            count += 1;\n        }\n\n        return (count > 0 ? sum : *max_element(nums.begin(), nums.end()));\n    }\n};","author":"Arjun Grover","submissionId":"1575087347"},[{"id":"663","similarity":0.7166666666666667,"totOverlap":43,"longestOverlap":9}]],"1053":[{"id":"1053","fileName":"1575087381.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        bool flag=false;\n        for(int i=0;i<n;i++){\n            if(nums[i]>=0) flag=true;\n        }\n        if(!flag) return *max_element(nums.begin(),nums.end());\n        int sum=0;\n        set<int> s;\n        for(int i=0;i<n;i++){\n            if(nums[i]<0 || s.count(nums[i])) continue;\n            sum+=nums[i];\n            s.insert(nums[i]);\n        }\n        return sum;\n    }\n};","author":"Devansh Singh","submissionId":"1575087381"},[{"id":"1839","similarity":0.7380952380952381,"totOverlap":62,"longestOverlap":12},{"id":"450","similarity":0.7721518987341772,"totOverlap":61,"longestOverlap":7}]],"1059":[{"id":"1059","fileName":"1575087431.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int ans=0,prev=-1;\n        if(nums.back()<0) return nums.back();\n        for(int i:nums){\n            if(i<=0) continue;\n            if(i==prev) continue;\n            prev=i;\n            ans+=i;\n        }\n        return ans;\n    }\n};","author":"David_264","submissionId":"1575087431"},[{"id":"1059","similarity":0.8461538461538461,"totOverlap":44,"longestOverlap":11}]],"1081":[{"id":"1081","fileName":"1575087624.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int fans = *max_element(nums.begin(),nums.end());\n        int ans = 0;\n        set<int>s;\n        for(auto e:nums){\n            if(s.find(e)==s.end())\n            if(e>=0) ans+=e;\n            s.insert(e);\n        }\n        if(fans<=0) return fans;\n        return ans;\n    }\n};","author":"user1067tL","submissionId":"1575087624"},[{"id":"730","similarity":0.8253968253968254,"totOverlap":52,"longestOverlap":7}]],"1082":[{"id":"1082","fileName":"1575087659.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        unordered_set<int> a(nums.begin(),nums.end());\n        int sum = 0;\n        for(auto &i : a){\n            if(i > 0) sum += i;\n        }\n\n        int k = 0;\n        int sum2 = -100;\n        for(auto &j : a){\n            if(j <= 0){\n                k++;\n                sum2 = max(sum2,j);\n            }\n        }\n\n        if(k == a.size()) return sum2;\n        return sum;\n        \n    }\n};","author":"Ronak Gadhiya","submissionId":"1575087659"},[{"id":"107","similarity":0.7361111111111112,"totOverlap":53,"longestOverlap":15}]],"1084":[{"id":"1084","fileName":"1575087699.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        nums.resize(distance(nums.begin(), unique(nums.begin(), nums.end())));\n        int sum=0;\n        if(nums.back()<0){\n            sum+=nums.back();\n        }\n        else{\n            for(auto i:nums){\n                if(i>0)sum+=i;\n            }\n        }\n        return sum;\n    }\n};","author":"Krishna0211","submissionId":"1575087699"},[{"id":"1084","similarity":0.7183098591549296,"totOverlap":51,"longestOverlap":15}]],"1090":[{"id":"1090","fileName":"1575087772.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums)\n    {\n        int maxEle = *max_element(nums.begin(), nums.end());\n        unordered_set<int> numSet(nums.begin(), nums.end());\n\n        int sum = 0;\n        int count = 0;\n\n        for(auto& ele : numSet)\n        {\n            if(ele >= 0)        \n            {\n                sum += ele;\n                count++;\n            }\n        }\n\n        if(count == 0)\n            return maxEle;\n        \n        return sum;\n    }\n};\n\n/*\n\nDelete only dupes & -ve nums, then select the maximum sum subarray\n\nIf only -ve then return max element\n\n*/","author":"Oytrik Das","submissionId":"1575087772"},[{"id":"107","similarity":0.7619047619047619,"totOverlap":48,"longestOverlap":12}]],"1092":[{"id":"1092","fileName":"1575087779.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size(),ans=0,negs=0;\n        unordered_set<int>st;\n        for(auto x:nums){\n            if(x>=0)st.insert(x);\n            if(x<0)negs++;\n        }\n        for(auto x:st)ans+=x;\n        if(negs==n)return *max_element(nums.begin(),nums.end());\n        return ans;\n    }\n};","author":"Divyansh Saharan","submissionId":"1575087779"},[{"id":"423","similarity":0.7704918032786885,"totOverlap":47,"longestOverlap":8}]],"1096":[{"id":"1096","fileName":"1575087814.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for (auto it : nums) st.insert(it);\n        int sum = 0;\n        for (auto it : st) if (it > 0) sum += it;\n        sort(nums.begin(), nums.end());\n        if (nums.size() == 1) return nums[0];\n        bool allneg = true;\n        for (auto it : nums) {\n            if (it >= 0) allneg = false;\n        }\n        if (allneg) {\n            return nums.back();\n        }\n        return sum;\n    }\n};","author":"Abhinav Yaduvanshi","submissionId":"1575087814"},[{"id":"326","similarity":0.7627118644067796,"totOverlap":45,"longestOverlap":16}]],"1097":[{"id":"1097","fileName":"1575087829.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = *max_element(nums.begin(), nums.end());\n        int n = nums.size();\n        for (int i = 0;i < n;i ++) {\n            set<int> st;\n            for (int j = i;j < n;j ++) {\n                if (nums[j] >= 0) st.insert(nums[j]);\n            }\n            if (!st.empty()) ans = max(ans, accumulate(st.begin(), st.end(), 0));\n        }\n        return ans;\n    }\n};","author":"fast_turtle","submissionId":"1575087829"},[{"id":"888","similarity":0.7325581395348837,"totOverlap":63,"longestOverlap":7}]],"1105":[{"id":"1105","fileName":"1575087934.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        // set<int> s(nums.begin(), nums.end());\n        set<int> s1, s2;\n        for(int i:nums) if(i >= 0) s1.insert(i); else s2.insert(i);\n        if (s1.empty()) return *s2.rbegin();\n        int ans = 0, mx = INT_MIN, f = false;\n        for(int i:s1) ans += i;\n        return ans;\n    }\n};","author":"gtushar","submissionId":"1575087934"},[{"id":"455","similarity":0.7049180327868853,"totOverlap":43,"longestOverlap":13}]],"1107":[{"id":"1107","fileName":"1575087979.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int t = INT_MIN;\n        int ans = 0;\n        unordered_set<int> us;\n        for ( int x : nums ){\n            if ( x > 0 && us.find(x) == us.end()){\n                ans += x;\n                us.insert(x);\n            }\n            t = max(t , x);\n        }\n        if ( ans == 0 ){\n            return t;\n        }\n        return ans;\n    }\n};","author":"Nguyen Thanh","submissionId":"1575087979"},[{"id":"1534","similarity":0.8656716417910447,"totOverlap":58,"longestOverlap":15},{"id":"1107","similarity":0.84375,"totOverlap":54,"longestOverlap":14},{"id":"1107","similarity":0.8307692307692308,"totOverlap":54,"longestOverlap":12},{"id":"1534","similarity":0.7761194029850746,"totOverlap":52,"longestOverlap":9},{"id":"924","similarity":0.7727272727272727,"totOverlap":51,"longestOverlap":8},{"id":"773","similarity":0.78125,"totOverlap":50,"longestOverlap":10},{"id":"924","similarity":0.7538461538461538,"totOverlap":49,"longestOverlap":10}]],"1118":[{"id":"1118","fileName":"1575088043.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int ans=0;\n        sort(nums.begin(),nums.end());\n        if(nums[nums.size()-1]<0) return nums[nums.size()-1];\n        for(auto it:nums){\n            if(it>0 && st.find(it)==st.end()) {ans+=it;st.insert(it);}\n        }\n        return ans;\n    }\n};","author":"Dara_2001","submissionId":"1575088043"},[{"id":"1757","similarity":0.7792207792207793,"totOverlap":60,"longestOverlap":11},{"id":"1118","similarity":0.7534246575342466,"totOverlap":55,"longestOverlap":18},{"id":"803","similarity":0.7846153846153846,"totOverlap":51,"longestOverlap":11},{"id":"1633","similarity":0.7142857142857143,"totOverlap":50,"longestOverlap":15},{"id":"866","similarity":0.7575757575757576,"totOverlap":50,"longestOverlap":10},{"id":"818","similarity":0.7246376811594203,"totOverlap":50,"longestOverlap":13}]],"1119":[{"id":"1119","fileName":"1575088086.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> cnt(nums.begin(), nums.end());\n        int res = 0;\n        if (*cnt.rbegin() < 0) {\n            res += *cnt.rbegin();\n            return res;\n        }\n        for (int x : cnt) {\n            if (x > 0) {\n                res += x;\n            }\n        }\n        return res;\n    }\n};","author":"mingliang meng","submissionId":"1575088086"},[{"id":"672","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":14}]],"1123":[{"id":"1123","fileName":"1575088132.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        unordered_set<int> seen;\n        for(int i = 0; i < nums.size(); i++)\n        {\n            if(nums[i] > 0 && seen.find(nums[i]) == seen.end())\n                sum += nums[i];\n            seen.insert(nums[i]);\n        }\n        if(sum == 0)\n        {\n            sum = nums[0];\n            for(int i = 1; i < nums.size(); i++)\n                sum = max(sum, nums[i]);\n        }\n        return sum;\n    }\n};","author":"Dhananjay kumar","submissionId":"1575088132"},[{"id":"422","similarity":0.8902439024390244,"totOverlap":73,"longestOverlap":23}]],"1130":[{"id":"1130","fileName":"1575088161.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> a;\n        vector<int> b;\n        set<int> s;\n        for(int u : nums){\n            if(u > 0 && s.find(u) == s.end()){\n                a.push_back(u);\n                s.insert(u);\n            } else if(u <= 0){\n                b.push_back(u);\n            }\n        }\n        if(a.size()){\n            int s = 0;\n            for(int u : a) s += u;\n            return s;\n        }\n        sort(b.begin(), b.end());\n        return b.back();\n    }\n};","author":"Somya Singh","submissionId":"1575088161"},[{"id":"553","similarity":0.7125,"totOverlap":57,"longestOverlap":9}]],"1137":[{"id":"1137","fileName":"1575088263.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        \n        set<int> st;\n        \n        for(int val:nums){\n            st.insert(val);\n        }\n        \n        int sum = 0,cnt = 0;\n        for(auto val:st){\n            if(val >= 0){\n                sum += val;\n                cnt ++;\n            }\n        }\n        \n        if(cnt == 0)\n            sum += *(--st.end());\n        \n        return sum;\n    }\n};\n","author":"Harmandeep Singh","submissionId":"1575088263"},[{"id":"1137","similarity":0.7321428571428571,"totOverlap":41,"longestOverlap":10}]],"1141":[{"id":"1141","fileName":"1575088366.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n      set<int>st;\n        int c=0;\n        for(int i=0;i<nums.size();i++)\n            if(nums[i]>0)st.insert(nums[i]);\n        else c++;\n\n        int sum =0;\n        if(c==nums.size()){\n            sort(nums.begin(),nums.end());\n            return nums[nums.size()-1];\n        }\n        \n\n        for(auto num:st){\n            sum+=num;\n        }\n\n        \n\n        return sum;\n    }\n};","author":"Shubham Navik","submissionId":"1575088366"},[{"id":"199","similarity":0.7912087912087912,"totOverlap":72,"longestOverlap":18}]],"1143":[{"id":"1143","fileName":"1575088384.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        int maxx = *max_element(nums.begin(), nums.end());\n\n        if(maxx <= 0) return maxx;\n\n        set<int> st;\n        for(int i: nums)\n            if(i > 0)\n                st.insert(i);\n\n        int ans = 0;\n        for(int i: st) ans += i;\n\n        return ans;\n        \n    }\n};","author":"Arjun S","submissionId":"1575088384"},[{"id":"749","similarity":0.875,"totOverlap":56,"longestOverlap":15}]],"1155":[{"id":"1155","fileName":"1575088556.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        int ans=0;\n        set<int> st;\n        \n        for(int i=0;i<n;i++){\n            if(st.find(nums[i])==st.end() && nums[i]>=0){\n                ans+=nums[i];\n                st.insert(nums[i]);\n            }\n            \n            \n        }\n        if(st.size()==0){\n            int fans=-150;\n            for(int i=0;i<n;i++){\n                fans=max(fans,nums[i]);\n                \n            }\n            return fans;\n            \n        }\n        else{\n        return ans;}\n    }\n};","author":"AbhishekMondal23","submissionId":"1575088556"},[{"id":"714","similarity":0.7209302325581395,"totOverlap":62,"longestOverlap":7}]],"1163":[{"id":"1163","fileName":"1575088602.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n         int mx = -102;\n        long long sum = 0;\n        unordered_set<int> s;\n        for (int x : nums) {\n            mx = max(mx, x);\n            if (x > 0 && !s.count(x)) {\n                sum += x;\n                s.insert(x);\n            }\n        }\n        return s.empty() ? mx : sum;\n    }\n};","author":"Shrey Bansal","submissionId":"1575088602"},[{"id":"449","similarity":0.7540983606557377,"totOverlap":46,"longestOverlap":9}]],"1164":[{"id":"1164","fileName":"1575088644.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> ss;\n        for(auto x: nums) ss.insert(x);\n        int ans=0, has_taken=0;\n        for(auto x: ss) {\n            if(x>=0) ans+=x, has_taken=1;\n        }\n        if(has_taken==0){\n            ans += *ss.rbegin();\n        }\n        return ans;\n        \n        \n        \n        \n    }\n};","author":"yash gupta","submissionId":"1575088644"},[{"id":"1289","similarity":0.8461538461538461,"totOverlap":44,"longestOverlap":19},{"id":"1164","similarity":0.7636363636363637,"totOverlap":42,"longestOverlap":8}]],"1167":[{"id":"1167","fileName":"1575088696.txt","sourceCode":"#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int max_negative = INT_MIN;\n        for (auto num : nums) {\n            if (num >= 0) {\n                s.insert(num);\n            } else {\n                max_negative = max(max_negative, num);\n            }\n        }\n        return s.size() == 0 ? max_negative : accumulate(s.begin(), s.end(), 0);\n    }\n};","author":"Hieu","submissionId":"1575088696"},[{"id":"491","similarity":0.7142857142857143,"totOverlap":40,"longestOverlap":8}]],"1168":[{"id":"1168","fileName":"1575088653.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum  = 0;\n        set<int> st;\n        for(auto it:nums){\n            if(it>0 && st.find(it)==st.end())\n            {\n                sum += it;\n                st.insert(it);\n            }\n        }\n        if(st.empty()){\n            return *max_element(nums.begin(),nums.end());\n        }\n        return sum;\n    }\n};","author":"tanmayshingde8","submissionId":"1575088653"},[{"id":"647","similarity":0.7391304347826086,"totOverlap":51,"longestOverlap":13}]],"1169":[{"id":"1169","fileName":"1575088673.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        for(auto &it:nums){\n            st.insert(it);\n        }\n        int mx = *max_element(nums.begin(),nums.end());\n        int sm = 0;\n        for(auto &it:st) {\n          if(it>=0)  sm+=it;\n        }\n        return (sm>0) ? sm : mx;\n    }\n};","author":"Shivam Dubey","submissionId":"1575088673"},[{"id":"261","similarity":0.7538461538461538,"totOverlap":49,"longestOverlap":10}]],"1174":[{"id":"1174","fileName":"1575088761.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> S(nums.begin(), nums.end());\n        int ma = *max_element(nums.begin(), nums.end());\n        if(ma <= 0) return ma;\n        int res = 0;\n        for(int x: S) {\n            res += x > 0 ? x : 0;\n        }\n        return res;\n    }\n};","author":"Marvin Liu","submissionId":"1575088761"},[{"id":"1452","similarity":0.9180327868852459,"totOverlap":56,"longestOverlap":28},{"id":"461","similarity":0.7575757575757576,"totOverlap":50,"longestOverlap":14}]],"1177":[{"id":"1177","fileName":"1575088765.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;int n=nums.size();\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>0) s.insert(nums[i]);\n        }\n        if(s.size()==0){\n            s.insert(*max_element(nums.begin(),nums.end()));\n        }\n        int ans=0;\n        for(auto& elem:s) ans+=elem;\n        return ans;\n    }\n};","author":"rudra_pathak","submissionId":"1575088765"},[{"id":"923","similarity":0.7529411764705882,"totOverlap":64,"longestOverlap":16}]],"1191":[{"id":"1191","fileName":"1575088909.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<bool> seen(101);\n        int ans = 0;\n        int numsMax = nums[0];\n        for (int num : nums) {\n            if (num > 0 && !seen[num]) {\n                seen[num] = true;\n                ans += num;\n            }\n            numsMax = max(numsMax, num);\n        }\n        if (ans == 0) {\n            return numsMax;\n        }\n        return ans;\n    }\n};","author":"xorcutor","submissionId":"1575088909"},[{"id":"727","similarity":0.7058823529411765,"totOverlap":48,"longestOverlap":11}]],"1192":[{"id":"1192","fileName":"1575088985.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        bool all_neg = true;\n        for(int x : nums) {\n            all_neg &= (x < 0);\n        }\n        if (all_neg) return *max_element(nums.begin(),nums.end());\n        set<int> S;\n        for(int x : nums) {\n            if (x > 0) S.insert(x);\n        }\n        int ret=0;\n        for(int x : S) {\n            ret += x;\n        }\n        return ret;\n    }\n};","author":"Balakrishnan Varadarajan","submissionId":"1575088985"},[{"id":"28","similarity":0.7941176470588235,"totOverlap":54,"longestOverlap":17}]],"1193":[{"id":"1193","fileName":"1575088927.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> temp;\n        int sum = 0;\n        \n        for (int num : nums) {\n            if (temp.find(num) == temp.end() && num > 0) {\n                sum += num;\n                temp.insert(num);\n            }\n        }\n        if (temp.empty()) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        return sum;\n    }\n};","author":"Abhuday","submissionId":"1575088927"},[{"id":"1219","similarity":0.8461538461538461,"totOverlap":55,"longestOverlap":23},{"id":"1193","similarity":0.7285714285714285,"totOverlap":51,"longestOverlap":12},{"id":"1168","similarity":0.7611940298507462,"totOverlap":51,"longestOverlap":16}]],"1194":[{"id":"1194","fileName":"1575088971.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>s;\n        sort(nums.begin(), nums.end());\n        int sum=0;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i] > 0){\n                s.insert(nums[i]);\n            }\n        }\n        for(auto x: s){\n            sum += x;\n        }\n        if(!s.size()){\n            return nums.back();\n        }\n        return sum;\n    }\n};","author":"Srini","submissionId":"1575088971"},[{"id":"127","similarity":0.7761194029850746,"totOverlap":52,"longestOverlap":10}]],"1198":[{"id":"1198","fileName":"1575089016.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n         set<int>s;\n        int maxi=INT_MIN;\n        for(auto e:nums){\n             if(e>0)s.insert(e);\n            maxi=max(e,maxi);\n        }\n          if(s.size()==0) return maxi;\n         int ans=0;\n         for(auto e:s)ans+=e;\n         return ans;\n    }\n};","author":"Ravikant Yadav","submissionId":"1575089016"},[{"id":"1805","similarity":0.7058823529411765,"totOverlap":48,"longestOverlap":12},{"id":"1198","similarity":0.8867924528301887,"totOverlap":47,"longestOverlap":10},{"id":"357","similarity":0.8301886792452831,"totOverlap":44,"longestOverlap":19}]],"1201":[{"id":"1201","fileName":"1575089073.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int result = 0;\n        unordered_set<int> s;\n        for (int num : nums) {\n            if (num > 0 && s.find(num) == s.end()) {\n                s.insert(num);\n                result += num;\n            }\n        }\n        if (!result) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        return result;\n    }\n};","author":"Jacob Wu","submissionId":"1575089073"},[{"id":"388","similarity":0.7413793103448276,"totOverlap":43,"longestOverlap":12}]],"1203":[{"id":"1203","fileName":"1575089080.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int max_num = INT_MIN;\n        set<int> s;\n        for (int i = 0; i < nums.size(); i++) {\n            max_num = max(max_num, nums[i]);\n            if (nums[i] > 0) {\n                s.insert(nums[i]);\n            }\n        }\n        if (max_num <= 0) {\n            return max_num;\n        }\n        int res = 0;\n        for (int x : s) {\n            res += x;\n        }\n        return res;\n    }\n};","author":"kunal","submissionId":"1575089080"},[{"id":"1203","similarity":0.703125,"totOverlap":45,"longestOverlap":15}]],"1204":[{"id":"1204","fileName":"1575089133.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st(nums.begin(),nums.end());\n        \n        int summ=0;\n        bool flag=false;\n        for(int i:st){\n            if(i>0) {\n                summ+=i;\n                flag=true;\n            }\n        }\n\n        if(!flag){\n            return *max_element(nums.begin(),nums.end());\n        }\n        return summ;\n    }\n};","author":"satyatej","submissionId":"1575089133"},[{"id":"411","similarity":0.8571428571428571,"totOverlap":54,"longestOverlap":16}]],"1206":[{"id":"1206","fileName":"1575089165.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        vector<int>arr;\n        map<int,bool>mpp;\n        for(int i=0;i<n;i++){\n            if(nums[i]>=0 && mpp.find(nums[i])==mpp.end()){\n                arr.push_back(nums[i]);\n                mpp[nums[i]]=true;\n            }\n        }\n        int ans=accumulate(arr.begin(),arr.end(),0);\n        if(arr.empty()){\n            return *max_element(nums.begin(),nums.end());\n        }\n        return ans;\n    }\n};","author":"Devansh Shankhdhar","submissionId":"1575089165"},[{"id":"1552","similarity":0.7526881720430108,"totOverlap":70,"longestOverlap":13},{"id":"450","similarity":0.8,"totOverlap":64,"longestOverlap":11}]],"1214":[{"id":"1214","fileName":"1575089223.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = 0;\n        set<int> s;\n        for(auto i:nums){\n            if(i>0 && s.count(i) == 0){\n                res += i;\n                s.insert(i);\n            }\n        }\n        // need non-empty\n        if(res == 0){\n            return *max_element(nums.begin(), nums.end());\n        }\n        return res;\n    }\n};","author":"william6715","submissionId":"1575089223"},[{"id":"513","similarity":0.9454545454545454,"totOverlap":52,"longestOverlap":14}]],"1219":[{"id":"1219","fileName":"1575089321.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        //sort(nums.begin(), nums.end());\n        unordered_set<int> pos_nums;\n        int total=0;\n        for (int num: nums) {\n            if (pos_nums.find(num) == pos_nums.end() && num > 0) {\n                total += num;\n                pos_nums.insert(num);\n            }\n        }\n        return total > 0 ? total : *max_element(nums.begin(), nums.end());\n    }\n};\n/*\nget sum of all unique positive elements\ncaveat: if there are no pos elements, ans is the largest num\n*/","author":"justdoit1999","submissionId":"1575089321"},[{"id":"1193","similarity":0.8461538461538461,"totOverlap":55,"longestOverlap":23}]],"1236":[{"id":"1236","fileName":"611224947.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        long long sum = 0;\n        unordered_set<int> s;\n        bool hasPositive = false;\n        int mx = -101;\n        for(auto x : nums){\n            mx = max(mx,x);\n            if(x > 0 && s.find(x)==s.end()){\n                sum += x;\n                s.insert(x);\n                hasPositive = true;\n            }\n        }\n        return (hasPositive ? sum : mx);\n    }\n};","author":"Hungry Ishizaka4ZT","submissionId":"611224947"},[{"id":"1836","similarity":0.9696969696969697,"totOverlap":64,"longestOverlap":31},{"id":"1236","similarity":0.7619047619047619,"totOverlap":48,"longestOverlap":13}]],"1239":[{"id":"1239","fileName":"611225123.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        set<int> A, B;\n        for (auto& x : a) {\n            if (x > 0) {\n                A.insert(x);\n            } else {\n                B.insert(x);\n            }\n        }\n        if (A.empty()) return *B.rbegin();\n        int ret = 0;\n        for (auto& x : A) ret += x;\n        return ret;\n    }\n};","author":"cuiaoxiang","submissionId":"611225123"},[{"id":"455","similarity":0.864406779661017,"totOverlap":51,"longestOverlap":10}]],"1251":[{"id":"1251","fileName":"611225293.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> S(nums.begin(), nums.end());\n        if(*prev(S.end()) < 0) return *prev(S.end());\n        int ans = 0;\n        for(int x : S) if(x > 0) ans += x;\n        return ans;\n    }\n};","author":"rui_er","submissionId":"611225293"},[{"id":"461","similarity":0.746268656716418,"totOverlap":50,"longestOverlap":14}]],"1253":[{"id":"1253","fileName":"611225316.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        unordered_set<int> st;\n        for(int v : a){\n            if(v >= 0)  st.insert(v);\n        }\n        if(!st.empty()){\n            int ans = 0;\n            for(int v : st) ans += v;\n            return ans;\n        }\n        return *max_element(a.begin(), a.end());\n    }\n};","author":"Hongrock","submissionId":"611225316"},[{"id":"28","similarity":0.7540983606557377,"totOverlap":46,"longestOverlap":7}]],"1268":[{"id":"1268","fileName":"611225459.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        set<int> s;\n        int ans = nums.back();\n        s.insert(ans);\n        for(auto i : nums) {\n            if(i < 0 || s.count(i)) continue;\n            ans += i;\n            s.insert(i);\n        }\n\n        return ans;\n    }\n};","author":"路人乙","submissionId":"611225459"},[{"id":"179","similarity":0.7627118644067796,"totOverlap":45,"longestOverlap":15}]],"1274":[{"id":"1274","fileName":"611225494.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = a.size(), ans = 0;\n        sort(a.begin(), a.end());\n        if (a[n - 1] <= 0) return a[n - 1];\n        set<int> s;\n        for (int i = 0; i < n; i++) {\n            if (a[i] > 0 && !s.count(a[i])) ans += a[i], s.insert(a[i]);\n        }\n        return ans;\n    }\n};","author":"liang sheng","submissionId":"611225494"},[{"id":"1585","similarity":0.7469879518072289,"totOverlap":62,"longestOverlap":21},{"id":"941","similarity":0.7142857142857143,"totOverlap":60,"longestOverlap":13}]],"1279":[{"id":"1279","fileName":"611225531.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int best = *max_element(nums.begin(),nums.end());\n        int sum = 0;\n        unordered_set<int> used;\n\n        for(int num : nums) {\n            if(num > 0 && !used.count(num)) {\n                sum += num;\n                used.insert(num);\n            }\n        }\n        return sum > 0 ? sum : best;\n    }\n};","author":"8aus1R","submissionId":"611225531"},[{"id":"1802","similarity":1.0,"totOverlap":60,"longestOverlap":30},{"id":"1279","similarity":0.8448275862068966,"totOverlap":49,"longestOverlap":7},{"id":"1395","similarity":0.8421052631578947,"totOverlap":48,"longestOverlap":10},{"id":"63","similarity":0.8103448275862069,"totOverlap":47,"longestOverlap":12}]],"1289":[{"id":"1289","fileName":"611225593.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        set<int>s;\n        for(auto x:a) s.insert(x);\n        int ans=0,cnt=0;\n        for(auto x:s) {\n            if(x>=0) {\n                ans+=x; \n                cnt++;\n            }\n        }\n        if(cnt==0) ans+=*s.rbegin();\n        return ans;\n    }\n};","author":"Kwords","submissionId":"611225593"},[{"id":"1164","similarity":0.8461538461538461,"totOverlap":44,"longestOverlap":19}]],"1291":[{"id":"1291","fileName":"611225604.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set <int> s;\n        for(auto i : nums){\n            s.insert(i);\n        }\n        int ans = 0;\n        for(auto i : s){\n            ans = max(i, ans + i);\n        }\n        return ans;\n    }\n};","author":"dhxh","submissionId":"611225604"},[{"id":"1015","similarity":0.7692307692307693,"totOverlap":40,"longestOverlap":20}]],"1292":[{"id":"1292","fileName":"611225597.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st(nums.begin(),nums.end());\n        int ans=0;\n        int cnt=0;\n        for (auto &i:st) {\n            if (i<0) {\n                continue;\n            }\n            cnt++;\n            ans+=i;\n        }\n        if (cnt==0) {\n            return *st.rbegin();\n        }\n        return ans;\n    }\n};","author":"Yves","submissionId":"611225597"},[{"id":"1082","similarity":0.7101449275362319,"totOverlap":49,"longestOverlap":15}]],"1293":[{"id":"1293","fileName":"611225606.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        if (nums.back() < 0) {\n            return nums.back();\n        }\n        \n        set<int> seen;\n        int ans = 0;\n        for (int x : nums) {\n            if (x <= 0) continue;\n            if (seen.count(x)) continue;\n            seen.insert(x);\n            ans += x;\n        }\n        return ans;\n    }\n};","author":"discipline","submissionId":"611225606"},[{"id":"179","similarity":0.7580645161290323,"totOverlap":47,"longestOverlap":11}]],"1300":[{"id":"1300","fileName":"611225638.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        if(nums.back() < 0) return nums.back();\n        set<int> s;\n        for(int i : nums) s.insert(i);\n        int res = 0;\n        for(int i : s) if(i > 0) res += i;\n        return res;\n    }\n};","author":"newhar","submissionId":"611225638"},[{"id":"90","similarity":0.7586206896551724,"totOverlap":44,"longestOverlap":15}]],"1311":[{"id":"1311","fileName":"611225759.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        for(int &n:nums)\n            {\n                if(n>=0)\n                {\n                    s.emplace(n);\n                }\n            }\n        int res = 0;\n        for(const int &n:s)\n            {\n                res+=n;\n            }\n        if(s.size()==0)\n        {\n            return *max_element(nums.begin(),nums.end());\n        }\n        return res;\n    }\n};","author":"Mafa","submissionId":"611225759"},[{"id":"282","similarity":0.7169811320754716,"totOverlap":38,"longestOverlap":8}]],"1313":[{"id":"1313","fileName":"611225770.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = a.size();\n        int mx = -110;\n        for (int x : a) mx = max(mx, x);\n        \n        if (mx <= 0)    return mx;\n        \n        set<int> s(a.begin(), a.end());\n        int res = 0;\n        for (int x : s) {\n            if (x > 0)  res += x;\n        }\n        return res;\n    }\n};","author":"surpass-w","submissionId":"611225770"},[{"id":"1313","similarity":0.7575757575757576,"totOverlap":50,"longestOverlap":20}]],"1322":[{"id":"1322","fileName":"611225803.txt","sourceCode":"class Solution {\n  public:\n    int maxSum(vector<int> &nums) {\n        int n = (int)nums.size(), ans = 0;\n\n        unordered_set<int> chosen;\n        for (int i = 0; i < n; i++) {\n            if (nums[i] > 0 && !chosen.contains(nums[i])) {\n                chosen.insert(nums[i]);\n                ans += nums[i];\n            }\n        }\n\n        if (ans == 0) {\n            ans = *max_element(nums.begin(), nums.end());\n        }\n        return ans;\n    }\n};","author":"丁真今天写什么","submissionId":"611225803"},[{"id":"1322","similarity":0.7341772151898734,"totOverlap":58,"longestOverlap":7}]],"1324":[{"id":"1324","fileName":"611225807.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = (int) nums.size();\n        int mx = -1234;\n        for (auto x : nums) {\n            mx = max(mx, x);\n        }\n        if (mx <= 0) {\n            return mx;\n        }\n        \n        int res = 0;\n        set<int> S(nums.begin(), nums.end());\n        for (auto x : S) {\n            if (x >= 0) {\n                res += x;\n            }\n        }\n        return res;\n    }\n};","author":"gooday","submissionId":"611225807"},[{"id":"561","similarity":0.7288135593220338,"totOverlap":43,"longestOverlap":9}]],"1326":[{"id":"1326","fileName":"611225838.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int max_value = *max_element(nums.begin(), nums.end());\n        set<int> st;\n        int ans = 0;\n        for(int c : nums) {\n            if(c >= 0 && !st.count(c)) {\n                ans += c;\n                st.insert(c);\n            }\n        }\n        return st.size() ? ans : max_value;\n    }\n};","author":"Khoray","submissionId":"611225838"},[{"id":"179","similarity":0.7966101694915254,"totOverlap":47,"longestOverlap":10}]],"1329":[{"id":"1329","fileName":"611225865.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mx = ranges::max(nums);\n        unordered_set<int> st;\n        for (int num : nums) {\n            if (num >= 0) st.insert(num);\n        }\n        int ans = 0;\n        for (int i : st) ans += i;\n        if (st.empty()) return mx;\n        return max(mx, ans);\n    }\n};","author":"mistluo","submissionId":"611225865"},[{"id":"28","similarity":0.71875,"totOverlap":46,"longestOverlap":14}]],"1336":[{"id":"1336","fileName":"611225905.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int ans = 0;\n        bool any_num = false;\n        for (int i : nums) {\n            if (s.count(i) || i < 0) continue;\n            any_num = true;\n            ans += i;\n            s.insert(i);\n        }\n        if (any_num) return ans;\n        else return *max_element(nums.begin(), nums.end());\n    }\n};","author":"XYukari","submissionId":"611225905"},[{"id":"313","similarity":0.819672131147541,"totOverlap":50,"longestOverlap":16}]],"1341":[{"id":"1341","fileName":"611225929.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        nums.erase(unique(nums.begin(), nums.end()), nums.end());\n        int res = 0, cnt = 0;\n        for (auto v : nums) \n            if (v >= 0) res += v, cnt++;\n        if (cnt == 0) res = *nums.rbegin();\n        return res;\n    }\n};","author":"Lozical","submissionId":"611225929"},[{"id":"1341","similarity":0.7605633802816901,"totOverlap":54,"longestOverlap":19}]],"1342":[{"id":"1342","fileName":"611225955.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        set<int>se;\n        int mx = -1e9;\n        for(auto &t:a) {\n            if(t>=0)se.insert(t);\n            mx = max(mx,t);\n        }\n        int ans = 0;\n        for(auto&t:se) {\n            ans += t;\n        }\n        if(se.size() > 0) return ans;\n        else {\n            return mx;\n        }\n    }\n};","author":"acception","submissionId":"611225955"},[{"id":"488","similarity":0.8166666666666667,"totOverlap":49,"longestOverlap":20}]],"1343":[{"id":"1343","fileName":"611225932.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> store;\n        int res=0,max_num=-1000000007;\n        for (auto i:nums){\n            max_num=max(i,max_num);\n            if (i>0 && store[i]==0){\n                res+=i;\n                store[i]=1;\n            }\n        }\n        if (max_num<=0){\n            return max_num;\n        }\n        return res;\n    }\n};","author":"小小打凤凰","submissionId":"611225932"},[{"id":"555","similarity":0.75,"totOverlap":54,"longestOverlap":24}]],"1346":[{"id":"1346","fileName":"611225970.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        set<int> s;\n        for(auto i:nums)    if(i>=0) s.insert(i);\n        if(s.empty()) return nums.back();\n        \n        int ans = 0;\n        for(auto i:s)   ans += i;\n        return ans;\n    }\n};","author":"pan","submissionId":"611225970"},[{"id":"984","similarity":0.7419354838709677,"totOverlap":46,"longestOverlap":11}]],"1370":[{"id":"1370","fileName":"611226109.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sz = nums.size();\n        int ret = 0, maxneg = INT_MIN;\n        unordered_set<int> myset;\n        for(int i = 0;i<sz;i++){\n            if(nums[i] < 0) \n                maxneg = max(maxneg, nums[i]);\n            if(nums[i]<0 || myset.count(nums[i]))\n                continue;\n            myset.emplace(nums[i]);\n            ret += nums[i];\n        }\n        return myset.empty()?maxneg:ret;\n    }\n};","author":"府艾山茶灵","submissionId":"611226109"},[{"id":"1053","similarity":0.7176470588235294,"totOverlap":61,"longestOverlap":12}]],"1378":[{"id":"1378","fileName":"611226178.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> si(nums.begin(),nums.end());\n        while(si.size()>1U && *si.begin()<=0)\n        {\n            si.erase(si.begin());\n        }\n        return accumulate(si.begin(),si.end(),0);\n    }\n};","author":"周周","submissionId":"611226178"},[{"id":"672","similarity":0.8769230769230769,"totOverlap":57,"longestOverlap":18}]],"1383":[{"id":"1383","fileName":"611226210.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        nums.erase(unique(nums.begin(), nums.end()), nums.end());\n        if (*max_element(nums.begin(), nums.end()) < 0) return nums.back();\n        int ret = 0;\n        for (auto &x : nums) {\n            ret += max(0, x);\n        }\n        return ret;\n    }\n};","author":"onlyblues","submissionId":"611226210"},[{"id":"956","similarity":0.7878787878787878,"totOverlap":52,"longestOverlap":18}]],"1384":[{"id":"1384","fileName":"611226252.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = *max_element(nums.begin(), nums.end());\n        if (ans <= 0) return ans;\n        int res = 0;\n        set<int> st;\n        for (int i = 0; i < nums.size(); ++ i) {\n            if (nums[i] > 0 && st.find(nums[i]) == st.end()) {\n                st.insert(nums[i]);\n                res += nums[i];\n            }\n        }\n        ans = res;\n        return ans;\n    }\n};","author":"恣睢","submissionId":"611226252"},[{"id":"450","similarity":0.8227848101265823,"totOverlap":65,"longestOverlap":17}]],"1389":[{"id":"1389","fileName":"611226275.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> tmp;\n        int ans = 0;\n        bool check = false;\n        for (int n: nums) {\n            if (n < 0 || tmp.count(n)) {\n                continue;\n            }\n            check = true;\n            tmp.insert(n);\n            ans += n;\n        }\n        return !check ? *max_element(nums.begin(), nums.end()) : ans;\n    }\n};","author":"hit-lu","submissionId":"611226275"},[{"id":"1040","similarity":0.71875,"totOverlap":46,"longestOverlap":10}]],"1391":[{"id":"1391","fileName":"611226279.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        for (int x : nums) {\n            if (x >= 0) {\n                s.insert(x);\n            }\n        }\n        int res = 0;\n        for (auto x : s) {\n            res += x;\n        }\n        if (s.size() == 0) {\n            return ranges::max(nums);\n        }\n        return res;\n    }\n};","author":"1！+1！=2！","submissionId":"611226279"},[{"id":"277","similarity":0.75,"totOverlap":39,"longestOverlap":10}]],"1392":[{"id":"1392","fileName":"611226285.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        nums.erase(unique(nums.begin(),nums.end()),nums.end());\n        int ans = 0;\n        int cnt = 0;\n        for(int x : nums){\n            if(x >= 0){\n                ans += x;\n                cnt++;\n            }\n        }\n        return cnt == 0 ? nums.back() : ans;\n    }\n};","author":"MR_LZ","submissionId":"611226285"},[{"id":"1392","similarity":0.7162162162162162,"totOverlap":53,"longestOverlap":21}]],"1395":[{"id":"1395","fileName":"611226297.txt","sourceCode":"class Solution\n{\npublic:\n    int maxSum(vector<int>& nums)\n    {\n        int ans = 0;\n        unordered_set<int> us;\n        for (auto num: nums)\n        {\n            if (num > 0 and !us.count(num))\n            {\n                ans += num;\n                us.insert(num);\n            }\n        }\n        return ans == 0 ? *max_element(nums.begin(), nums.end()) : ans;\n    }\n};","author":"maruser","submissionId":"611226297"},[{"id":"1279","similarity":0.8421052631578947,"totOverlap":48,"longestOverlap":10}]],"1397":[{"id":"1397","fileName":"611226295.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        if(nums.back() <= 0) return nums.back(); \n        unordered_set<int>st;\n        int ans = 0;\n        for(int i = 0; i < nums.size(); i++){\n            if(nums[i] > 0){\n                if(!st.count(nums[i])){\n                    st.insert(nums[i]);\n                    ans += nums[i];\n                }\n            }\n        }\n        return ans;\n    }\n};","author":"ppaker","submissionId":"611226295"},[{"id":"415","similarity":0.7857142857142857,"totOverlap":66,"longestOverlap":11}]],"1398":[{"id":"1398","fileName":"611226293.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        \n        unordered_set<int> mset;\n        int mmax = -1e9;\n        for(auto &x:nums){mset.insert(x);mmax = max(mmax,x);}\n        int ans = 0;\n        for(auto &x:mset){\n            if(x > 0)ans += x;\n        }\n        \n        return ans == 0?mmax:ans;\n    }\n};","author":"小刀刺大熊","submissionId":"611226293"},[{"id":"161","similarity":0.711864406779661,"totOverlap":42,"longestOverlap":11}]],"1406":[{"id":"1406","fileName":"611226344.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for (int i = 0;i <nums.size(); i++) {\n            s.insert(nums[i]);\n        }\n        int ans = 0;\n        bool f = false;\n        for (auto a : s) {\n            if (a >= 0){\n                ans += a;\n                f = true;\n            } \n        }\n        if (!f) {\n            for (auto a : s) {\n                if (ans == 0) ans = a;\n                else ans = max(a, ans);\n\n            }\n        }\n        return ans;\n    }\n};","author":"Relaxed","submissionId":"611226344"},[{"id":"1584","similarity":0.7808219178082192,"totOverlap":57,"longestOverlap":21},{"id":"1584","similarity":0.7014925373134329,"totOverlap":47,"longestOverlap":20},{"id":"29","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":11}]],"1408":[{"id":"1408","fileName":"611226348.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int ans=0;\n        int flag=0;\n        for(auto x:nums) s.insert(x);\n        for(auto x:s) \n            {\n                if(x>0) ans+=x,flag=1;\n            }\n        if(flag==0)\n        {\n            ans+=*max_element(nums.begin(),nums.end());\n        }\n        return ans;\n    }\n};","author":"unak","submissionId":"611226348"},[{"id":"878","similarity":0.703125,"totOverlap":45,"longestOverlap":6}]],"1411":[{"id":"1411","fileName":"611226359.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        for(auto &i:nums) {\n            if(i>0) s.insert(i);\n        }\n        int sum=0;\n        for(auto &i:s) sum+=i;\n        if(s.empty()) sum=*max_element(nums.begin(),nums.end());\n        return sum;\n    }\n};","author":"DestinyGod","submissionId":"611226359"},[{"id":"261","similarity":0.8333333333333334,"totOverlap":50,"longestOverlap":15}]],"1412":[{"id":"1412","fileName":"611226362.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> pz, neg;\n        for (auto x : nums) {\n            if (x >= 0) pz.insert(x);\n            else neg.insert(x);\n        }\n        if (pz.empty()) {\n            return *--neg.end();\n        }\n        int ans = 0;\n        for (auto x : pz) {\n            ans += x;\n        }\n        return ans;\n    }\n};","author":"seedjyh","submissionId":"611226362"},[{"id":"66","similarity":0.8032786885245902,"totOverlap":49,"longestOverlap":11}]],"1420":[{"id":"1420","fileName":"611226452.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int mx = -1e9;\n        for ( int x : nums ){\n            mx = max(mx, x);\n            if ( x > 0 ) s.insert(x);\n        }\n\n        int ans = 0;\n        for ( int x : s ){\n            ans += x;\n        } \n\n        if ( mx < 0 ) return mx;\n        return ans;\n    }\n};","author":"TeddyDUDU","submissionId":"611226452"},[{"id":"560","similarity":0.8064516129032258,"totOverlap":50,"longestOverlap":11}]],"1421":[{"id":"1421","fileName":"611226460.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        ranges::sort(nums);\n        auto it = unique(nums.begin(), nums.end());\n        vector<int> num(nums.begin(), it);\n        if(num.back() < 0) return num.back();\n        int ret = 0;\n        for(auto e : num) if(e > 0) ret+= e;\n        return ret;\n    }\n};","author":"夜泉","submissionId":"611226460"},[{"id":"498","similarity":0.7258064516129032,"totOverlap":45,"longestOverlap":8}]],"1433":[{"id":"1433","fileName":"611226510.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> window;\n        int ans= 0,m = -1000;\n        for(auto i : nums){\n            m = max(m,i);\n            if(!window.count(i) && i> 0){\n               ans += i; \n                window.insert(i);\n            }\n        }\n        if(ans == 0) return m;\n        return ans;\n    }\n};","author":"苏丹.奥古斯都","submissionId":"611226510"},[{"id":"1343","similarity":0.7142857142857143,"totOverlap":50,"longestOverlap":15}]],"1436":[{"id":"1436","fileName":"611226562.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0 ;\n        set<int>s;\n        for(auto i:nums){\n            if(i>0) s.insert(i);\n        }\n        for(auto i:s){\n            ans+=i;\n        }\n        if(s.size()==0){\n            for(auto i:nums){\n                s.insert(i);\n            }\n            return *s.rbegin();\n        }\n        return ans;\n    }\n};","author":"光球层上的黑子","submissionId":"611226562"},[{"id":"1436","similarity":0.7457627118644068,"totOverlap":44,"longestOverlap":10}]],"1437":[{"id":"1437","fileName":"611226565.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> set;\n        int ans = 0, flag = INT_MIN;\n        for(int& x : nums){\n            if(x > 0){\n                if(set.find(x) == set.end()){\n                    ans += x;\n                    set.insert(x);\n                }\n            }else{\n                flag = max(flag, x);\n            }\n        }\n        if(ans == 0)\n            return flag;\n        return ans;\n    }\n};","author":"Amu","submissionId":"611226565"},[{"id":"446","similarity":0.8571428571428571,"totOverlap":54,"longestOverlap":14}]],"1438":[{"id":"1438","fileName":"611226546.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s(nums.begin(), nums.end());\n        int a = 0, m = 0;\n        for (const int& v : s) {\n            if (v > 0) {\n                a += v;\n                m++;\n            }\n        }\n        if (m == 0) {\n            a = *s.rbegin();\n        }\n        return a;\n    }\n};","author":"山风土豆","submissionId":"611226546"},[{"id":"306","similarity":0.8653846153846154,"totOverlap":45,"longestOverlap":16}]],"1445":[{"id":"1445","fileName":"611226578.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> np, nn;\n        for (auto i : nums) {\n            if (i >= 0) {\n                np.insert(i);\n            } else {\n                nn.insert(i);\n            }\n        }\n        if (!np.empty()) {\n            return accumulate(np.begin(), np.end(), 0);\n        } else {\n            return *nn.rbegin();\n        }\n    }\n};","author":"HamsiK","submissionId":"611226578"},[{"id":"130","similarity":0.8823529411764706,"totOverlap":45,"longestOverlap":10}]],"1447":[{"id":"1447","fileName":"611226575.txt","sourceCode":"class Solution {\n   public:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int ans = 0;\n        for (int i : nums) {\n            if (!s.count(i)) {\n                s.insert(i);\n                if (i >= 0) ans += i;\n            }\n        }\n        if (!ans) return *max_element(nums.begin(), nums.end());\n        return ans;\n    }\n};","author":"sdcgvhgj","submissionId":"611226575"},[{"id":"752","similarity":0.711864406779661,"totOverlap":42,"longestOverlap":8}]],"1452":[{"id":"1452","fileName":"611226617.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>st(nums.begin(),nums.end());\n        int maxi=*max_element(nums.begin(),nums.end());\n        if(maxi<=0) return maxi;\n        int ans=0;\n        for(int num:st){\n            if(num>0) ans+=num;\n        }\n        return ans;\n    }\n};","author":"杏山和纱酱","submissionId":"611226617"},[{"id":"1174","similarity":0.9180327868852459,"totOverlap":56,"longestOverlap":28}]],"1455":[{"id":"1455","fileName":"611226641.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int sum=0;\n        for(auto c:nums)\n            {\n                if(s.count(c))\n                {\n                    continue;\n                }\n                if(c<=0)\n                {\n                    continue;\n                }\n                s.insert(c);\n                sum+=c;\n            }\n        if(s.empty())\n        {\n            sort(nums.begin(),nums.end());\n            return nums[nums.size()-1];\n        }\n        return sum;\n        \n    }\n};","author":"姚舟","submissionId":"611226641"},[{"id":"326","similarity":0.7288135593220338,"totOverlap":43,"longestOverlap":8}]],"1463":[{"id":"1463","fileName":"611226682.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mx=INT_MIN;\n        unordered_set<int>ust;\n        int sum=0;\n        for(auto& x:nums){\n            if(ust.find(x)==ust.end()){\n                if(x>0){\n                    sum+=x;\n                }\n                mx=max(mx,x);\n                ust.insert(x);\n            }\n        }\n        return sum==0?mx:sum;\n    }\n};","author":"yuanhao","submissionId":"611226682"},[{"id":"878","similarity":0.7301587301587301,"totOverlap":46,"longestOverlap":11}]],"1465":[{"id":"1465","fileName":"611226692.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        nums.erase(unique(nums.begin(),nums.end()),nums.end());\n        int res=0;\n        if(nums.back()<0)return nums.back();\n        for(int i:nums){\n            if(i>0)res+=i;\n        }\n        return res;\n    }\n};","author":"ぼっち","submissionId":"611226692"},[{"id":"1465","similarity":0.7575757575757576,"totOverlap":50,"longestOverlap":19}]],"1471":[{"id":"1471","fileName":"611226716.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums)\n    {\n        int daan = 0;\n        int biao = 0;\n        unordered_set<int>jihe;\n        for (auto a : nums)\n        {\n            if (a > 0&&!jihe.count(a))\n            {\n                daan += a;\n                jihe.insert(a);\n            }\n            else if (a == 0)biao = 1;\n        }\n        if (daan == 0 && !biao)return *max_element(nums.begin(), nums.end());\n        return daan;\n    }\n}; ","author":"粉色妖精小姐♪​","submissionId":"611226716"},[{"id":"572","similarity":0.7083333333333334,"totOverlap":51,"longestOverlap":7}]],"1476":[{"id":"1476","fileName":"611226736.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> hash;\n        int ans = 0;\n        int is_empty = true;\n        int maxNum = -0x3f3f3f3f;\n        for(int ele : nums){\n            maxNum = max(maxNum, ele);\n            if(ele>0 && !hash.contains(ele)){\n                ans+=ele;\n                hash.insert(ele);\n                is_empty = false;\n            }\n        }\n\n        if(is_empty)\n            ans = maxNum;\n        return ans;\n    }\n};","author":"pointedpoints","submissionId":"611226736"},[{"id":"797","similarity":0.7692307692307693,"totOverlap":50,"longestOverlap":11}]],"1477":[{"id":"1477","fileName":"611226737.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> us;\n        int mn=nums[0];\n\n        int ans =0;\n        for(int i:nums){\n            mn=max(mn,i);\n            if(i<0||us.count(i))continue;\n            ans+=i;\n            us.insert(i);\n        }\n\n        return ans==0?mn:ans;\n    }\n};","author":"蛋弟","submissionId":"611226737"},[{"id":"1041","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":10}]],"1480":[{"id":"1480","fileName":"611226788.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int result = 0;\n        unordered_set<int> uset;\n        int maxNum = INT_MIN;\n        for (auto i: nums) {\n            if (i > 0 && uset.find(i) == uset.end()) {\n                result += i;\n                uset.insert(i);\n            }\n            maxNum = max(maxNum, i);\n        }\n        return (maxNum <= 0)? maxNum: result;\n    }\n};","author":"KaguraChen","submissionId":"611226788"},[{"id":"1107","similarity":0.7741935483870968,"totOverlap":48,"longestOverlap":15}]],"1487":[{"id":"1487","fileName":"611226807.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        nums.erase(unique(nums.begin(), nums.end()), nums.end());\n        int ans = 0;\n        bool flag = false;\n        for (auto v : nums) if (v > 0) {\n            flag = true;\n            ans += v;\n        }\n        if (!flag) {\n            ans += ranges::max(nums);\n        }\n        return ans;\n    }\n};","author":"猎捕一切优质河狸","submissionId":"611226807"},[{"id":"1487","similarity":0.7428571428571429,"totOverlap":52,"longestOverlap":20}]],"1494":[{"id":"1494","fileName":"611226903.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        unordered_set<int> s;\n        bool flag = false;\n        for(int n : nums){\n            if(n > 0 && !s.count(n)){\n                flag = true;\n                ans += n;\n                s.insert(n);\n            }\n        }\n        if(!flag){\n            return *max_element(nums.begin(), nums.end());\n        }\n        return ans;\n    }\n};","author":"橙猫猫","submissionId":"611226903"},[{"id":"1326","similarity":0.7818181818181819,"totOverlap":43,"longestOverlap":9}]],"1508":[{"id":"1508","fileName":"611227023.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> uni(nums.begin(), nums.end());\n        auto it = uni.end();\n        --it;\n        int ans = *it;\n        uni.erase(it);\n        for (auto v : uni) {\n            if (v >= 0) ans += v;\n        }\n\n        return ans;\n    }\n};","author":"ssayzx","submissionId":"611227023"},[{"id":"262","similarity":0.7017543859649122,"totOverlap":40,"longestOverlap":14}]],"1510":[{"id":"1510","fileName":"611227057.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int mx = -1e9;\n        for (int x : nums) mx = max(mx, x);\n        if (mx <= 0) return mx;\n\n        unordered_set<int> st;\n        for (int x : nums) if (x > 0) st.insert(x);\n        int ans = 0;\n        for (int x : st) ans += x;\n        return ans;\n    }\n};","author":"TsReaper","submissionId":"611227057"},[{"id":"1143","similarity":0.835820895522388,"totOverlap":56,"longestOverlap":18}]],"1533":[{"id":"1533","fileName":"611227134.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> S;\n        int maxNeg = numeric_limits<int>::min();\n        for (int num : nums) {\n            if (num > 0) S.emplace(num);\n            else maxNeg = max(maxNeg, num);\n        }\n        return S.empty() ? maxNeg : accumulate(S.begin(), S.end(), 0L);\n    }\n};","author":"Huayu Zhang","submissionId":"611227134"},[{"id":"668","similarity":0.8166666666666667,"totOverlap":49,"longestOverlap":12}]],"1534":[{"id":"1534","fileName":"611227206.txt","sourceCode":"class Solution{\npublic:\n    int maxSum(vector<int>& nums){\n        int mx=INT_MIN;\n        int s=0;\n        for(int n:nums){\n            mx=max(mx,n);\n        }\n        if(mx<=0) return mx;\n        int sum=0;\n        set<int> mp;\n        for(int n:nums){\n            if(n>0&&mp.find(n)==mp.end()){\n                sum+=n;\n                mp.insert(n);\n            }\n        }\n        return sum;\n    }\n};","author":"SkyLimit","submissionId":"611227206"},[{"id":"1107","similarity":0.8656716417910447,"totOverlap":58,"longestOverlap":15}]],"1552":[{"id":"1552","fileName":"611227336.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size(), res = 0;\n        set<int> st;\n        for(int i = 0; i < n; i++){\n            if(nums[i] > 0 and st.find(nums[i]) == st.end()){\n                res += nums[i];\n                st.insert(nums[i]);\n            }\n        }\n        if(*max_element(nums.begin(), nums.end()) < 0){\n            return *max_element(nums.begin(), nums.end());\n        }else{\n            return res;\n        }\n    }\n};","author":"ベ断桥烟雨ミ","submissionId":"611227336"},[{"id":"1206","similarity":0.7526881720430108,"totOverlap":70,"longestOverlap":13}]],"1563":[{"id":"1563","fileName":"611227405.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n      set<int> S(nums.begin(), nums.end());\n      int ans = 0;\n      if (*S.rbegin()<0) return *S.rbegin();\n      for (auto x: S) ans += max(x, 0);\n      return ans;\n    }\n};","author":"Darren Hp","submissionId":"611227405"},[{"id":"1734","similarity":0.9056603773584906,"totOverlap":48,"longestOverlap":24},{"id":"464","similarity":0.8,"totOverlap":44,"longestOverlap":14}]],"1565":[{"id":"1565","fileName":"611227472.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        int ans = 0;\n        for (int i : nums) {\n            if (i > 0 && s.find(i) == s.end()) {\n                ans += i;\n                s.insert(i);\n            }\n        }\n\n        if (ans > 0) {\n            return ans;\n        }\n\n        ans = nums[0];\n        for (int i : nums) {\n            ans = max(ans, i);\n        }\n        return ans;\n    }\n};","author":"许秀","submissionId":"611227472"},[{"id":"944","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":10}]],"1567":[{"id":"1567","fileName":"611227482.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int ret = 0;\n        for (auto n : nums) {\n            if (n >= 0 && !st.count(n)) {\n                st.insert(n);\n                ret += n;\n            }\n        }\n        if (!st.empty()) {\n            return ret;\n        }\n        return *max_element(nums.begin(), nums.end());\n    }\n};","author":"ctong","submissionId":"611227482"},[{"id":"529","similarity":0.8679245283018868,"totOverlap":46,"longestOverlap":20}]],"1570":[{"id":"1570","fileName":"611227575.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s1, s2;\n        for(auto num: nums){\n            if(num>0){\n                s1.insert(num);\n            }\n            else{\n                s2.insert(num);\n            }\n        }\n        int sum=0;\n        for(auto ss: s1){\n            sum+=ss;\n        }\n        if(sum==0){\n            sum=*s2.rbegin();\n        }\n        return sum;\n    }\n};","author":"Afash","submissionId":"611227575"},[{"id":"1164","similarity":0.7884615384615384,"totOverlap":41,"longestOverlap":10}]],"1584":[{"id":"1584","fileName":"611227709.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        set<int> s;\n        for(int i = 0; i < nums.size(); i ++){\n            s.insert(nums[i]);\n        }\n        bool falg = false;\n        for(auto v: s){\n            if(v > 0){\n                ans += v;\n                falg = true;\n            }\n        }\n        if(!falg){\n           ans +=*s.rbegin();\n        }\n        \n        return ans;\n    }\n};","author":"vector","submissionId":"611227709"},[{"id":"1406","similarity":0.7808219178082192,"totOverlap":57,"longestOverlap":21}]],"1585":[{"id":"1585","fileName":"611227717.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int ans = 0;\n        sort(nums.begin(),nums.end());\n        if (nums[n-1] <= 0) return nums[n-1];\n        set<int>st;\n        for(int i=0;i<n;i++) {\n            if (nums[i] >=0) st.insert(nums[i]);\n        }\n        for(int ele: st) ans += ele;\n        return ans;\n    }\n};","author":"faustrun","submissionId":"611227717"},[{"id":"1274","similarity":0.7469879518072289,"totOverlap":62,"longestOverlap":21}]],"1593":[{"id":"1593","fileName":"611227801.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int > mp;\n        int res = 0, mx = INT_MIN, c = 0;\n        for(auto v : nums) {\n            mx = max(mx, v);\n            if(v < 0) continue;\n            else if(mp.count(v) == 0) mp.insert(v), res += v, c++;\n        }\n        return c ? res : mx;\n    }\n};","author":"0xffffffff","submissionId":"611227801"},[{"id":"595","similarity":0.7096774193548387,"totOverlap":44,"longestOverlap":10}]],"1601":[{"id":"1601","fileName":"611227904.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        nums.erase(unique(nums.begin(),nums.end()),nums.end());\n        int sum=0;\n        int fu=0;\n        for(auto y:nums){\n            if(y>0)sum+=y;\n            if(y<0)fu++;\n        }\n        if(fu==nums.size())sum=*max_element(nums.begin(),nums.end());\nreturn sum;\n    }\n};","author":"Nostalgic I3oothXUN","submissionId":"611227904"},[{"id":"956","similarity":0.7941176470588235,"totOverlap":54,"longestOverlap":18}]],"1608":[{"id":"1608","fileName":"611227928.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        \n        unordered_set<int> f;\n        int mx = INT_MIN;\n        for (int x: nums) {\n            if (x > 0) {\n                f.emplace(x);\n            }\n            else {\n                mx = max(mx, x);\n            }\n        }\n\n        if (f.empty()) return mx;\n\n        int ans = 0;\n        for (int x: f) {\n            ans += x;\n        }\n        return ans;\n    }\n};","author":"Epic Noether5mF","submissionId":"611227928"},[{"id":"257","similarity":0.8245614035087719,"totOverlap":47,"longestOverlap":17}]],"1610":[{"id":"1610","fileName":"611228043.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> ns;\n        for (const auto& x : nums) {\n            if (x >= 0) {\n                ns.insert(x);\n            }\n        }\n        if (ns.empty()) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        return reduce(ns.begin(), ns.end());\n    }\n};","author":"Hack_Others","submissionId":"611228043"},[{"id":"192","similarity":0.967741935483871,"totOverlap":60,"longestOverlap":21}]],"1611":[{"id":"1611","fileName":"611228073.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        ranges::sort(nums);\n        if (nums.back() < 0) return nums.back();\n        nums.erase(unique(nums.begin(), nums.end()), nums.end());\n        int res = 0;\n        for (int x : nums) {\n            if (x > 0) res += x;\n        }\n        return res;\n    }\n};","author":"ransom_sword","submissionId":"611228073"},[{"id":"90","similarity":0.8135593220338984,"totOverlap":48,"longestOverlap":15}]],"1626":[{"id":"1626","fileName":"611228211.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int max_neg = -101;\n        for (int num: nums) {\n            if (num < 0){\n                max_neg = max(max_neg, num);\n                continue;\n            }\n            s.insert(num);\n        }\n        int res = 0;\n        if (s.empty())res = max_neg;\n        else res = accumulate(s.begin(), s.end(),0);\n        return res;\n    }\n};","author":"一行代码敲一天","submissionId":"611228211"},[{"id":"632","similarity":0.711864406779661,"totOverlap":42,"longestOverlap":13}]],"1633":[{"id":"1633","fileName":"611228251.txt","sourceCode":"class Solution {\npublic:\n  int maxSum(vector<int>& nums) {\n    sort(nums.begin(), nums.end());\n    set<int> mp;\n    int ma = -1000;\n    int sum = 0;\n    int sumcnt = 0;\n    for (auto it : nums) {\n      ma = max(ma, it);\n      if (it >= 0 && !mp.count(it)) {\n        sum += it;\n        sumcnt++;\n        mp.insert(it);\n      }\n    }\n    if (sumcnt == 0) {\n      return ma;\n    }\n    return sum;\n  }\n}; ","author":"9caiji","submissionId":"611228251"},[{"id":"147","similarity":0.7083333333333334,"totOverlap":51,"longestOverlap":6}]],"1646":[{"id":"1646","fileName":"611228641.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int l = nums.size();\n        unordered_set<int>set;\n        int m = -1e9;\n        for(int i=0;i<l;i++){\n            if(nums[i] >= 0){\n                set.insert(nums[i]);\n            }\n            m = max(nums[i],m);\n        }\n        if(set.size() == 0){\n            return m;\n        }\n        int res = 0;\n        for(int it : set){\n            res += it;\n        }\n        return res;\n    }\n};","author":"如果","submissionId":"611228641"},[{"id":"802","similarity":0.7948717948717948,"totOverlap":62,"longestOverlap":16}]],"1667":[{"id":"1667","fileName":"611228866.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res=0;\n        set<int> set;\n        int max1=-101;\n        for(int i:nums) {\n            max1=max(max1,i);\n            if(i>0&&set.find(i)==set.end()) {\n                res+=i;\n                set.insert(i);\n            } \n        }\n        if(max1<=0) return max1;\n        else return res;\n    }\n};","author":"yu15030","submissionId":"611228866"},[{"id":"1667","similarity":0.8064516129032258,"totOverlap":50,"longestOverlap":16}]],"1677":[{"id":"1677","fileName":"611228987.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = nums[0], n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            ans = max(ans, nums[i]);\n        }\n        int sums = 0;\n        set<int> ss;\n        for (int i = 0; i < n; ++i) {\n            if (nums[i] > 0 && ss.find(nums[i]) == ss.end()) {\n                sums += nums[i];\n                ss.insert(nums[i]);\n                ans = max(ans, sums);\n            }\n        }\n        return ans;\n    }\n};","author":"ddmike","submissionId":"611228987"},[{"id":"1730","similarity":0.7362637362637363,"totOverlap":67,"longestOverlap":14},{"id":"422","similarity":0.7303370786516854,"totOverlap":65,"longestOverlap":11}]],"1678":[{"id":"1678","fileName":"611229013.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> uset;\n        int maxnum = INT_MIN;\n        int sum = 0;\n        for (int num : nums) {\n            if (num > 0) {\n                if (uset.find(num) == uset.end()) {\n                    uset.insert(num);\n                    sum += num;\n                }\n            } else {\n                maxnum = max(maxnum, num);\n            }\n        }\n        if (uset.empty()) {\n            return maxnum;\n        } else {\n            return sum;\n        }\n    }\n};","author":"晨","submissionId":"611229013"},[{"id":"990","similarity":0.8333333333333334,"totOverlap":55,"longestOverlap":19}]],"1686":[{"id":"1686","fileName":"611229142.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int ans = 0;\n        int pre = -1;\n        for (auto x : nums) {\n            if (x > 0 && pre != x) {\n                pre = x;\n                ans += x;\n            }\n        }\n        if (pre == -1) ans += nums[nums.size()-1];\n        return ans;\n    }\n};","author":"躺平选手","submissionId":"611229142"},[{"id":"1601","similarity":0.7313432835820896,"totOverlap":49,"longestOverlap":11}]],"1698":[{"id":"1698","fileName":"611229554.txt","sourceCode":"class Solution\n{\npublic:\n    int maxSum(vector<int> &nums) {\n        unordered_set<int> mp;\n        int cnt_non_negtive = 0;\n        int sum = 0;\n        for (int i = 0; i < nums.size(); i++)\n        {\n            if (nums[i] >= 0) cnt_non_negtive++;\n            if (mp.find(nums[i]) == mp.end())  sum += nums[i] > 0 ? nums[i] : 0;\n            mp.insert(nums[i]);\n        }\n        if (cnt_non_negtive == 0) return *max_element(nums.begin(), nums.end());\n        return sum;\n    }\n};","author":"不想写代码只想睡大觉","submissionId":"611229554"},[{"id":"99","similarity":0.7023809523809523,"totOverlap":59,"longestOverlap":9}]],"1700":[{"id":"1700","fileName":"611229440.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = *max_element(nums.begin(), nums.end());\n        unordered_set<int> sub;\n        for(auto v:nums){\n            if(v>0){\n                sub.insert(v);\n            }\n        }\n        if(!sub.empty()){\n            ans = accumulate(sub.begin(), sub.end(), 0);\n        }\n        return ans;\n    }\n};","author":"伽利略","submissionId":"611229440"},[{"id":"1818","similarity":0.7301587301587301,"totOverlap":46,"longestOverlap":7},{"id":"673","similarity":0.7142857142857143,"totOverlap":45,"longestOverlap":6}]],"1707":[{"id":"1707","fileName":"611229642.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = -1e9, n = nums.size();\n        vector<int> pos; int mx = -1e9;\n        unordered_set<int> st;\n        for(int x : nums) {\n            if(x >= 0) { pos.push_back(x); st.insert(x); }\n            mx = max(mx, x);\n        }\n        if(pos.empty()) return mx;\n        int sum = 0;\n        for(int x : st) sum += x;\n        return sum;\n        \n    }\n};","author":"nnKoala","submissionId":"611229642"},[{"id":"809","similarity":0.7297297297297297,"totOverlap":54,"longestOverlap":12}]],"1710":[{"id":"1710","fileName":"611229727.txt","sourceCode":"class Solution\n{\npublic:\n\tint maxSum(vector<int>& nums)\n\t{\n\t\tint max_ele = INT32_MIN;\n\t\tunordered_set<int> unique;\n\t\tfor (int i = 0; i < nums.size(); i++)\n\t\t{\n\t\t\tif (nums[i] >= 0)\n\t\t\t{\n\t\t\t\tunique.insert(nums[i]);\n\t\t\t}\n\t\t\tmax_ele = max(max_ele, nums[i]);\n\t\t}\n\t\treturn unique.size() > 0 ? accumulate(unique.begin(), unique.end(), 0) : max_ele;\n\t}\n};","author":"Takamiya","submissionId":"611229727"},[{"id":"127","similarity":0.703125,"totOverlap":45,"longestOverlap":12}]],"1728":[{"id":"1728","fileName":"611230144.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int result = 0;\n        unordered_set<int> store;\n        for(int i : nums){\n            if(i > 0){\n               if(!store.contains(i))\n               result += i; \n                store.insert(i);\n            }\n        }\n        if(result > 0) return result;\n\n        //如果数组无正数\n        return *max_element(nums.begin(), nums.end());\n    }\n};","author":"WWWeeds","submissionId":"611230144"},[{"id":"388","similarity":0.75,"totOverlap":45,"longestOverlap":14}]],"1730":[{"id":"1730","fileName":"611230231.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        set<int> s;\n        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n            if (nums[i] > 0 && s.find(nums[i]) == s.end()) {\n                ans += nums[i];\n                s.insert(nums[i]);\n            }\n        }\n        if (ans == 0) {\n            ans = INT_MIN;\n            for (int i = 0; i < n; i++) {\n                ans = max(ans, nums[i]);\n            }\n        }\n\n        return ans;\n    }\n};","author":"anshanzi","submissionId":"611230231"},[{"id":"1677","similarity":0.7362637362637363,"totOverlap":67,"longestOverlap":14}]],"1734":[{"id":"1734","fileName":"611230437.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>nums1(nums.begin(),nums.end());\n        int answer=0;\n        if(*nums1.rbegin()<0)\n            return *nums1.rbegin();\n        for(auto x:nums1)\n            {\n                if(x>0)\n                answer+=x;\n            }\n        return answer;\n    }\n};","author":"Pensive CrayL8l","submissionId":"611230437"},[{"id":"1563","similarity":0.9056603773584906,"totOverlap":48,"longestOverlap":24}]],"1743":[{"id":"1743","fileName":"611230774.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> num;\n        int ans = 0;\n        int m = -100;\n        for(int i=0; i<nums.size(); i++){\n            m = max(m,nums[i]);\n        }\n        if(m <= 0){\n            nums = {m};\n            return m;\n        }\n        for(int i=0; i<nums.size(); i++){\n            if(nums[i] > 0 && num.find(nums[i]) == num.end()){\n                num.insert(nums[i]);\n                ans += nums[i];\n                continue;\n            }\n            nums.erase(nums.begin() + i);\n            i--;\n        }\n        return ans;\n    }\n};","author":"Mathews","submissionId":"611230774"},[{"id":"281","similarity":0.75,"totOverlap":72,"longestOverlap":14}]],"1757":[{"id":"1757","fileName":"611231515.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> se;\n        sort(nums.begin(),nums.end());\n        if(nums[nums.size()-1]<0)\n        {\n            return nums[nums.size()-1];\n        }\n        int sum=0;\n        for(int num:nums)\n            {\n                if(num>0&&se.find(num)==se.end())\n                {\n                    sum+=num;\n                    se.insert(num);\n                }\n            }\n        return sum;\n    }\n};","author":"Myluster","submissionId":"611231515"},[{"id":"1118","similarity":0.7792207792207793,"totOverlap":60,"longestOverlap":11}]],"1767":[{"id":"1767","fileName":"611231914.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int ans = 0;\n        int cnt = 0;\n        for(auto &k:nums)\n            {\n                if(k <= 0)continue;\n                cnt++;\n                if(s.count(k));\n                else\n                {\n                    ans += k;\n                    s.insert(k);\n                }\n            }\n        return cnt ? ans : *max_element(nums.begin(),nums.end());\n    }\n};","author":"Camellia_y","submissionId":"611231914"},[{"id":"878","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":8}]],"1789":[{"id":"1789","fileName":"611234314.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0,ma=-1000;\n        set<int>st;\n        for(auto i:nums){\n            ma=max(ma,i);\n            if(i>0 && st.find(i)==st.end()){\n                ans+=i;\n                st.insert(i);\n            }\n        }\n        if(ma<=0){\n            return ma;\n        }\n        return ans;\n    }\n};","author":"行走天地间","submissionId":"611234314"},[{"id":"597","similarity":0.859375,"totOverlap":55,"longestOverlap":11}]],"1791":[{"id":"1791","fileName":"611234905.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mx = *max_element(nums.begin(), nums.end());\n        if(mx <= 0) return mx;\n        set<int> st;\n        for(auto x : nums){\n            if(x > 0) st.insert(x);\n        }\n        int res = 0;\n        for(auto x : st) res += x;\n        return res;\n    }\n};","author":"红桃A士","submissionId":"611234905"},[{"id":"227","similarity":0.7301587301587301,"totOverlap":46,"longestOverlap":7}]],"1800":[{"id":"1800","fileName":"611235532.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = INT_MIN, n = nums.size();\n        int cnt = 0;\n        vector<int> tmp;\n        set<int> st;\n        for(int i = 0; i < n; i++){\n            if(nums[i]<=0||st.find(nums[i])!=st.end())ans=max(ans, nums[i]);\n            else {\n                st.insert(nums[i]);\n                cnt+=nums[i];\n            }\n        }\n        return cnt==0 ? ans : cnt;\n    }\n};","author":"Dumbo","submissionId":"611235532"},[{"id":"1123","similarity":0.7469879518072289,"totOverlap":62,"longestOverlap":8}]],"1802":[{"id":"1802","fileName":"611235452.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) \n    {\n        int best = *max_element(nums.begin(), nums.end());\n        int sum = 0;\n        unordered_set<int> used;\n\n        for (int num : nums) \n        {\n            if (num > 0 && !used.count(num)) \n            {\n                sum += num;\n                used.insert(num);\n            }\n        }\n        return sum > 0 ? sum : best;\n    }\n};\n","author":"Sakura_luo","submissionId":"611235452"},[{"id":"1279","similarity":1.0,"totOverlap":60,"longestOverlap":30}]],"1805":[{"id":"1805","fileName":"611235935.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        //int mx = INT_MIN;\n        vector<int> p;\n        int mx = INT_MIN;\n        for (auto& x : nums) {\n            if (x > 0) p.emplace_back(x);\n            mx = max(mx, x);\n        }\n        if (p.size() == 0) return mx;\n        set<int> st;\n        for (auto& x : p) st.insert(x);\n        int ans = 0;\n        for (auto it = st.begin(); it != st.end(); it++) ans += (*it);\n        return ans;\n    }\n};","author":"RnFreno","submissionId":"611235935"},[{"id":"1198","similarity":0.7058823529411765,"totOverlap":48,"longestOverlap":12}]],"1818":[{"id":"1818","fileName":"611237126.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int mx = INT_MIN;\n        unordered_set<int> s;\n        for(auto num: nums){\n            if(num >= 0){s.insert(num);}\n            else{--n;}\n            mx = max(mx,num);\n        }\n        return n==0?mx:accumulate(s.begin(),s.end(),0);\n    }\n};","author":"幸存者","submissionId":"611237126"},[{"id":"1700","similarity":0.7301587301587301,"totOverlap":46,"longestOverlap":7}]],"1820":[{"id":"1820","fileName":"611237075.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = 0, n = nums.size();\n        ranges::sort(nums);\n        if (nums.back() <= 0) {\n            return nums.back();\n        }\n        set<int> S;\n        for (auto x : nums) {\n            if (x > 0) S.insert(x);\n        }\n        for (auto x : S) res +=  x;\n        return res;\n    }\n};","author":"北棂","submissionId":"611237075"},[{"id":"598","similarity":0.7377049180327869,"totOverlap":45,"longestOverlap":7}]],"1832":[{"id":"1832","fileName":"611241255.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(auto i:nums) {\n            if(i > 0) s.insert(i);\n        }\n        if(s.size() == 0) return *max_element(nums.begin(), nums.end());\n        int res = 0;\n        for(auto i:s) res += i;\n        return res;\n    }\n};","author":"zyj","submissionId":"611241255"},[{"id":"227","similarity":0.7846153846153846,"totOverlap":51,"longestOverlap":11}]],"1836":[{"id":"1836","fileName":"611242115.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        long long sum = 0;\n        set<int> s;\n        bool ff = false;\n        int maxn = -1e9;\n        for(auto x : nums){\n            maxn = max(maxn,x);\n            if(x > 0 && s.find(x)==s.end()){sum += x;s.insert(x);ff = 1;}\n        }\n        return(ff ? sum : maxn);\n    }\n};","author":"程序猴","submissionId":"611242115"},[{"id":"1236","similarity":0.9696969696969697,"totOverlap":64,"longestOverlap":31}]],"1839":[{"id":"1839","fileName":"611242309.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int mx = *max_element(nums.begin(), nums.end());\n        if (mx < 0) return mx;\n\n        int ans = 0;\n        unordered_set<int> st;\n        for (int i = 0; i < n; i++) {\n            if (nums[i] > 0 && !st.count(nums[i])) {\n                ans += nums[i];\n                st.insert(nums[i]);\n            }\n        }\n        return ans;\n    }\n};","author":"一两截","submissionId":"611242309"},[{"id":"1053","similarity":0.7380952380952381,"totOverlap":62,"longestOverlap":12}]],"1842":[{"id":"1842","fileName":"611243198.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int sum = 0, mx = INT_MIN;\n        for(auto x : nums){\n            if(x > 0 && st.count(x) == 0){\n                sum += x;\n                st.insert(x);\n            }\n            mx = max(mx, x);\n        }\n        return st.size() ? sum : mx;\n    }\n};","author":"竹下为生","submissionId":"611243198"},[{"id":"718","similarity":0.8125,"totOverlap":52,"longestOverlap":11}]],"1852":[{"id":"1852","fileName":"611246494.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> hash;\n        int mx = INT_MIN;\n        int sum = 0;\n        for(auto &c:nums){\n            if(c<0){\n                mx = max(c, mx);\n            }else{\n                if(hash.insert(c).second){\n                    sum += c;\n                }\n            }\n        }\n        if(hash.empty()) return mx;\n        return sum;\n    }\n};","author":"我也不想c+v呀","submissionId":"611246494"},[{"id":"971","similarity":0.7222222222222222,"totOverlap":52,"longestOverlap":17}]],"1866":[{"id":"1866","fileName":"611250711.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        unordered_set<int> hash;\n        int sum = 0;\n        for (auto x : a) {\n            if (x > 0 && hash.find(x) == hash.end()) {\n                sum += x;\n                hash.insert(x);\n            }\n        }\n        if (sum == 0) {\n            int m = a[0];\n            for (auto x : a) m = max(m, x);\n            return m;\n        }\n        return sum;\n    }\n};","author":"已延毕，勿扰","submissionId":"611250711"},[{"id":"304","similarity":0.7777777777777778,"totOverlap":49,"longestOverlap":14}]],"1868":[{"id":"1868","fileName":"611252670.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for (int num:nums) {\n            if (num >= 0) {\n                st.insert(num);\n            }\n        }\n        if (st.size()) {\n        int ans = 0;\n            for (int val:st) {\n                ans += val;\n            }\n            return ans;\n        } else {\n            int ans = -101;\n            for (int num:nums) {\n                ans = max(ans, num);\n            }\n            return ans;\n        }\n        return 0;\n    }\n};","author":"赌怪","submissionId":"611252670"},[{"id":"123","similarity":0.8548387096774194,"totOverlap":53,"longestOverlap":11}]],"1869":[{"id":"1869","fileName":"611254874.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ret =0;\n        set<int> allnums;\n        int maxi = INT_MIN;\n        for(int i : nums){\n            allnums.insert(i);\n            maxi = max(maxi, i);\n        }\n        if(maxi <= 0){\n            return maxi;\n        }\n        for(int i : allnums){\n            if(i>0){\n                ret += i;\n            }\n        }\n        return ret;\n    }\n};","author":"A-SOUL_Official","submissionId":"611254874"},[{"id":"794","similarity":0.7037037037037037,"totOverlap":38,"longestOverlap":13}]],"1870":[{"id":"1870","fileName":"611256271.txt","sourceCode":"class Solution {\n    \npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        sort(nums.begin(),nums.end());\n        if(nums[n-1] < 0){\n            return nums[n-1];\n        }\n        int ret = 0;\n        unordered_set<int>s;\n        \n        for(int i = 0;i<n;i++){\n            int val = nums[i];\n            if(val >= 0){\n                if(s.find(val) == s.end()){\n                    ret += val;\n                    s.insert(val);\n                }\n            }\n        }\n        \n        return ret;\n    }\n};","author":"sheldon","submissionId":"611256271"},[{"id":"572","similarity":0.7349397590361446,"totOverlap":61,"longestOverlap":11}]],"1875":[{"id":"1875","fileName":"611261364.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for (int x : nums) {\n            if (x > 0) st.insert(x);\n        }\n        if (st.empty()) return *max_element(nums.begin(), nums.end());\n        int sum = 0;\n        for (int x : st) {\n            sum += x;\n        }\n        return sum;\n    }\n};","author":"upk1_dwk2","submissionId":"611261364"},[{"id":"553","similarity":0.921875,"totOverlap":59,"longestOverlap":18}]],"1885":[{"id":"1885","fileName":"611274070.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        nums.erase(unique(nums.begin(), nums.end()), nums.end());\n        int ans = 0;\n        if (nums.back() >= 0) {\n            for (int x: nums) {\n                if (x >= 0) {\n                    ans += x;\n                }\n            }\n        } else {\n            ans = nums.back();\n        }\n        return ans;\n    }\n};","author":"Leesuhyun","submissionId":"611274070"},[{"id":"1465","similarity":0.8421052631578947,"totOverlap":48,"longestOverlap":22}]]},{"424":[{"id":"424","fileName":"1575082626.txt","sourceCode":"\n// iostream::sync_with_stdio(false); cin.tie(NULL);\n#include<bits/stdc++.h>\nusing namespace std;\n\n\n#define Sree ios_base::sync_with_stdio(false);\n#define Vardhan cin.tie(NULL);\n\n#define pi pair<int,int>\n#define ppi pair<pair<int,int>,int>\n#define pip pair<int,pair<int,int>>\n#define umii unordered_map<int,int>\n#define mii map<int,int>\n#define umsi unordered_map<string,int>\n#define msi map<string,int>\n#define umss unordered_map<string,string>\n#define mss map<string,string>\n#define vi vector<int>\n#define vb vector<bool>\n#define vll vector<ll>\n#define vvi vector<vector<int>>\n#define vvb vector<vector<bool>>\n#define vpi vector<pair<int,int>>\n#define vpic vector<pair<int,char>>\n#define vvpi vector<vector<pair<int,int>>>\n#define pqimax priority_queue<int>\n#define pqimin priority_queue<int,vector<int>,greater<int>>\n#define ll long long\n#define pb push_back\n#define br cout<<endl;\n#define Name \"Sreevardhan\"\n\n\n#define fl(i,n) for(int i=0;i<n;i++)\n#define fli(i,n) for(int i=n-1;i>=0;i--)\n#define srt(v) sort(v.begin(),v.end());\n#define srtg(v) sort(v.begin(),v.end(),greater<int>());\n\n#define print(_) cout<<_<<\" \";\n#define println(_) cout<<_<<endl;\n#define inp(_) for(auto &__:_) cin>>__;\n#define prv(_) for(auto &__:_) cout<<__<<\" \";\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(auto &i:nums){\n            if(i>0) s.insert(i);\n        }\n        ll sum=0;\n        if(s.empty()){\n            return *max_element(nums.begin(),nums.end());\n        }\n        for(auto &i:s){\n            sum+=i;\n        }\n        return sum;\n    }\n};\n","author":"Sreevardhan Reddy","submissionId":"1575082626"},[]]},{"426":[{"id":"426","fileName":"1575082864.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        // if(nums.length)\n        boolean count[]=new boolean[101];\n        for(int e:nums){\n            if(e>0){\n                count[e]=true;\n            }\n        }\n        int sum=0;\n        for(int i=1;i<101;i++){\n            if(count[i])\n                sum += i;\n        }\n        if(sum==0){\n            int max=Integer.MIN_VALUE;\n            for(int e:nums){\n                max=Math.max(max,e);\n            }\n            sum=max;\n        }\n        return sum;\n    }\n}","author":"hacker","submissionId":"1575082864"},[]]},{"427":[{"id":"427","fileName":"1575082868.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> mp;\n        for(auto a:nums) mp[a]++;\n        int ans=0;\n        int maxNeg=INT_MIN;\n        bool flag=false;\n        for(auto a:mp)\n        {\n            if(a.first>0) \n            {\n                ans+=a.first;\n                flag=true;\n            }\n            else maxNeg=max(maxNeg,a.first);\n        }\n        if(!flag) return maxNeg;\n        return ans;\n    }\n};","author":"Rohith_kumar_reddy","submissionId":"1575082868"},[]]},{"429":[{"id":"429","fileName":"1575082886.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool allneg = true;\n        for(auto& val : nums)\n            if(val >= 0)\n                allneg = false;\n        if(allneg)\n            return *max_element(nums.begin(),nums.end());\n        unordered_set<int> seen;\n        int ans = 0;\n        for(auto& val : nums) {\n            if(seen.find(val) == seen.end() && val > 0) {\n                ans+=val;\n                seen.insert(val);\n            }\n        }\n        return ans;\n    }\n};","author":"Shobhit Tewari","submissionId":"1575082886"},[]]},{"430":[{"id":"430","fileName":"1575082881.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        xs = sorted(set(nums))\n        \n        ret = 0\n        n = 0\n        while xs and xs[-1] > 0:\n            ret += xs.pop()\n            n += 1\n        \n        if n == 0:\n            ret += xs.pop()\n            \n        return ret\n        \n","author":"Only My Railgun","submissionId":"1575082881"},[]]},{"431":[{"id":"431","fileName":"1575082837.txt","sourceCode":"class Solution {\n\n\n    private boolean allNegative(int[] nums) {\n        for (int val : nums) {\n            if (val >= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public int maxSum(int[] nums) {\n        if (allNegative(nums)) {\n            int max = Integer.MIN_VALUE;\n            for (int val : nums) {\n                max = Math.max(max, val);\n            }\n            return max;\n        } else {\n            Set<Integer> values = new HashSet<>();\n            for (int val : nums) {\n                if (val >= 0) {\n                    values.add(val);\n                }\n            }\n            int sum = 0;\n            for (int val : values) {\n                sum += val;\n            }\n            return sum;\n        }\n    }\n\n}","author":"Wei Liu","submissionId":"1575082837"},[]]},{"432":[{"id":"432","fileName":"1575082891.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        int maxi=INT_MIN;\n        for(int i=0;i<nums.size();i++)\n            {\n               if(nums[i]>=0) st.insert(nums[i]);\n                maxi=max(nums[i],maxi);\n            }\n        int ans=0;\n        if(st.size()==0) return maxi;\n        for(auto it:st)\n            {\n                ans+=it;\n            }\n\n        return ans;\n    }\n};","author":"Shubham Pandey","submissionId":"1575082891"},[]]},{"441":[{"id":"441","fileName":"1575082929.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = a.size();\n        int res = 0;\n        map<int, int> mp;\n        sort(a.begin(), a.end());\n        for (int i = 0; i < n; i++) {\n            if (mp.count(a[i])) continue;\n            if (a[i] < 0) continue;\n            res += a[i];\n            mp[a[i]] = 1;\n        }\n        if (mp.size() == 0) {\n            return a[n - 1];\n        }\n        return res;\n    }\n};","author":"Guddu Singh","submissionId":"1575082929"},[]]},{"442":[{"id":"442","fileName":"1575082948.txt","sourceCode":"class Solution:\n\n    def maxSum(self, nums):\n        nums1 = set([x for x in nums if x > 0])\n        if len(nums1) == 0:\n            return max(nums)\n        return sum(nums1)","author":"tdserapio","submissionId":"1575082948"},[]]},{"444":[{"id":"444","fileName":"1575082942.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        \n        sort(nums.rbegin(), nums.rend());\n        \n        int ans = nums[0], cur = 0;\n        \n        map <int, int> mp;\n        \n        for(auto x: nums){\n            \n            if(mp.count(x) == 0){\n                mp[x]++;\n                cur += x;\n                \n                ans = max(ans, cur);\n            }\n        }\n        \n        return ans;\n        \n        \n    }\n};","author":"Vishal Kumar","submissionId":"1575082942"},[]]},{"445":[{"id":"445","fileName":"1575082938.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(x < 0 for x in nums):\n            return max(nums)\n        \n        arr = []\n        for x in nums:\n            if x > 0:\n                arr.append(x)\n        \n        count = Counter(arr)\n        return sum(count.keys())","author":"Anchor Being","submissionId":"1575082938"},[]]},{"448":[{"id":"448","fileName":"1575082968.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(int i:nums) st.insert(i);\n        long long sum = 0;\n        if(*st.rbegin() <= 0) {\n            return *st.rbegin();\n        }\n        for(int i:st) if(i>=0) sum +=i;\n        return sum;\n    }\n};","author":"3whhA6pFsT","submissionId":"1575082968"},[]]},{"452":[{"id":"452","fileName":"1575083068.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        int out = INT_MIN;\n        for(int& n : nums) out = max(out, n);\n        for(int i = 0; i < nums.size(); i++){\n            for(int j = i; j < nums.size(); j++){\n                unordered_set<int> s;\n                int cur = 0;\n                for(int k = i; k <= j; k++){\n                    if(nums[k] > 0 && !s.count(nums[k])){\n                        s.insert(nums[k]);\n                        cur += nums[k];\n                    }\n                }\n                if(s.size()) out = max(out, cur);\n            }\n        }\n        return out;\n    }\n};","author":"Zach Breger","submissionId":"1575083068"},[]]},{"454":[{"id":"454","fileName":"1575083001.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        sort(a.begin(),a.end());\n        int n=a.size(),i,c=0;\n        if(a[n-1]<0){\n            return a[n-1];\n        }\n        if(a[0]>0){\n            c+=a[0];\n        }\n        for(i=1;i<n;i++){\n            if(a[i]>0&&a[i]!=a[i-1]){\n                c+=a[i];\n            }\n        }\n        return c;\n    }\n};","author":"praveenkumarm1","submissionId":"1575083001"},[]]},{"456":[{"id":"456","fileName":"1575083036.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res, max_num = 0, float('-inf')\n        unique = set()\n        for num in nums:\n            max_num = max(max_num, num)\n            if num in unique or num < 0:\n                continue\n            res += num\n            unique.add(num)\n        if len(unique):\n            return res\n        return max_num","author":"Luong Quang Dung","submissionId":"1575083036"},[]]},{"460":[{"id":"460","fileName":"1575083083.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        subarray = set(filter(lambda x: x > 0, nums))\n        if subarray:\n            return sum(subarray)\n        else:\n            return max(nums)","author":"edbltn","submissionId":"1575083083"},[]]},{"463":[{"id":"463","fileName":"1575083107.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = 0;\n        set<int> ans(nums.begin(), nums.end());\n        for (auto &i : ans) res += max(0, i);\n        return *ans.rbegin() < 0 ? *ans.rbegin() : res;\n    }\n};","author":"Maverick","submissionId":"1575083107"},[{"id":"1316","similarity":0.7708333333333334,"totOverlap":37,"longestOverlap":18}]],"1316":[{"id":"1316","fileName":"611225769.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = 0;\n        set<int> st(nums.begin(), nums.end());\n        for(auto& x : st) res += max(0, x);\n        if(res == 0 && !st.contains(0)) res = *st.rbegin();\n        return res;\n    }\n};","author":"Stupefied Pare6Le","submissionId":"611225769"},[{"id":"463","similarity":0.7708333333333334,"totOverlap":37,"longestOverlap":18}]]},{"467":[{"id":"467","fileName":"1575083144.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum=0;\n        set<int> stt;\n        for(int i=0;i<nums.size();i++)\n            if(nums[i]>0)\n                stt.insert(nums[i]);\n        for(auto &x:stt)\n            sum+=x;\n        if(stt.size()==0) {\n            int mx=INT_MIN;\n            for(int i=0;i<nums.size();i++)\n                mx=max(mx,nums[i]);\n            return mx;\n        }\n        return sum;\n    }\n};","author":"Ujjwal Gupta","submissionId":"1575083144"},[{"id":"483","similarity":0.8470588235294118,"totOverlap":72,"longestOverlap":15},{"id":"657","similarity":0.7439024390243902,"totOverlap":61,"longestOverlap":15},{"id":"1525","similarity":0.7058823529411765,"totOverlap":60,"longestOverlap":7}]],"483":[{"id":"483","fileName":"1575083331.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans =0;\n        set<int> t;\n        for(int i = 0;i< nums.size();i++)\n            {\n                if(nums[i]>0) t.insert(nums[i]);\n            }\n        \n        for(auto it : t) ans+=it;\n        if(t.size()==0){\n            int mini  = nums[0];\n            for(int j = 1;j<nums.size();j++) mini = max(mini,nums[j]);\n            return mini;\n        }\n        return ans;\n        \n    }\n};","author":"Aaditya Vikram Saravana Bhavan","submissionId":"1575083331"},[{"id":"467","similarity":0.8470588235294118,"totOverlap":72,"longestOverlap":15}]],"657":[{"id":"657","fileName":"1575084380.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxi=INT_MIN;\n        unordered_set<int> s;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>0) s.insert(nums[i]);\n\n            maxi=max(maxi,nums[i]);\n        }\n        int ans=0;\n        for(auto it:s) ans+=it;\n\n        if(s.size()==0){\n            ans=maxi;\n        }\n        \n        return ans;\n    }\n};","author":"Siddh Doshi","submissionId":"1575084380"},[{"id":"483","similarity":0.7439024390243902,"totOverlap":61,"longestOverlap":15}]],"1525":[{"id":"1525","fileName":"611227121.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int ans = 0, mn = -0x3f3f3f3f;\n        set<int> st;\n        for(int i = 0; i < n; i++)\n            {\n                if(nums[i] > 0)\n                    st.insert(nums[i]);\n                mn = max(mn, nums[i]);\n            }\n        \n        for(auto e : st)\n            ans += e;\n        if(st.size() == 0) return mn;\n        return ans;\n    }\n};","author":"White","submissionId":"611227121"},[{"id":"483","similarity":0.7058823529411765,"totOverlap":60,"longestOverlap":7}]]},{"468":[{"id":"468","fileName":"1575083151.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res = set()\n        m = -float(\"inf\")\n        for i in nums:\n            if i>0:\n                res.add(i)\n            else:\n                m = max(m, i)\n        return sum(res) if len(res)>0 else m","author":"Honghui Zhang","submissionId":"1575083151"},[]]},{"471":[{"id":"471","fileName":"1575083172.txt","sourceCode":"class Solution {\npublic:\n  int maxSum(vector<int>& nums) {\n    sort(nums.begin(), nums.end());\n    int n = unique(nums.begin(), nums.end()) - nums.begin();\n    int ret = nums[--n];\n    while (n > 0 && nums[n - 1] > 0) ret += nums[--n];\n    return ret;\n  }\n};","author":"Neal@阳谷县","submissionId":"1575083172"},[]]},{"472":[{"id":"472","fileName":"1575083206.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        if (nums.length == 0) {\n            return 0;\n        }\n\n        if (nums.length == 1) {\n            return nums[0];\n        }\n        int minNegative = Integer.MIN_VALUE;\n        Set<Integer> set = new HashSet<>();\n        int sum = 0;\n        for (int num : nums) {\n            if (!set.contains(num) && num >= 0) {\n                sum += num;\n                set.add(num);\n            }\n            if (num < 0) {\n                minNegative = Math.max(minNegative, num);\n            }\n        }\n        if (set.size() == 0) {\n            return minNegative;\n        }\n        return sum;\n    }\n}","author":"A A","submissionId":"1575083206"},[]]},{"473":[{"id":"473","fileName":"1575083194.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n        boolean f = true;\n        for(int x:nums) if(x>=0) f=false;\n        if(f){\n            int max = Integer.MIN_VALUE;\n            for(int x:nums) max = Math.max(max,x);\n            return max;\n        }\n        Set<Integer> set = new HashSet<>();\n        for(int x:nums) set.add(x);\n        int sum = 0;\n        for(int x:set) if(x>0) sum += x;\n        return sum;\n    }\n}","author":"BJbTI92iGT","submissionId":"1575083194"},[]]},{"474":[{"id":"474","fileName":"1575083216.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int i,j,k,n=nums.size(),m,t,ans=0;\n        set<int> s;\n        for(i=0;i<n;i++) {\n            if(nums[i]>0) {\n                s.insert(nums[i]);\n            }\n        }\n        if(s.empty()) {\n            return *max_element(nums.begin(),nums.end());\n        }\n        for(auto it:s) {\n            ans+=it;\n        }\n        return ans;\n    }\n};","author":"shivamkrghosh","submissionId":"1575083216"},[]]},{"478":[{"id":"478","fileName":"1575083325.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        map<int,int> mp;\n        int sum=0;\n        bool flg=false;\n        int maxi=-1000;\n        for(int i=0;i<n;i++)\n            {\n                if(nums[i]>0 && mp.find(nums[i])==mp.end())\n                {\n                    flg=true;\n                    sum+=nums[i];\n                }\n                mp[nums[i]]++;\n                maxi=max(maxi,nums[i]);\n            }\n\n        if(!flg) return maxi;\n        \n        return sum;\n    }\n};","author":"Vardhannn","submissionId":"1575083325"},[]]},{"480":[{"id":"480","fileName":"1575083289.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> m;\n        for (auto &i:nums){\n            m[i]++;\n        }\n        int ans = 0;\n        int count = 0;\n        for (auto i:m){\n            if (i.first>=0) ans += i.first;\n            else count++;\n        }\n\n        if (count==m.size()) ans = m.rbegin()->first;\n\n        return ans;\n    }\n};","author":"Sparsh Dawra","submissionId":"1575083289"},[]]},{"482":[{"id":"482","fileName":"1575083270.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n      set<int>st;\n      int sum=-1;\n      int mxel=INT_MIN;\n      for(auto it:nums){\n         mxel = max(mxel,it);\n         if(it>=0 && st.find(it)==st.end()){\n             st.insert(it);\n             if(sum<0){sum=0;}\n             sum+=it;\n         } \n      }\n      if(sum>=0){return sum;}\n      else{return mxel;}\n        \n    }\n};","author":"Tanishq Singh Rathore","submissionId":"1575083270"},[]]},{"484":[{"id":"484","fileName":"1575083239.txt","sourceCode":"class Solution {\npublic:\nusing ll= long long;\nusing sg=string;\ntypedef pair<int, int> pll;\ntypedef vector<int> vll;\ntypedef vector<pll> vpll; \ntypedef map<int,int> mll;\n#define ff first\n#define ss second\n#define pb push_back\n#define fl(i,n) for(int i=0;i<n;i++)\n#define vr(v) v.begin(),v.end()\n#define flp(i,a,b) for(int i = a; i <= b; i++)\n    int maxSum(vector<int>& v) {\n        int n=v.size();\n        mll mpp;\n        ll pos=0;\n        fl(i,n){\n            mpp[v[i]]++;\n            pos+=(v[i]>=0);\n        }\n        int ans=0;\n        for(auto it:mpp){\n            if(it.ff<=0){\n                continue;\n            }\n            ans+=it.ff;\n        }\n        return pos==0?*max_element(v.begin(),v.end()):ans;\n    }\n};","author":"utkarsh prakash","submissionId":"1575083239"},[]]},{"490":[{"id":"490","fileName":"1575083401.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        cnt = Counter(nums)\n        if max(cnt.keys()) >=0:\n            return sum(num for num in cnt.keys() if num >=0)\n        else:\n            return max(cnt.keys())","author":"codemonkey66","submissionId":"1575083401"},[]]},{"492":[{"id":"492","fileName":"1575083428.txt","sourceCode":"#define f first\n#define s second\n#define pb push_back\n#define all(x) x.begin(), x.end()\n#define sz(x) (long long)(x).size()\n#define pii pair<long long, long long>\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int, int> mp;\n        int sum=0;\n        for (auto x : nums) {\n            mp[x]++;\n            sum+=x;\n        }\n        int ans = 0,times=0;\n        for (auto x : mp) {\n            if(x.f>=0){\n                ans += x.f;\n                times++;\n            }\n        }\n        if(times==0){\n            ans=INT_MIN;\n            for(auto x:mp){\n                ans=max(ans,x.f);\n            }\n        }\n        return ans;\n    }\n};","author":"Siddharth Joshi","submissionId":"1575083428"},[]]},{"493":[{"id":"493","fileName":"1575083465.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int res = (int)Arrays.stream(nums).distinct().filter(num -> num > 0).sum();\n        if(res == 0) {\n            res = Arrays.stream(nums).distinct().filter(num -> num <= 0).max().orElse(0);\n        }\n        return res;\n    }\n}","author":"ws1255","submissionId":"1575083465"},[]]},{"495":[{"id":"495","fileName":"1575083471.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        int n=nums.size();\n        bool flag=false;\n        for(auto i:nums){\n            if(i>0){st.insert(i);flag=true;}\n        }\n        int sum=0;\n        if(flag==false){\n            sort(nums.begin(),nums.end());\n            return nums[n-1];\n        }\n        for(auto i:st)sum+=i;\n        return sum;\n    }\n};","author":"LikithReddy","submissionId":"1575083471"},[]]},{"496":[{"id":"496","fileName":"1575083408.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        M = max(nums)\n        if M < 0:\n            return M\n        seen = set()\n        new_nums = []\n        for x in nums:\n            if x in seen or x <= 0:\n                continue\n            else:\n                seen.add(x)\n                new_nums.append(x)\n        return sum(new_nums)\n        ","author":"Connor Colombe","submissionId":"1575083408"},[]]},{"497":[{"id":"497","fileName":"1575083430.txt","sourceCode":"class Solution:\n    def maxSum(self, a: List[int]) -> int:\n        \n        n = len(a)\n        a.sort()\n        s = set()\n        res = 0\n        cnt = 0\n        for i in range(n):\n            if a[i] not in s and a[i] > 0:\n                s.add(a[i])\n                res += a[i]\n                cnt +=1\n        if cnt == 0:\n            return a[-1]\n        return res\n                ","author":"nazeeeef007","submissionId":"1575083430"},[]]},{"499":[{"id":"499","fileName":"1575083493.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        int ans=0;\n        int n=nums.size();\n        int val=*max_element(nums.begin(),nums.end());\n        int f=0;\n        for(auto it:nums){\n            if(st.find(it)==st.end() && it>0){\n                ans+=it;\n                st.insert(it);\n                f=1;\n                \n            }\n        }\n        if(f)\n        return ans;\n        return val;\n    }\n};","author":"Lakshya Shukla","submissionId":"1575083493"},[]]},{"500":[{"id":"500","fileName":"1575083490.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        var s = new TreeSet<Integer>();\n        for (int i : nums) {\n            s.add(i);\n        }\n        int res = 0;\n        for (int i : s) {\n            if (i > 0) {\n                res += i;\n            }\n        }\n        if (res == 0) {\n            if (s.size() == 1) {\n                return s.first();\n            }\n            return s.last();\n        }\n        return res;\n    }\n}","author":"Ali","submissionId":"1575083490"},[]]},{"501":[{"id":"501","fileName":"1575083487.txt","sourceCode":"public class Solution {\n    public int MaxSum(int[] nums) {\n        if (nums.All(x => x < 0)) {\n            return nums.Max();\n        }\n        return nums.Distinct().Where(x => x > 0).Sum();\n    }\n}","author":"leducthinh55","submissionId":"1575083487"},[]]},{"503":[{"id":"503","fileName":"1575083495.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        \n        int n = nums.size();\n        unordered_map<int, int> map;\n        int pos = 0;\n        for(auto num : nums) {\n            if(num > 0) ++ pos;\n            map[num] ++;\n        }\n        int sum = 0;\n\n        if(pos == 0){\n            sum = *max_element(nums.begin(), nums.end());\n            return sum;\n        }\n        for(auto &p : map){\n            if(p.first > 0) sum += p.first;\n        }\n        return sum;\n    }\n};","author":"Gunanka D","submissionId":"1575083495"},[]]},{"505":[{"id":"505","fileName":"1575083511.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0 ;\n        int n = nums.size();\n        map<int, int> mp;\n        bool flag = false;\n        for (int i=0; i<n; i++) {\n            if (nums[i]>=0) {\n                if (mp[nums[i]]==0) {\n                    sum += nums[i];\n                    mp[nums[i]]=1;\n                    flag  = true;\n                }\n            }\n        }\n        if (!flag) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        return sum;\n    }\n};","author":"codeforpurpose","submissionId":"1575083511"},[]]},{"508":[{"id":"508","fileName":"1575083522.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int, int>alpha;\n    \n        int ans = 0;\n        for(auto &x : nums){\n            if(!alpha[x] && x > 0){\n                ans += x;\n                alpha[x] = 1;\n            }\n        }\n        sort(nums.begin(), nums.end());\n        if(ans == 0)return nums[nums.size() - 1];\n        return ans;\n    }\n};","author":"Aashutosh Singh","submissionId":"1575083522"},[]]},{"509":[{"id":"509","fileName":"1575083525.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        nums.sort(reverse=True)\n\n        ans = nums[0]\n\n        pre = nums[0]\n\n        for x in nums[1:]:\n            if x < 0:\n                break\n            else:\n                if x != pre:\n                    ans +=x\n                    pre = x\n\n        return ans\n        ","author":"ShadowLau","submissionId":"1575083525"},[]]},{"510":[{"id":"510","fileName":"1575083538.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean hasPositive = false;\n        int maxElem = Integer.MIN_VALUE;\n        Set<Integer> seen = new HashSet<>();\n        int sum = 0;\n        \n        for (int num : nums) {\n            maxElem = Math.max(maxElem, num);\n            if (num > 0 && !seen.contains(num)) {\n                seen.add(num);\n                sum += num;\n                hasPositive = true;\n            }\n        }\n        return hasPositive ? sum : maxElem;\n    }\n}","author":"Shivansh Shukla","submissionId":"1575083538"},[]]},{"511":[{"id":"511","fileName":"1575083516.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        visited = set()\n        answer = 0\n        smaller = float('-inf')\n        count = 0\n        for i in range(n):\n            num = nums[i]\n            if num in visited: continue\n            if num <= 0:\n                smaller = max(smaller, num)\n                continue\n            answer += num\n            count += 1\n            visited.add(num)\n        if count == 0:\n            answer = smaller\n        return answer","author":"Max Chang","submissionId":"1575083516"},[]]},{"512":[{"id":"512","fileName":"1575083543.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        ret = 0\n        largest_neg = -float('inf')\n        added = False\n        for n in nums:\n            if n not in seen and n >= 0:\n                ret += n\n                added = True\n            else:\n                if n < 0 and n > largest_neg:\n                    largest_neg = n\n            seen.add(n)\n\n        \n        return ret if added else largest_neg\n                \n            \n            \n        ","author":"Ali Nikseresht","submissionId":"1575083543"},[]]},{"519":[{"id":"519","fileName":"1575083556.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        # sort the array\n        nums.sort()\n        umap = {}\n        n = len(nums)\n        ans = 0\n        for i in range(n-1,-1,-1):\n            if nums[i]>0 and nums[i] not in umap:\n                ans += nums[i]\n                umap[nums[i]] = 1\n        # if umap is empty, there are no poistive numbers in the array.\n        if len(umap) == 0:\n            return nums[-1]\n        return ans","author":"Utsav Jha","submissionId":"1575083556"},[]]},{"520":[{"id":"520","fileName":"1575083568.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxNeg = INT_MIN;\n        unordered_set<int> st;\n        int sum = 0;\n        for(auto x : nums){\n            if(x < 0){\n                maxNeg = max(maxNeg, x);\n            } else if(!st.count(x)){\n                st.insert(x);\n                sum += x;\n            }\n        }\n        if(st.size() == 0) return maxNeg;\n        return sum;\n    }\n};","author":"thilak","submissionId":"1575083568"},[]]},{"521":[{"id":"521","fileName":"1575083584.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        int n = nums.size();\n        int maxVal = ranges::max(nums);\n\n        if (maxVal < 0) return maxVal;\n\n        int sum = 0;\n        set<int> key;\n\n        for (auto num : nums) {\n\n            if (num > 0) {\n                key.insert(num);\n            }\n        }\n\n        for (auto num : key) {\n            sum += num;\n        }\n\n        return sum;\n    }\n};","author":"Aditya Ranjan","submissionId":"1575083584"},[]]},{"522":[{"id":"522","fileName":"1575083588.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n        Arrays.sort(nums);\n        if (nums[n-1] < 0) {\n            return nums[n-1];\n        }\n        var set = new HashSet<Integer>();\n        int ans = 0;\n        for (int p : nums) {\n            if (p < 0 || set.contains(p)) {\n                continue;\n            }\n            set.add(p);\n            ans += p;\n        }\n        return ans;\n    }\n}","author":"resotto","submissionId":"1575083588"},[]]},{"525":[{"id":"525","fileName":"1575083607.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& v) {\n        int n = v.size(), ans = 0;\n\n        map<int, int> m;\n        int ct = 0, mx = -200;\n        for(int i = 0; i < n; i ++){\n            if(v[i] >= 0) {\n                if(m[v[i]] == 0) {\n                    ans += v[i];\n                    m[v[i]] = 1;\n                    ct ++;\n                }\n            }\n            mx = max(mx, v[i]);\n        }\n        if(ct) return ans;\n        else return mx;\n    }\n};","author":"Rounak Kumar","submissionId":"1575083607"},[]]},{"526":[{"id":"526","fileName":"1575083610.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int i = 0; \n        while(i<nums.size() && nums[i]<0) i++;\n        if(i>=nums.size()) return nums.back();\n        int ans = nums[i++];\n        for(; i<nums.size(); i++){\n            if(nums[i] != nums[i-1]) ans+=nums[i];\n        }\n        return ans;\n    }\n};","author":"Gurekamjot Singh","submissionId":"1575083610"},[]]},{"528":[{"id":"528","fileName":"1575083608.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = 0;\n        int mx = -1000;\n        unordered_set<int> s;\n        for(int num : nums) {\n            s.insert(num);\n        }\n        for(int num : s) {\n            if(num > 0) {\n                res += num;\n            }\n            else {\n                mx = max(mx, num);\n            }\n        }\n        return res > 0 ? res : mx;\n    }\n};","author":"zubacii","submissionId":"1575083608"},[]]},{"532":[{"id":"532","fileName":"1575083633.txt","sourceCode":"func maxSum(nums []int) int {\n\tmark := make([]bool, 101)\n\tsum, mn := 0, -100\n\tfor _, num := range nums {\n\t\tif num >= 0 {\n\t\t\tmn = 0\n\t\t\tif !mark[num] {\n\t\t\t\tmark[num] = true\n\t\t\t\tsum += num\n\t\t\t}\n\t\t} else {\n\t\t\tmn = max(mn, num)\n\t\t}\n\t}\n\n\tif sum == 0 {\n\t\treturn mn\n\t}\n\treturn sum\n}\n","author":"yap","submissionId":"1575083633"},[]]},{"534":[{"id":"534","fileName":"1575083676.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = 0;\n        unordered_set<int> vis;\n        sort(begin(nums), end(nums));\n        for (auto& v : nums) {\n            if (v >= 0 && vis.count(v) == 0) {\n                vis.insert(v);\n                res += v;\n            }\n        }\n        if (vis.empty()) {\n            res = nums.back();\n        }\n        return res;\n    }\n};","author":"k487237","submissionId":"1575083676"},[]]},{"535":[{"id":"535","fileName":"1575083689.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int>mp;\n        int sum=0,neg=INT_MIN,z=-1;\n        for(int i:nums){\n            if(i>0){\n                if(mp[i]==0){\n                    mp[i]=1;\n                    sum+=i;\n                }\n            }\n            else if(i==0){\n                z=0;\n            }\n            else{\n                neg=max(neg,i);\n            }\n        }\n        if(sum==0){\n            if(z==-1)return neg;\n            return 0;\n        }\n        return sum;\n    }\n};","author":"Rithish Kumar","submissionId":"1575083689"},[]]},{"537":[{"id":"537","fileName":"1575083691.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashMap<Integer, Integer> map = new HashMap<>();\n        int ans = 0;\n        boolean used = false;\n        for (int i: nums) {\n            if (map.containsKey(i)) {\n                continue;\n            }\n            map.put(i, 1);\n            if (i > 0) {\n                used = true;\n            ans += i;\n            }\n        }\n        if (nums.length == 1) {\n            return nums[0];\n        }\n        if (!used) {\n             Arrays.sort(nums);\n            return nums[nums.length-1];\n        }\n        return ans;\n    }\n}","author":"Hastorius","submissionId":"1575083691"},[]]},{"538":[{"id":"538","fileName":"1575083656.txt","sourceCode":"\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<bool> vb;\ntypedef vector<string> vs;\ntypedef unordered_map<int,int> umi;\ntypedef unordered_map<char,int> umci;\ntypedef map<int, int> aomi;\ntypedef map<char,int> aomci;\ntypedef map<int, int, greater<int>> domi;\ntypedef unordered_set<int> usi;\ntypedef unordered_set<char> usc;\ntypedef set<int> aosi;\ntypedef set<int, greater<int>> dosi;\ntypedef unordered_multiset<int> umsi;\ntypedef multiset<int> aomsi;\ntypedef multiset<int, greater<int>> domsi;\ntypedef priority_queue<int, vector<int>, greater<int>> minHeap;\ntypedef priority_queue<int> maxHeap;\ntypedef pair<int,int> pi;\ntypedef pair<long long, int> pli;\ntypedef pair<long long, long long> pll;\n#define PB push_back\n#define PPB pop_back\n#define LB lower_bound\n#define UB upper_bound\n#define AREP(i, a)   for(auto &i: a)\n#define REP(i, a, b)    for(auto i = a; i<b; i++)\n#define REPE(i, a, b)    for(auto i = a; i<=b; i++)\n#define RREP(i, a, b)   for(auto i = a; i>=b; i--)\n#define asort(v)    sort(v.begin(), v.end());\n#define dsortvi(v)  sort(v.begin(), v.end(), greater<int>());\n\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        usi st;\n        int mx = INT_MIN;\n        AREP(i, nums){\n            mx = max(mx, i);\n            if(i > 0)\n                st.insert(i);\n        }\n        if(mx <= 0)\n            return mx;\n        int ans = 0;\n        AREP(i, st)\n            ans += i;\n        return ans;\n    }\n};","author":"Yash Wairagade","submissionId":"1575083656"},[]]},{"539":[{"id":"539","fileName":"1575083693.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean[] numsSeen = new boolean[101];\n        int sum = 0, max = nums[0];\n        for(int num : nums) {\n            max = Math.max(num, max);\n            if(num < 0 || numsSeen[num]) continue;\n            sum += num;\n            numsSeen[num] = true;\n        }\n        \n        return sum == 0 ? max : sum;\n    }\n}","author":"Nicholas Ulman","submissionId":"1575083693"},[]]},{"540":[{"id":"540","fileName":"1575083692.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        unordered_set<int> st;\n        for(int ele : nums) st.insert(ele);\n\n        int sum = 0;\n        bool flag = false;\n        for(auto ele : st){\n            if(ele > 0){\n                sum += ele;\n                flag = true;\n            }\n        }\n        if(flag) return sum;\n        else{\n            int maxEle = -1e9;\n            for(int i=0; i<n; i++){\n                maxEle = max(maxEle, nums[i]);\n            }\n            return maxEle;\n        }\n    }\n};","author":"Koushik Debnath","submissionId":"1575083692"},[]]},{"541":[{"id":"541","fileName":"1575083696.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort()\n        if nums[-1]<0: return nums[-1]\n        s=0\n        st=set()\n        for val in nums:\n            if val in st: continue\n            if val>=0:\n                s+=val\n                st.add(val)\n        return s","author":"Cheng-Shun Liu","submissionId":"1575083696"},[]]},{"543":[{"id":"543","fileName":"1575083702.txt","sourceCode":"use std::collections::HashSet;\n\n// fn main() {\n//     // let mut stdin = LineSource::new(BufReader::new(io::stdin()));\n//     // macro_rules! input(($($tt:tt)*) => (proconio::input!(from &mut stdin, $($tt)*)));\n// }\n\n// #[allow(dead_code)]\n// struct Solution;\n\nimpl Solution {\n    pub fn max_sum(nums: Vec<i32>) -> i32 {\n        let mut set = HashSet::new();\n        let mut ans = 0;\n        let mut cnt = 0;\n        for &num in nums.iter() {\n            if set.insert(num) {\n                if num > 0 {\n                    ans += num;\n                    cnt += 1;\n                }\n            }\n        }\n        if cnt == 0 {\n            return *nums.iter().max().unwrap();\n        }\n        ans\n    }\n}\n","author":"nayo0513","submissionId":"1575083702"},[]]},{"544":[{"id":"544","fileName":"1575083703.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& v) {\n        int n = v.size();\n        sort(v.begin(),v.end());\n        int sum = v[n-1];\n        set<int>st;\n        st.insert(v[n-1]);\n        for(int i=n-2;i>=0;i--){\n            if(v[i]<0)break;\n            if(st.count(v[i])>0)continue;\n            sum += v[i];\n            st.insert(v[i]);\n        }\n        return sum;\n    }\n};","author":"Ankush Gaurav","submissionId":"1575083703"},[{"id":"1880","similarity":0.7777777777777778,"totOverlap":63,"longestOverlap":27}]],"1880":[{"id":"1880","fileName":"611264387.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        sort(nums.begin(), nums.end());\n        int res = nums[n - 1];\n        set<int> s;\n        s.insert(nums[n - 1]);\n        for(int i = n - 2; i >= 0; i--){\n            if(!s.count(nums[i]) && nums[i] > 0){\n                res += nums[i];\n                s.insert(nums[i]);\n            }\n        }\n        \n        return res;\n    }\n};","author":"Upbeat HugleukS","submissionId":"611264387"},[{"id":"544","similarity":0.7777777777777778,"totOverlap":63,"longestOverlap":27}]]},{"545":[{"id":"545","fileName":"1575083707.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        se = set()\n        ma = float('-inf')\n        for num in nums:\n            if num>0:\n                se.add(num)\n            ma = max(ma,num)\n        result = 0\n        for num in se:\n            result += num\n        if result==0 and ma<0:\n            return ma\n        return result","author":"Who cares","submissionId":"1575083707"},[]]},{"547":[{"id":"547","fileName":"1575083714.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        M = -101\n        for num in nums:\n            M = max(M, num)\n        if M <= 0:\n            return M\n        s = set()\n        res = 0\n        for num in nums:\n            if num > 0 and num not in s:\n                s.add(num)\n                res += num\n        return res","author":"Remineva","submissionId":"1575083714"},[]]},{"548":[{"id":"548","fileName":"1575083721.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>mp;\n        for(auto i : nums) mp[i]++;\n        int pos = 0;\n        int sum = 0;\n        int neg = INT_MIN;\n        for(auto i : mp){\n            if(i.first >= 0) pos++;\n            if(i.first >= 0) sum = sum + i.first;\n            if(i.first < 0) neg = max(neg,i.first);\n        }\n        if(pos==0) return neg;\n        return sum;\n    }\n};","author":"sai_uma_sankar","submissionId":"1575083721"},[]]},{"549":[{"id":"549","fileName":"1575083727.txt","sourceCode":"impl Solution {\n    pub fn max_sum(nums: Vec<i32>) -> i32 {\n        let uniqs: std::collections::HashSet<&i32> = nums.iter().filter(|&&num| num > 0).collect();\n        if uniqs.is_empty() {\n            *nums.iter().max().unwrap()\n        } else {\n            uniqs.into_iter().sum::<i32>()\n        }\n    }\n}","author":"Mikko","submissionId":"1575083727"},[]]},{"550":[{"id":"550","fileName":"1575083725.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int ans = 0;\n        set<int> st;\n        sort(nums.begin(),nums.end());\n        if(nums[n-1] < 0) return nums[n-1];\n        for(auto ele : nums) st.insert(ele);\n        for(auto ele : st) if(ele>0) ans += ele;\n        \n        return ans;\n    }\n};","author":"Vishal Rathod","submissionId":"1575083725"},[{"id":"750","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":10}]],"750":[{"id":"750","fileName":"1575085004.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n       int sum = 0 , n = nums.size();\n        unordered_set<int> us1 ;\n\n        sort(nums.begin() , nums.end());\n\n        if(nums[n-1] < 0){\n            return nums[n-1];\n        }\n\n        else{\n            for(auto i:nums){\n                if(i > 0){\n                    us1.insert(i);\n                }\n            }\n        }\n\n        for(auto i:us1){\n            sum += i ;\n        }\n\n        return sum ;\n    }\n};","author":"progressor","submissionId":"1575085004"},[{"id":"550","similarity":0.7076923076923077,"totOverlap":46,"longestOverlap":10}]]},{"551":[{"id":"551","fileName":"1575083738.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end(), greater<>());\n        if(nums[0] < 0) return nums[0];\n        int res = 0;\n        unordered_map<int, int> hash;\n        for(auto& num : nums){\n            if(num < 0) break;\n            if(hash[num]) continue;\n            hash[num] = 1;\n            res += num;\n        }\n        return res;\n    }\n};","author":"lionl1106","submissionId":"1575083738"},[]]},{"554":[{"id":"554","fileName":"1575083743.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maximum = INT_MIN;\n        set<int> remaining;\n        for (int i = 0; i < nums.size(); i++) {\n            remaining.insert(nums[i]);\n            maximum = max(maximum, nums[i]);\n        }\n\n        if (maximum >= 0) {\n            int res = 0;\n            for (auto it = remaining.begin(); it != remaining.end(); it++)\n                if (*it > 0)\n                    res += *it;\n            return res;\n        }\n        return maximum;\n    }\n};","author":"Matt Akin","submissionId":"1575083743"},[]]},{"556":[{"id":"556","fileName":"1575083750.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos_nums = set(n for n in nums if n >= 0)\n        if not pos_nums:\n            return max(nums)\n        print(pos_nums)\n        return sum(pos_nums)\n        ","author":"thedude7181","submissionId":"1575083750"},[]]},{"557":[{"id":"557","fileName":"1575083771.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        sort(nums.begin(),nums.end());\n        if(nums.back()<0){\n            return nums.back();\n        }\n        for(int i=0; i<nums.size(); i++){\n            if(nums[i]<0) continue;\n            if(i==0 || nums[i-1]!=nums[i]) sum+=nums[i];\n        }\n        return sum;\n    }\n};","author":"Huy Phước","submissionId":"1575083771"},[]]},{"558":[{"id":"558","fileName":"1575083740.txt","sourceCode":"#define ll long long\n#define pb push_back\n#define F first\n#define S second\n#define sorta(a) sort(a.begin(), a.end())\n#define sortd(a) sort(a.rbegin(), a.rend())\n#define rev(a) reverse(a.begin(), a.end())\n#define pt(a) cout<<\"n: \"; for(int x: a) cout<<x<<' '; cout<<'n';\n\nconst ll I = LONG_LONG_MAX;\nconst int imx = INT_MAX;\nconst int mod = 1e9+7;\nconst int N = 5e5+1;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        map<int, int> mp;\n      for (int x: a) {\n        mp[x]++;\n      }\n\n      vector<int> b;\n      for (auto i: mp) {\n        b.pb(i.F);\n      }\n\n      sortd(b);\n      int ans = b[0];\n      for (int i = 1; i < b.size(); i++) {\n        if (ans + b[i] > ans) {\n          ans += b[i];\n        }\n        else break;\n      }\n\n      return ans;\n    }\n};","author":"arjun2024","submissionId":"1575083740"},[]]},{"562":[{"id":"562","fileName":"1575083819.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, int> vis;\n        int ans=0;\n        int mx=-1e9;\n        for(int u:nums){\n            mx=max(mx, u);\n            if(u>0 && !vis[u]){\n                ans+=u;\n            }\n            vis[u]=1;\n        }\n\n        if(mx<0){\n            ans=mx;\n        }\n        return ans;\n    }\n};","author":"coldspeed","submissionId":"1575083819"},[]]},{"564":[{"id":"564","fileName":"1575083830.txt","sourceCode":"class Solution {\n  public int maxSum(int[] nums) {\n    int smallest = Integer.MIN_VALUE;\n    if (nums.length <= 1) {\n      return nums[0];\n    }\n    Set<Integer> set = new HashSet<>();\n    int ret = 0;\n    int select = 0;\n    \n    for (int n : nums) {\n      smallest = Math.max(n, smallest);\n      if (n > 0 && !set.contains(n)) {\n        set.add(n);\n        ret += n;\n        select++;\n      }\n    }\n    return (select == 0) ? smallest : ret;\n  }\n}","author":"Zachary Bi","submissionId":"1575083830"},[]]},{"566":[{"id":"566","fileName":"1575083848.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        # Get all unique positive numbers\n        positives = {x for x in nums if x > 0}\n        if positives:\n            return sum(positives)\n        # If no positive numbers, check for zero.\n        if 0 in nums:\n            return 0\n        # Otherwise, all numbers are negative; return the maximum negative number.\n        return max(nums)\n","author":"MohamedAnas123","submissionId":"1575083848"},[]]},{"567":[{"id":"567","fileName":"1575083847.txt","sourceCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSum = function(nums) {\n    const max = Math.max(...nums)\n    let ans = 0, found = false\n    for (let num of new Set(nums)) {\n        if (num >= 0) {\n            found = true\n            ans += num\n        }\n    }\n    return found ? ans : max\n};","author":"Harttle","submissionId":"1575083847"},[]]},{"568":[{"id":"568","fileName":"1575083853.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int res = 0, c = 0;\n        for (int i = nums.length - 1; i >= 0; i--) {\n            if (i < nums.length - 1 && nums[i] == nums[i + 1] || nums[i] < 0) continue;\n            res += nums[i];\n            c++;\n        }\n        return c == 0 ? nums[nums.length - 1] : res;\n    }\n}","author":"Arucade","submissionId":"1575083853"},[]]},{"569":[{"id":"569","fileName":"1575083860.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mn=*max_element(nums.begin(),nums.end());\n\n        int ans=0;\n        map<int,int> mp;\n\n        for(auto num:nums){\n            mp[num]++;\n        }\n\n        for(auto it:mp){\n            if(it.first>0){\n                ans+=it.first;\n            }\n        }\n\n        if(ans==0){\n            return mn;\n        }\n\n        return max(ans,mn);\n\n        \n    }\n};","author":"Nandan T S","submissionId":"1575083860"},[]]},{"570":[{"id":"570","fileName":"1575083864.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>st;\n        int ans=0;\n        bool f=0;\n        int maxi=INT_MIN;\n        for(int i=0;i<nums.size();i++)\n            {\n                if(nums[i]<0){\n                    maxi=max(maxi,nums[i]);\n                    continue;\n                }\n                else{\n                    if(!st.contains(nums[i])){\n                        ans+=nums[i];\n                        f=1;\n                        st.insert(nums[i]);\n                    }\n                }\n            }\n        if(f==0)return maxi;\n        return ans;\n    }\n};","author":"Shivesh Dixit","submissionId":"1575083864"},[]]},{"573":[{"id":"573","fileName":"1575083884.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<bool> vis(101, false);\n        \n        int lg=INT_MIN;\n        int sum=0;\n        int count=0;\n        for(auto &el:nums)\n        {\n            lg=max(lg, el);\n            if(el>0 && !vis[el]) \n            {\n                vis[el]=true;\n                sum+=el;\n                ++count;\n            }\n        }\n\n        if(count>0)\n        {\n            return max(sum, lg);\n        }\n\n        return lg;\n    }\n};","author":"Mintu Jupally","submissionId":"1575083884"},[]]},{"574":[{"id":"574","fileName":"1575083900.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> n;\n        for(int i = 0; i < nums.size(); i++){\n            n.insert(nums[i]);\n        }\n        int total = 0;\n        bool found = false;\n        for(int num : n){\n            if(num >= 0){\n                found = true;\n                total += num;\n            }\n        }\n        if(!found){\n            int mx = INT_MIN;\n            for(int num : n){\n                mx = max(mx,num);\n            }\n            return mx;\n        }\n        else return total;\n    }\n};","author":"xorfftdp","submissionId":"1575083900"},[]]},{"575":[{"id":"575","fileName":"1575083910.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        TreeSet<Integer> hs = new TreeSet<>((x,y)->y-x);\n        for(int num: nums) hs.add(num);\n        int sum=0;\n        if(hs.first() < 0) return hs.first();\n        for(int num: hs) if(num > 0) sum += num;\n        return sum;\n    }\n}","author":"Arpit Rathore","submissionId":"1575083910"},[]]},{"579":[{"id":"579","fileName":"1575083924.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        unique_nums = set(nums)\n        positives = [x for x in unique_nums if x > 0]\n        if positives:\n            return sum(positives)\n        return max(nums)\n","author":"varshithchilukuri","submissionId":"1575083924"},[]]},{"582":[{"id":"582","fileName":"1575083948.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, int>mp;\n        int n = nums.size();\n        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            if (!mp.count(nums[i]) && nums[i] > 0) {\n                mp[nums[i]] = 1;\n                sum += nums[i];\n            }\n        }\n\n        if (sum == 0) {\n            int mx = INT_MIN;\n            for (int i = 0; i < n; i++) {\n                mx = max(mx, nums[i]);\n            }\n            return mx;\n        }\n            \n        return sum;\n     }\n};","author":"Aryav","submissionId":"1575083948"},[]]},{"585":[{"id":"585","fileName":"1575083971.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        int maxi = -1e9;\n        for(int i=0;i<nums.size();i++){\n            maxi = max(maxi,nums[i]);\n        }\n        unordered_map<int,int>mpp;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]<0 || mpp.count(nums[i]))continue;\n            mpp[nums[i]]++;\n            ans += nums[i];\n        }\n        if(mpp.size()==0)return maxi;\n        return ans;\n    }\n};","author":"Siddhant kale","submissionId":"1575083971"},[]]},{"587":[{"id":"587","fileName":"1575083975.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<bool> used(100);\n        int ms = 0;\n\n\n        for(int num : nums) {\n            if(num <= 0 || used[num - 1]) {\n                continue;\n            }\n            used[num - 1] = true;\n            ms += num;\n        }\n\n        if(ms == 0) {\n            sort(nums.begin(), nums.end());\n            return nums[nums.size() - 1];\n        }\n\n        return ms;\n    }\n};","author":"Joey Mucci","submissionId":"1575083975"},[]]},{"352":[{"id":"352","fileName":"1575082332.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        TreeSet<Integer> set = new TreeSet<>();\n        for(int num : nums) set.add(num);\n        Queue<Integer> q = new PriorityQueue<>(Collections.reverseOrder());\n        for(int num : set)\n        {\n            q.offer(num);\n        }\n        int re = 0;\n        // minimum 1 element;\n        re += q.poll();\n        while(!q.isEmpty() && q.peek() >= 0) re += q.poll();\n        return re;\n    }\n}","author":"xianglaniunan","submissionId":"1575082332"},[{"id":"352","similarity":0.7349397590361446,"totOverlap":61,"longestOverlap":19}]],"591":[{"id":"591","fileName":"1575083995.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<>();\n        for (int n : nums)\n            set.add(n);\n        List<Integer> list = new ArrayList<>(set);\n        list.sort(Comparator.reverseOrder());\n        int sum = list.get(0);\n        for (int i = 1; i < list.size(); i++) \n            if (list.get(i) > 0)\n                sum += list.get(i);\n        return sum;\n    }\n}","author":"samzhu333","submissionId":"1575083995"},[{"id":"1559","similarity":0.75,"totOverlap":63,"longestOverlap":14},{"id":"1559","similarity":0.7294117647058823,"totOverlap":62,"longestOverlap":19},{"id":"591","similarity":0.7349397590361446,"totOverlap":61,"longestOverlap":19},{"id":"1701","similarity":0.759493670886076,"totOverlap":60,"longestOverlap":12}]],"592":[{"id":"592","fileName":"1575084002.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        \n        for (int num : nums)\n        {\n            set.add(num);\n        }\n        \n        List<Integer> list = new ArrayList<>();\n        \n        for (int num : set)\n        {\n            list.add(num);\n        }\n        \n        Collections.sort(list);\n        \n        int ans = list.get(list.size() - 1);\n        int sum = 0;\n        \n        for (int i = list.size() - 1; i >= 0; i--)\n        {\n            sum += list.get(i);\n            ans = Math.max(ans, sum);\n        }\n        \n        return ans;\n    }\n}","author":"FxxkLCImNotCheating","submissionId":"1575084002"},[{"id":"592","similarity":0.7294117647058823,"totOverlap":62,"longestOverlap":19}]],"1559":[{"id":"1559","fileName":"611227390.txt","sourceCode":"class Solution {\n  public int maxSum(int[] nums) {\n    Set<Integer> set = new HashSet<>();\n    for (int num : nums) {\n      set.add(num);\n    }\n    List<Integer> list = new ArrayList<>(set);\n    list.sort(Comparator.naturalOrder());\n    int len = list.size(), sum = list.get(len - 1);\n    for (int i = 0; i < len - 1; i++) {\n      int v = list.get(i);\n      if (v > 0) {\n        sum += v;\n      }\n    }\n    return sum;\n  }\n}","author":"lifam","submissionId":"611227390"},[{"id":"591","similarity":0.75,"totOverlap":63,"longestOverlap":14}]],"1701":[{"id":"1701","fileName":"611229446.txt","sourceCode":"import java.util.TreeSet;\n\nclass Solution {\n    public int maxSum(int[] nums) {\n        TreeSet<Integer> set = new TreeSet<>();\n        for (int x : nums) {\n            set.add(x);\n        }\n        int ans = 0;\n        while (!set.isEmpty() && set.last() > 0) {\n            ans += set.pollLast();\n        }\n        if (ans == 0) {\n            ans = set.pollLast();\n        }\n        return ans;\n        \n    }\n}","author":"Itsuki","submissionId":"611229446"},[{"id":"352","similarity":0.759493670886076,"totOverlap":60,"longestOverlap":12}]]},{"594":[{"id":"594","fileName":"1575084029.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        int n=nums.size();\n        map <int,int> m;\n        for(int i=0;i<n;i++){\n            if(nums[i]>0 && m[nums[i]]==0){\n                ans+=nums[i];\n                m[nums[i]]++;\n            }\n        }\n        if(ans==0){\n            ans=-101;\n            for(int i=0;i<n;i++){\n                ans=max(ans,nums[i]);\n            }\n        }\n        return ans;\n    }\n};","author":"Manya_24","submissionId":"1575084029"},[{"id":"1071","similarity":0.8295454545454546,"totOverlap":73,"longestOverlap":21},{"id":"669","similarity":0.8024691358024691,"totOverlap":65,"longestOverlap":20},{"id":"905","similarity":0.9142857142857143,"totOverlap":64,"longestOverlap":20},{"id":"1540","similarity":0.8,"totOverlap":64,"longestOverlap":14},{"id":"1103","similarity":0.8378378378378378,"totOverlap":62,"longestOverlap":17},{"id":"1690","similarity":0.7894736842105263,"totOverlap":60,"longestOverlap":17},{"id":"1026","similarity":0.7162162162162162,"totOverlap":53,"longestOverlap":7},{"id":"996","similarity":0.7058823529411765,"totOverlap":48,"longestOverlap":20}]],"669":[{"id":"669","fileName":"1575084443.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        int sum=0;\n       unordered_map<int,int>mp;\n        for(int i=0;i<n;i++){\n            if(nums[i]>=0 && mp[nums[i]]==0){\n                sum+=nums[i];\n                mp[nums[i]]++;\n            }\n            \n        }\n        if(sum==0) return *max_element(nums.begin(),nums.end());\n        return sum;\n    }\n};","author":"chinni_17","submissionId":"1575084443"},[{"id":"594","similarity":0.8024691358024691,"totOverlap":65,"longestOverlap":20}]],"905":[{"id":"905","fileName":"1575086158.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int ans = 0;\n        map<int, int> mp;\n        for(int i = 0; i<n; i++) {\n            if (mp[nums[i]] == 0 && nums[i] > 0) {\n                ans += nums[i];\n                mp[nums[i]]++;\n            }\n        }\n        \n        if (ans == 0)\n            return *max_element(nums.begin(), nums.end());\n        return  ans;\n    }\n};","author":"s985060740","submissionId":"1575086158"},[{"id":"669","similarity":0.9142857142857143,"totOverlap":64,"longestOverlap":20}]],"996":[{"id":"996","fileName":"1575086872.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int sum = 0;\n        map<int, int> mp;\n        \n        for(int i = 0; i < n; i++){\n            if(mp[nums[i]] == 0 and sum + nums[i] > sum){\n                sum += nums[i];\n            }    \n            mp[nums[i]] = 1;\n        }\n        if(sum == 0){\n            sum = INT_MIN;\n            for(auto i : nums) sum = max(sum, i);\n        }\n        return sum;\n    }\n};","author":"HARSH_KANOO","submissionId":"1575086872"},[{"id":"905","similarity":0.7058823529411765,"totOverlap":48,"longestOverlap":20}]],"1026":[{"id":"1026","fileName":"1575087127.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        int sum=0;\n\n        map<int,int> mp;\n\n        int n=nums.size();\n\n        for(int i=0;i<n;i++)\n            {\n                if(mp[nums[i]]==0 && nums[i]>0)\n                    sum+=nums[i];\n                mp[nums[i]]++;\n            }\n\n        if(*max_element(nums.begin(),nums.end())<=0)\n            return *max_element(nums.begin(),nums.end());\n        return sum;\n    }\n};","author":"anshuman_k","submissionId":"1575087127"},[{"id":"905","similarity":0.7162162162162162,"totOverlap":53,"longestOverlap":7}]],"1071":[{"id":"1071","fileName":"1575087521.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum=0;\n        int mx=-200;\n        int n=nums.size();\n        map<int,int>mp;\n        for(int i=0;i<n;i++){\n            if(nums[i]>=0&&mp[nums[i]]==0){\n                sum+=nums[i];\n            }\n            mp[nums[i]]++;\n            mx=max(mx,nums[i]);\n        }\n        if(sum>0){\n            return sum;\n        }else {\n            return mx;\n        }\n    }\n};","author":"Aman Vyas","submissionId":"1575087521"},[{"id":"594","similarity":0.8295454545454546,"totOverlap":73,"longestOverlap":21}]],"1103":[{"id":"1103","fileName":"1575087922.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int ans=0;\n        unordered_map<int,int> mp;\n        for(int i=0;i<n;i++){\n            if(mp.count(nums[i])<1 && nums[i]>0){\n                ans+=nums[i];\n                mp[nums[i]]++;\n            }\n        }\n\n        if(ans==0){\n            sort(nums.begin(), nums.end());\n            ans=nums[n-1];\n        }\n        \n        return ans;\n    }\n};","author":"Tharun","submissionId":"1575087922"},[{"id":"905","similarity":0.8378378378378378,"totOverlap":62,"longestOverlap":17}]],"1540":[{"id":"1540","fileName":"611227226.txt","sourceCode":"#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ntypedef pair<int,int> PII;\ntypedef unsigned long long ull;\n\n    \nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        map<int,int> mp;\n        for(int i = 0; i < nums.size(); i++) {\n            if(nums[i] >= 0 && mp[nums[i]] == 0) {\n                ans += nums[i];\n                mp[nums[i]]++;\n            }\n        }      \n        if(ans == 0) {\n            ans = *max_element(nums.begin(), nums.end());\n        }\n        return ans;\n    }\n};","author":"Dr_Zhang","submissionId":"611227226"},[{"id":"669","similarity":0.8,"totOverlap":64,"longestOverlap":14}]],"1690":[{"id":"1690","fileName":"611229295.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int left = 0, right = 0, sum = 0;\n        int hash[105] = {0};\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (nums[i] > 0 && hash[nums[i]] == 0) {\n                ans += nums[i];\n                hash[nums[i]]++;\n            }\n        }\n        if (ans == 0) {\n            return *max_element(nums.begin(),nums.end());\n        }\n        return ans;\n    }\n};","author":"Amazing EuclidB0n","submissionId":"611229295"},[{"id":"669","similarity":0.7894736842105263,"totOverlap":60,"longestOverlap":17}]]},{"599":[{"id":"599","fileName":"1575084025.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean good = false;\n        HashSet<Integer> h = new HashSet<>();\n        for (int x : nums)\n            if (x >= 0) {\n                good = true;\n                h.add(x);\n            }\n        if (good) {\n            int s = 0;\n            for (int x : h)\n                s += x;\n            return s;\n        }\n        int ans = nums[0];\n        for (int x : nums)\n            ans = Math.max(ans, x);\n        return ans;\n    }\n}","author":"liyangzi6p626","submissionId":"1575084025"},[]]},{"600":[{"id":"600","fileName":"1575084047.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int posFound = false;\n        int largestNeg = INT_MIN;\n        for (auto it : nums) {\n            if (it > 0)\n                st.insert(it);\n            if (it <= 0)\n                largestNeg = max(largestNeg, it);\n        }\n        int res = 0;\n        for (auto it : st)\n            res += it;\n\n        return res == 0 ? largestNeg : res;\n    }\n};","author":"Arjun Singh Kandari","submissionId":"1575084047"},[]]},{"601":[{"id":"601","fileName":"1575084058.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        auto maxElement = *max_element(nums.begin(), nums.end());\n        if(maxElement <= 0){\n            return maxElement;\n        }\n\n        unordered_set<int> used;\n        int totalSum = 0;\n        for(auto c: nums){\n            if(c <= 0){\n                continue;\n            }\n            if(used.contains(c))\n                continue;\n            totalSum += c;\n            used.insert(c);\n        }\n        return totalSum;\n    }\n};","author":"autumn_1eaf","submissionId":"1575084058"},[]]},{"602":[{"id":"602","fileName":"1575084054.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        result = 0\n        for i in range(len(nums)):\n            if nums[i] in seen or nums[i] < 0: \n                continue\n            seen.add(nums[i])\n            result += nums[i]\n        if len(seen) == 0:\n            return max(nums)\n        return result","author":"coenzeng","submissionId":"1575084054"},[]]},{"608":[{"id":"608","fileName":"1575084097.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        \n        int n=nums.size();\n        int ans=0;\n        vector<int> vis(101);\n        sort(nums.begin(),nums.end());\n        if(nums[0]<0&&nums[n-1]<0)return nums[n-1];\n        for(int i=0;i<n;i++){\n            if(nums[i]>0&&vis[nums[i]]==0){\n                ans+=nums[i];\n                vis[nums[i]]=1;\n            }\n        }\n        \n        return ans;\n    }\n};","author":"Sahil Kumar","submissionId":"1575084097"},[]]},{"610":[{"id":"610","fileName":"1575084113.txt","sourceCode":"import java.util.*;\nclass Solution {\n    public int maxSum(int[] nums) {\n        int sum = 0 ;\n        Hashtable<Integer,Integer> ht = new Hashtable<>();\n        \n        for(int i=0;i<nums.length;i++){\n             if(nums[i]>0){\n                 if(!ht.containsKey(nums[i])){\n                     sum+=nums[i];\n                     ht.put(nums[i],1);\n                 }\n             }   \n        }\n        Arrays.sort(nums);\n\n        if(nums[nums.length-1]<0){\n            return nums[nums.length-1];\n        }\n\n        return sum;\n    }\n}","author":"anmol dogra","submissionId":"1575084113"},[]]},{"611":[{"id":"611","fileName":"1575084125.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set=new HashSet<>();\n        int sum=0;\n        for(int i=0;i<nums.length;i++){\n            if(!set.contains(nums[i]) && nums[i]>0) sum+=nums[i];\n            set.add(nums[i]);\n        }\n        if(sum==0){\n            sum=Integer.MIN_VALUE;\n            for(int i=0;i<nums.length;i++){\n                sum=Math.max(nums[i],sum);\n            }\n        }\n        return sum;\n    }\n}","author":"Nithish kannan","submissionId":"1575084125"},[{"id":"1612","similarity":0.7938144329896907,"totOverlap":77,"longestOverlap":27}]],"1612":[{"id":"1612","fileName":"611228053.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int res = 0;\n        for(int i = 0 ; i < nums.length; i++) {\n            if(!set.contains(nums[i]) && nums[i] > 0) {\n                res += nums[i];\n                set.add(nums[i]);\n            }\n        }\n        if(res == 0) {\n            \n            int max = -101;\n            for(int i = 0 ; i < nums.length; i++) {\n                if(nums[i] > max) {\n                    max = nums[i];\n                }\n                \n            }\n            res = max;\n        }\n        return res;\n        \n    }\n}","author":"名字","submissionId":"611228053"},[{"id":"611","similarity":0.7938144329896907,"totOverlap":77,"longestOverlap":27}]]},{"613":[{"id":"613","fileName":"1575084128.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<>();\n        for(int i=0; i<nums.length; i++) {\n            if(nums[i] >  0) set.add(nums[i]);\n        }\n        int sum = 0;\n        for(int el : set) {\n            sum += el;\n        }\n        if(set.size()==0) {\n            int max = Integer.MIN_VALUE;\n            for(int i=0; i<nums.length; i++) {\n                max= Math.max(max, nums[i]);\n            }\n            return max;\n        }\n        return sum;\n    }\n}","author":"Rudra Pratap Singh","submissionId":"1575084128"},[]]},{"615":[{"id":"615","fileName":"1575084153.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        d = set(nums)\n        p = sum(x for x in d if x > 0)\n        if p:\n            return p\n        elif 0 in d:\n            return 0\n        else:\n            return max(d)","author":"Mangalavinayagam","submissionId":"1575084153"},[]]},{"616":[{"id":"616","fileName":"1575084161.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int> a;\n        int ans=0;\n        int temp=INT_MIN;\n        bool flag=false;\n        for(int i=0;i<nums.size();i++)\n            {\n                temp=max(temp,nums[i]);\n                if(a[nums[i]]==1 || nums[i]<0) continue;\n                flag=true;\n                ans+=nums[i];\n                a[nums[i]]++;\n            }\n        if(flag==false) return temp;\n        return ans;\n    }\n};","author":"Vaibhav Sen","submissionId":"1575084161"},[]]},{"618":[{"id":"618","fileName":"1575084164.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        neg = -inf\n        for n in nums:\n            if n > 0:\n                seen.add(n)\n            else:\n                neg = max(neg, n)\n\n        if len(seen):\n            return sum(seen)\n        else:\n            return neg","author":"Tim Lu","submissionId":"1575084164"},[]]},{"621":[{"id":"621","fileName":"1575084120.txt","sourceCode":"class Solution {\npublic:\n    bool isPos(int x) { return x > 0; }\n\n    int ups(const vector<int>& nums, unordered_map<int, bool>& seen) {\n        int i = 0, s = 0;\n        while (i < nums.size()) {\n            if (isPos(nums[i]) && !seen[nums[i]]) {\n                seen[nums[i]] = true;\n                s += nums[i];\n            }\n            i++;\n        }\n        return s;\n    }\n\n    bool hasZero(const vector<int>& nums) {\n        return any_of(nums.begin(), nums.end(), [](int x) { return x == 0; });\n    }\n\n    int bnp(const vector<int>& nums) {\n        return hasZero(nums) ? 0 : *max_element(nums.begin(), nums.end());\n    }\n\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, bool> seen;\n        int sum = ups(nums, seen);\n        return sum > 0 ? sum : bnp(nums);\n    }\n};","author":"Subham","submissionId":"1575084120"},[]]},{"622":[{"id":"622","fileName":"1575084178.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        total = 0\n        used = False\n        for k in Counter(nums).keys():\n            if k >= 0:\n                used = True\n                total += k\n\n        \n        if used:\n            return total\n        else:\n            return max(nums)","author":"Yiping","submissionId":"1575084178"},[]]},{"623":[{"id":"623","fileName":"1575084194.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end(), greater<int>());\n        auto i = 0;\n\n        if (nums[0] < 0) return nums[0];\n\n        auto ans = 0;\n        while (i < nums.size() && nums[i] > 0) {\n            ans += nums[i];\n            auto j = i;\n            while (i < nums.size() && nums[i] == nums[j]) {\n                ++i;\n            }\n        }\n\n        return ans;\n    }\n};","author":"user4121G","submissionId":"1575084194"},[]]},{"626":[{"id":"626","fileName":"1575084218.txt","sourceCode":"class Solution:\n\n    def maxSum(self, nums: List[int]) -> int:\n\n        # Find the maximum value in nums\n\n        max_num = max(nums)\n\n        \n\n        # If all numbers are non-positive, the best we can do is choose the highest (least negative/zero)\n\n        if max_num <= 0:\n\n            return max_num\n\n        \n\n        # Otherwise, delete extra copies and negatives: sum up all unique positive numbers.\n\n        return sum({x for x in nums if x > 0})\n        ","author":"V Rahul","submissionId":"1575084218"},[]]},{"627":[{"id":"627","fileName":"1575084239.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) \n    {\n        int n = nums.size();\n        int ans = 0;\n        vector<int> cnt(101);\n        for(auto &x : nums)\n        {\n            if(x > 0)\n            {\n                if(cnt[x] == 0)\n                {\n                    ans += x;\n                    cnt[x]++;\n                }\n            }\n        }\n        if(!ans)\n        {\n            int mini = *max_element(nums.begin(), nums.end());\n            ans = mini;\n        }\n        return ans;\n    }\n};","author":"Prajjawal_Agrahari","submissionId":"1575084239"},[]]},{"631":[{"id":"631","fileName":"1575084249.txt","sourceCode":"public class Solution \n{\n    public int MaxSum(int[] nums) \n    {\n        var distinctNums = nums.Where(x => x > 0).Distinct().ToArray();\n        if (distinctNums.Length == 0)\n        {\n            return nums.Max();\n        }\n        \n        return distinctNums.Sum();\n    }\n}","author":"chrisTris","submissionId":"1575084249"},[]]},{"634":[{"id":"634","fileName":"1575084269.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        nums.sort(reverse=True)\n\n        ans = nums[0]\n        for i in range(1, len(nums)):\n            if nums[i] > 0: ans += nums[i]\n        return ans\n            ","author":"Shiva Oswal","submissionId":"1575084269"},[]]},{"636":[{"id":"636","fileName":"1575084281.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(begin(nums), end(nums));\n        nums.erase(unique(begin(nums), end(nums)), end(nums));\n        int ans = 0; \n        int added = 0;\n        int mx = -1e9;\n        for (int i = 0; i < size(nums); i++) {\n            if (nums[i] >= 0) ans += nums[i], added++;\n            mx = max(mx, nums[i]);\n        }\n        if (added == 0) return mx;\n        return ans;\n    }\n};","author":"Michael Bao","submissionId":"1575084281"},[]]},{"637":[{"id":"637","fileName":"1575084274.txt","sourceCode":"class Solution:\n    def maxSum(self, arr: List[int]) -> int:\n        arr = list(set(arr))\n        res = 0\n        arr.sort()\n        if arr[-1] < 0:\n            return arr[-1]\n        \n        for x in arr:\n            if x > 0:\n                res += x\n        return res","author":"asdfweasd","submissionId":"1575084274"},[]]},{"638":[{"id":"638","fileName":"1575084285.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res, max_neg, mem = 0, float('-inf'), set()\n        for x in nums:\n            if x < 0 or x in mem:\n                max_neg = max(max_neg, x)\n                continue\n            mem.add(x)\n            res += x\n        return res if mem else max_neg\n        ","author":"sokui","submissionId":"1575084285"},[]]},{"639":[{"id":"639","fileName":"1575084295.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n    int maxi = INT_MIN;\n    \n    sort(nums.begin(), nums.end());\n    nums.erase(unique(nums.begin(), nums.end()), nums.end());\n    \n    int n = nums.size();\n    for (int i = 0; i < n; i++) {\n        int sum = 0;\n        for (int j = i; j < n; j++) { \n            sum += nums[j];\n            maxi = max(maxi, sum);\n        }\n    }\n    \n    return maxi;\n}\n};","author":"Ansh agarwal","submissionId":"1575084295"},[]]},{"642":[{"id":"642","fileName":"1575084305.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        \"\"\" think\n        myCase:\n        1. [-1] -> -1\n        2. [-2, -1] -> -1\n        \"\"\"\n        max_num = max(nums)\n        if max_num <= 0:\n            return max_num\n        seen = set()\n        max_sum = 0\n        for num in nums:\n            if num > 0:\n                if num not in seen:\n                    seen.add(num)\n                    max_sum += num\n        return max_sum\n                ","author":"Johnny","submissionId":"1575084305"},[]]},{"643":[{"id":"643","fileName":"1575084312.txt","sourceCode":"class Solution {\n  int maxSum(List<int> nums) {\n    Set<int>st = Set.from(nums);\n      int op=0;\n      int neg=-9999999999;\n      st.forEach((i){\n         if(i>0)op+=i; \n          else{\n              neg = max(neg,i);\n          }\n      });\n      return op==0?neg:op;\n  }\n}","author":"Nguyen Duc","submissionId":"1575084312"},[]]},{"644":[{"id":"644","fileName":"1575084314.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean sumed = false;\n        boolean[] used = new boolean[101];\n        int sum = 0;\n        for (int num : nums) {\n            if (num > 0 && !used[num]) {\n                sum += num;\n                used[num] = true;\n                sumed = true;\n            }\n        }\n        if (!sumed) {\n            return Arrays.stream(nums).max().getAsInt();\n        }\n        return sum;\n    }\n}","author":"Feng W","submissionId":"1575084314"},[]]},{"648":[{"id":"648","fileName":"1575084337.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ret = 0, maxNum = INT_MIN;\n      unordered_set<int> s(nums.begin(), nums.end());\n      for (int num : s) {\n        if (num > 0) {\n          ret += num;\n        }\n        maxNum = max(maxNum, num);\n      }\n      return (maxNum != INT_MIN && maxNum < 0) ? maxNum : ret;\n    }\n};","author":"HowAbout3Sum","submissionId":"1575084337"},[]]},{"651":[{"id":"651","fileName":"1575084320.txt","sourceCode":"#include<bits/stdc++.h>\nusing namespace std;\n\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\n\nusing namespace __gnu_pbds;\n\n#define MOD 1000000007\n#define MOD1 998244353\n#define INF 1000000000000000000LL\n#define nline cout << \"n\"\n#define pb push_back\n#define ppb pop_back\n#define ff first\n#define ss second\n#define bg begin\n#define lbd lower_bound\n#define ubd upper_bound\n#define pll pair<ll, ll>\n#define PI 3.141592653589793238462\n#define set_bits(x) __builtin_popcountll(x)\n#define sz(x) ((ll)(x).size())\n#define all(x) (x).begin(), (x).end()\n#define allR(x) (x).rbegin(), (x).rend()\n#define TT ll t; cin >> t; while(t--)\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nusing ll = long long;\nusing ull = unsigned long long;\nusing lld = long double;\n\n#define looping(i, a, b) for (ll i = a; i < (b); i++)\n#define loop(i, a) for (ll i = 0; i < (a); i++)\n#define loopingd(i, a, b) for (ll i = (b) - 1; i >= a; i--)\n#define loopd(i, a) for (ll i = (a) - 1; i >= 0; i--)\n#define trav(a, x) for (auto& a : x)\n\n//------------------------------Debug---------------------------------------------------------------------//\n\n#ifndef ONLINE_JUDGE\n#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;\n#else\n#define debug(x)\n#endif\n\nvoid _print(ll t) {cerr << t;}\nvoid _print(int t) {cerr << t;}\nvoid _print(string t) {cerr << t;}\nvoid _print(char t) {cerr << t;}\nvoid _print(lld t) {cerr << t;}\nvoid _print(double t) {cerr << t;}\nvoid _print(ull t) {cerr << t;}\n\ntemplate <class T, class V> void _print(pair <T, V> p);\ntemplate <class T> void _print(vector <T> v);\ntemplate <class T> void _print(set <T> v);\ntemplate <class T, class V> void _print(map <T, V> v);\ntemplate <class T> void _print(multiset <T> v);\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n\n// -------------------------------------------------------------------------------------------------------//\n\ntemplate <typename T> void read(T& t) { cin >> t; }\ntemplate <typename T, typename... Args> void read(T& t, Args&... args) { read(t); read(args...); }\ntemplate <typename T> void read(vector<T>& vec) { for (auto& element : vec) { cin >> element; } }\ntemplate <typename T> void print(const T& t) { cout << t << \" \"; }\ntemplate <typename T> void prints(const T& t) { cout << t; }\ntemplate <typename T, typename... Args> void print(const T& t, const Args&... args) { print(t); print(args...); }\ntemplate <typename T, typename... Args> void prints(const T& t, const Args&... args) { prints(t); print(args...); }\ntemplate <typename T> void print(const vector<T>& vec) { for (const auto& element : vec) { cout << element << \" \"; } cout << \"n\"; }\ntemplate<class T> using oset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n// -------------------------------------------------------------------------------------------------------//\n\nconst ll dx[] = {0, 0, 1, -1};\nconst ll dy[] = {1, -1, 0, 0};\nll mod_power(ll a, ll b, ll m) { ll ans = 1; while (b) { if (b & 1) ans = ans * a % m; a = a * a % m; b >>= 1; } return ans; }\nll gcd (ll a, ll b) {  return b ? gcd (b, a % b) : a;  }\nll lcm (ll a, ll b) {  return (a * b) / gcd(a, b); }\nll mod_inv(ll x) { return mod_power(x, MOD - 2, MOD) % MOD; }\nll mod_mul(ll a, ll b) { return ((a % MOD) * (b % MOD) % MOD) % MOD; }\nll mod_div(ll a, ll b) { return mod_mul(a, mod_inv(b)) % MOD; }\nll mod_add(ll a, ll b) { return ((a % MOD) + (b % MOD)) % MOD; }\nll mod_sub(ll a, ll b) { return ((a % MOD) - (b % MOD) + MOD) % MOD; }\nbool isprime(ll n) { for (ll i = 2; i * i <= n; ++i) { if (n % i == 0) { return false; } } return true; }\ntemplate <typename T> void chkmn(T &x, T y) { x = min(x, y); }\ntemplate <typename T> void chkmx(T &x, T y) { x = max(x, y); }\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        ll ans = 0;\n        set<ll> st;\n        trav(x, nums) {\n            if(x >= 0)\n                st.insert(x);\n        }\n        \n        if(st.empty()) {\n            ll maxi = -INF;\n            trav(x, nums) {\n                chkmx(maxi, (ll)x);\n            }\n            return maxi;\n        }\n        \n        trav(x, st)\n            ans += x;\n        return ans;\n    }\n};","author":"Amit Yadav","submissionId":"1575084320"},[]]},{"653":[{"id":"653","fileName":"1575084358.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int freq[101], an=0,mx=INT_MIN;\n        for(int i:nums)\n        {\n            if(i>0 && freq[i]==0)\n            {\n                an+=i;\n                freq[i]++;\n            }\n            mx=max(mx,i);\n                \n        }\n        return an==0?mx:an;\n    }\n};","author":"surendra yadav","submissionId":"1575084358"},[]]},{"654":[{"id":"654","fileName":"1575084360.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& v) {\n        map<int,int> mp;\n        int sum=0;\n        int mini=*max_element(v.begin(),v.end());\n        for(int i=0;i<v.size();i++){\n            if(mp.find(v[i])!=mp.end()||v[i]<=0) continue;\n            mp[v[i]]=1;\n            sum+=v[i];\n        }\n        if(sum==0) sum=mini;\n        return sum;\n    }\n};","author":"nathanium","submissionId":"1575084360"},[]]},{"656":[{"id":"656","fileName":"1575084369.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        int toret=0;\n        bool  done=0;\n        for(auto &value:nums){\n            if(value>0 && s.find(value)==s.end()){\n                s.insert(value);\n                toret+=value;\n            done=1;\n            }\n        }\n        if(!done){\n            int maxi=INT_MIN;\n            for(auto &value:nums){\n                maxi=max(maxi,value);\n            }\n            return maxi;\n        }\n        return toret;\n    }\n};","author":"Garvit Goyal","submissionId":"1575084369"},[{"id":"1157","similarity":0.726027397260274,"totOverlap":53,"longestOverlap":16},{"id":"1083","similarity":0.7419354838709677,"totOverlap":46,"longestOverlap":14}]],"1083":[{"id":"1083","fileName":"1575087672.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>mp;\n        int sum = 0;\n        for(auto&i:nums){\n            if(i>0 && !mp.count(i)){\n                mp.insert(i);\n                sum+=i;\n            }\n        }\n        if(sum==0){\n            int mx = INT_MIN;\n            for(auto&i:nums){\n                mx = max(mx,i);\n            }\n            return mx;\n        }\n        return sum;\n    }\n};","author":"Sangram","submissionId":"1575087672"},[{"id":"656","similarity":0.7419354838709677,"totOverlap":46,"longestOverlap":14}]],"1157":[{"id":"1157","fileName":"1575088507.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> set;\n        int cnt = 0;\n        int cntN = 0;\n        for(auto& it : nums){\n            if(it<0) cntN++;\n        }\n        \n        if(cntN == nums.size()){\n            int res = INT_MIN;\n            for(auto& it : nums){\n                res = max(it, res);\n            }\n            return res;\n        }\n        for(auto& it : nums){\n            if(set.count(it) == 0 && it>=0){\n                cnt += it;\n            }\n            set.insert(it);\n        }\n        return cnt;\n    }\n};","author":"Pritam Barman","submissionId":"1575088507"},[{"id":"656","similarity":0.726027397260274,"totOverlap":53,"longestOverlap":16}]]},{"659":[{"id":"659","fileName":"1575084390.txt","sourceCode":"#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        unordered_set<int> u;\n        int sum = 0;\n        bool hasPositive = false;\n\n        for (auto val : a) {\n            if (val > 0) {\n                hasPositive = true;\n                if (!u.count(val)) {\n                    u.insert(val);\n                    sum += val;\n                }\n            }\n        }\n\n        if (hasPositive) return sum;\n\n        bool hasZero = false;\n        int maxNeg = numeric_limits<int>::min();\n\n        for (auto val : a) {\n            if (val == 0) hasZero = true;\n            maxNeg = max(maxNeg, val);\n        }\n\n        return hasZero ? 0 : maxNeg;\n    }\n};\n","author":"Abhay Dixit","submissionId":"1575084390"},[]]},{"661":[{"id":"661","fileName":"1575084397.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, int> mp;\n        int ans = 0;\n        bool f = true;\n        for(auto num : nums){\n            if(num > 0 and mp[num] == 0){\n                f = false;\n                mp[num]++;\n                ans += num;\n            }\n        }\n        if(f){\n            sort(nums.rbegin(), nums.rend());\n            return nums[0];\n        }\n        return ans;\n    }\n};","author":"Mani Deep Adepu","submissionId":"1575084397"},[{"id":"1606","similarity":0.7014925373134329,"totOverlap":47,"longestOverlap":6}]],"1606":[{"id":"1606","fileName":"611227995.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        unordered_map<int,int> mp;\n        int ans=0;\n        bool flag=false;\n        for(int num:nums)\n            {\n                if(num>=0&&mp[num]==0)\n                {\n                    flag=true;\n                    mp[num]++;\n                    ans+=num;\n                }\n            }\n        if(!flag) ans=nums[nums.size()-1];\n        return ans;\n    }\n};","author":"Z🐔H","submissionId":"611227995"},[{"id":"661","similarity":0.7014925373134329,"totOverlap":47,"longestOverlap":6}]]},{"662":[{"id":"662","fileName":"1575084395.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        nums = sorted(set(nums), reverse=True)\n        if nums[0] <= 0:\n            return nums[0]\n        sol = 0\n        for num in nums:\n            if num <= 0:\n                return sol\n            sol += num\n        return sol","author":"louissito","submissionId":"1575084395"},[{"id":"1619","similarity":0.9361702127659575,"totOverlap":44,"longestOverlap":15}]],"1619":[{"id":"1619","fileName":"611228112.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        m = set(nums)\n        l = sorted(list(m), reverse=True)\n        if l[0] < 0:\n            return l[0]\n        ans = 0\n        for k in l:\n            if k <= 0:\n                return ans\n            else:\n                ans += k\n        return ans","author":"idiot","submissionId":"611228112"},[{"id":"662","similarity":0.9361702127659575,"totOverlap":44,"longestOverlap":15}]]},{"664":[{"id":"664","fileName":"1575084400.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        map<int,int> m;\n        for(int i=0;i<n;i++){\n            if(nums[i]>0) m[nums[i]]++;\n        }\n        int res=0;\n        if(m.size()==0){\n            res = *max_element(nums.begin(),nums.end());\n            return res;\n        }\n        for(auto x:m){\n            res+=(x.first);\n        }\n        return res;\n    }\n};","author":"Pranav Bansal","submissionId":"1575084400"},[]]},{"36":[{"id":"36","fileName":"1575079815.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n        res = 0\n        for i in s:\n            if i > 0:\n                res += i\n        if res == 0:\n            return max(s)\n        return res","author":"jacksonc","submissionId":"1575079815"},[{"id":"36","similarity":0.896551724137931,"totOverlap":26,"longestOverlap":13}]],"109":[{"id":"109","fileName":"1575080604.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        S=set(nums)\n        print(S)\n        res=0\n        for x in S:\n            if x>0:\n                res+=x\n        if res==0:\n            res=max(nums)\n        return res\n        ","author":"commallama","submissionId":"1575080604"},[{"id":"109","similarity":0.75,"totOverlap":24,"longestOverlap":8}]],"248":[{"id":"248","fileName":"1575081714.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort(reverse=True)\n        nums_set=set(nums)\n        \n        ans=0\n        for i in nums_set:\n            if i>0:\n                ans+=i\n        if ans==0:\n            return nums[0]\n        return ans\n        ","author":"Sharan","submissionId":"1575081714"},[{"id":"36","similarity":0.8,"totOverlap":24,"longestOverlap":6}]],"536":[{"id":"536","fileName":"1575083683.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(a<0 for a in nums):return max(nums)\n        ans=0\n        for a in set(nums):\n            if a>0:ans+=a\n        return ans\n","author":"M Kawa","submissionId":"1575083683"},[{"id":"1003","similarity":0.75,"totOverlap":27,"longestOverlap":12},{"id":"1278","similarity":0.7352941176470589,"totOverlap":25,"longestOverlap":11},{"id":"1625","similarity":0.7333333333333333,"totOverlap":22,"longestOverlap":7},{"id":"581","similarity":0.7037037037037037,"totOverlap":19,"longestOverlap":9}]],"581":[{"id":"581","fileName":"1575083944.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        tot = set(nums)\n        res = 0\n        if max(tot) < 0:\n            return max(tot)\n\n        for element in tot:\n            if element > 0:\n                res += element\n\n        return res","author":"Kyne","submissionId":"1575083944"},[{"id":"581","similarity":0.7241379310344828,"totOverlap":21,"longestOverlap":9}]],"670":[{"id":"670","fileName":"1575084434.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        ans = -1\n        for num in nums:\n            if num > 0:\n                ans += num\n        return ans + 1 if ans != -1 else max(nums)","author":"Cry Andrich","submissionId":"1575084434"},[{"id":"732","similarity":0.8108108108108109,"totOverlap":30,"longestOverlap":15},{"id":"1287","similarity":0.8108108108108109,"totOverlap":30,"longestOverlap":14},{"id":"1371","similarity":0.8484848484848485,"totOverlap":28,"longestOverlap":7},{"id":"1371","similarity":0.9333333333333333,"totOverlap":28,"longestOverlap":14},{"id":"1816","similarity":0.8484848484848485,"totOverlap":28,"longestOverlap":7},{"id":"911","similarity":0.896551724137931,"totOverlap":26,"longestOverlap":13},{"id":"248","similarity":0.8,"totOverlap":24,"longestOverlap":6},{"id":"1816","similarity":0.75,"totOverlap":24,"longestOverlap":8},{"id":"911","similarity":0.7241379310344828,"totOverlap":21,"longestOverlap":9},{"id":"1625","similarity":0.7037037037037037,"totOverlap":19,"longestOverlap":9}]],"732":[{"id":"732","fileName":"1575084852.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums=list(set(nums))\n        sm=0\n        for i in nums:\n            if i>=0:\n                sm+=i\n        return sm if sm!=0 else max(nums)","author":"Shreehari","submissionId":"1575084852"},[{"id":"670","similarity":0.8108108108108109,"totOverlap":30,"longestOverlap":15}]],"911":[{"id":"911","fileName":"1575086209.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        numSet = set(nums)\n        res = 0\n\n        for num in numSet :\n            if num >= 0 :\n                res += num\n        return max(nums) if res == 0 else res","author":"Tung Nguyen","submissionId":"1575086209"},[{"id":"911","similarity":0.9333333333333333,"totOverlap":28,"longestOverlap":14}]],"1003":[{"id":"1003","fileName":"1575086933.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(x < 0 for x in nums): return max(nums)\n        ans = 0\n        seen = set()\n        for x in nums: \n            if x > 0: \n                if x not in seen: \n                    seen.add(x)\n                    ans += x\n        return ans ","author":"bnlvv","submissionId":"1575086933"},[{"id":"536","similarity":0.75,"totOverlap":27,"longestOverlap":12}]],"1278":[{"id":"1278","fileName":"611225533.txt","sourceCode":"class Solution:\n    def maxSum(self, a: List[int]) -> int:\n        if all(i<0 for i in a):\n            return max(a)\n        s=set(a)\n        res=0\n        for i in s:\n            if i>0:\n                res+=i\n        return res","author":"poiujhgdsd","submissionId":"611225533"},[{"id":"536","similarity":0.7352941176470589,"totOverlap":25,"longestOverlap":11}]],"1287":[{"id":"1287","fileName":"611225575.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        ans = 0\n        for c in nums:\n            if c>0:\n                ans += c\n        if ans==0:\n            ans = max(nums)\n        return ans","author":"孙慢慢","submissionId":"611225575"},[{"id":"670","similarity":0.8108108108108109,"totOverlap":30,"longestOverlap":14}]],"1371":[{"id":"1371","fileName":"611226103.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        o = set(nums)\n        ans = 0\n        for x in o:\n            if x > 0:\n                ans += x\n        return ans if ans != 0 else max(nums)","author":"一只真昼","submissionId":"611226103"},[{"id":"732","similarity":0.8484848484848485,"totOverlap":28,"longestOverlap":7}]],"1625":[{"id":"1625","fileName":"611228150.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums=set(nums)\n        ans=0\n        if all(i<0 for i in nums):\n            return max(nums)\n        for i in nums:\n            if i>0:\n                ans+=i\n        return ans","author":"浅木夏织","submissionId":"611228150"},[{"id":"1278","similarity":0.7333333333333333,"totOverlap":22,"longestOverlap":7}]],"1816":[{"id":"1816","fileName":"611237369.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s=set(nums)\n        ans=0\n        for i in s:\n            if i>0:ans+=i\n        if ans==0:\n            ans=max(s)\n        return ans","author":"Allergy","submissionId":"611237369"},[{"id":"1287","similarity":0.8484848484848485,"totOverlap":28,"longestOverlap":7}]]},{"675":[{"id":"675","fileName":"1575084473.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        if (nums.size() == 1) {\n            return nums[0];\n        }\n        std::set<int> seen;\n        std::sort(nums.begin(), nums.end());\n        int sum = nums.back();\n        seen.insert(nums.back());\n\n        for (int i = nums.size() - 2; i >= 0; --i) {\n            if (nums[i] > 0 && seen.find(nums[i]) == seen.end()) {\n                sum += nums[i];\n                seen.insert(nums[i]);\n            }\n        }\n        return sum;\n    }\n};","author":"Qimu Z","submissionId":"1575084473"},[]]},{"676":[{"id":"676","fileName":"1575084476.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n        arr = list(s)\n        arr.sort()\n\n        if arr[-1] < 0:\n            return arr[-1]\n        else:\n            return sum([x for x in arr if x > 0])\n            ","author":"locus","submissionId":"1575084476"},[]]},{"677":[{"id":"677","fileName":"1575084474.txt","sourceCode":"class Solution {\n    // [-1, -2, -3]\n    public int maxSum(int[] nums) {\n        int n = nums.length, ans = 0;\n        TreeSet<Integer> pos = new TreeSet<>(), neg = new TreeSet<>();\n        for (int v : nums) {\n            if (v >= 0) {\n                pos.add(v);\n            } else {\n                neg.add(v);\n            }\n        }\n        if (pos.isEmpty()) {\n            return neg.last();\n        }\n        for (int v : pos) {\n            ans += v;\n        }\n        return ans;\n    }\n}","author":"Lucas","submissionId":"1575084474"},[]]},{"678":[{"id":"678","fileName":"1575084503.txt","sourceCode":"use std::collections::HashSet;\n\nimpl Solution {\n    pub fn max_sum(nums: Vec<i32>) -> i32 {\n        let mut set = HashSet::new();\n        for &num in &nums {\n            if num > 0 {\n                set.insert(num);\n            }\n        }\n\n        if set.is_empty() {\n            nums.iter().copied().max().unwrap()\n        } else {\n            set.into_iter().sum::<i32>()\n        }\n    }\n}","author":"Fainabi","submissionId":"1575084503"},[]]},{"679":[{"id":"679","fileName":"1575084475.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        map<int, int> m;\n\n        int mx = *max_element(nums.begin(), nums.end()), ans = 0;\n        if(mx < 0) return mx;\n        for(int &num: nums){\n            if(num < 0) continue;\n            if(m.count(num) == 0) m[num] = 1, ans += num;\n        }\n\n        return ans;\n    }\n};","author":"Santosh Swansi","submissionId":"1575084475"},[]]},{"680":[{"id":"680","fileName":"1575084510.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        int neg = INT_MIN;\n        int flag = 0;\n        \n        unordered_map<int,int>mp;\n        \n        \n        for(int i = 0;i<nums.size();i++){\n             neg = max(neg,nums[i]);\n              if(mp.count(nums[i]) == 0 && nums[i] >= 0){\n                 ans += nums[i];\n              }\n              mp[nums[i]] = 1;\n        }\n        if(neg < 0)\n           return neg;\n        return ans;\n              \n    }\n};","author":"Yash Garg","submissionId":"1575084510"},[]]},{"682":[{"id":"682","fileName":"1575084487.txt","sourceCode":"func maxSum(nums []int) int {\n\n    m := map[int]int{}\n    for _, v := range nums {\n        m[v]++\n    }\n    \n    arr := []int{}\n    for k := range m {\n        arr = append(arr, k)\n    }\n    sort.Ints(arr)\n    l := len(arr)\n    res := 0\n    for i:=l-1; i>=0; i-- {\n        if i == l-1 {\n            res += arr[i]\n        } else {\n            if arr[i] <= 0 {\n                break\n            } else {\n                res += arr[i]\n            }\n        }\n    }\n    return res\n}","author":"LOLwuliao","submissionId":"1575084487"},[]]},{"683":[{"id":"683","fileName":"1575084536.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = -101;\n        unordered_set<int>s(nums.begin(), nums.end());\n        for(int n : s){\n            res = max({res,res+n, n});\n        }\n        return res;\n    }\n};","author":"VISHAL DANGI","submissionId":"1575084536"},[]]},{"684":[{"id":"684","fileName":"1575084541.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> mp;\n        int res=0,mx=INT_MIN;\n        bool pos=false;\n        for(int k:nums)\n        {\n            if(k>=0 && mp.find(k)==mp.end())\n            {\n                pos=true;\n                res+=k;\n            }\n            else\n                mx=max(mx,k);\n            mp[k]++;\n        }\n        if(pos)\n            return res;\n        return mx;\n        \n    }\n};","author":"LemonDrop","submissionId":"1575084541"},[]]},{"686":[{"id":"686","fileName":"1575084562.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set(nums)\n        res = 0\n        res2 = -int(1e9)\n        for i in s:\n            if i > 0: res += i\n            else: res2 = max(res2, i)\n        if res == 0: res += res2\n        return res","author":"anthonyli633a","submissionId":"1575084562"},[]]},{"687":[{"id":"687","fileName":"1575084565.txt","sourceCode":"// Jai shree ram\nclass Solution {\npublic:\n    int maxSum(vector<int>& v) {\n        int n = v.size();\n        int ch = 0;\n        for(auto &it: v) if (it >= 0) ch = 1;\n\n        if (ch == 0)\n        {\n            sort(v.begin(), v.end());\n            return v.back();\n        }\n\n        int s = 0;\n        set<int> st;\n        for(auto &it: v)\n            {\n                st.insert(it);\n            }\n\n        for(auto &it: st)\n            {\n                if (it >= 0) s += it;\n            }\n\n        return s;\n        \n    }\n};","author":"Ajay Bansal","submissionId":"1575084565"},[]]},{"689":[{"id":"689","fileName":"1575084570.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        s = set()\n        for ele in nums:\n            if ele<=0: continue\n            else: s.add(ele)\n\n        if len(s)>0:\n            return sum(s)\n        else: \n            return max(nums)\n        ","author":"underhood","submissionId":"1575084570"},[]]},{"690":[{"id":"690","fileName":"1575084581.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n=len(nums)\n        ans=0\n        for i in range(n):\n            x=set()\n            curr=0\n            for j in range(i,n):\n                if nums[j] not in x and nums[j]>0:\n                    x.add(nums[j])\n                    curr+=nums[j]\n                    ans=max(curr,ans)\n        return ans if ans else max(nums)","author":"Harish Ramaswamy","submissionId":"1575084581"},[]]},{"692":[{"id":"692","fileName":"1575084612.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int[] f = new int[101];\n        int maxNeg = Integer.MIN_VALUE;\n        \n        for (int x : nums) {\n            if (x > 0) {\n                ++f[x];\n            } else {\n                maxNeg = Math.max(maxNeg, x);\n            }\n        }\n        int res = 0;\n        for (int i = 0; i < 101; ++i) {\n            if (f[i] > 0) res += i;\n        }\n        return res == 0 ? maxNeg : res;\n    }\n}","author":"Terry","submissionId":"1575084612"},[]]},{"693":[{"id":"693","fileName":"1575084594.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& arr) {\n        map<int,int>mp;\n\n        int ans = 0;\n        int flg = 0;\n\n        for(auto x:arr){\n            if(mp.find(x)!=mp.end() || x<0) {\n                mp[x]++;\n                continue;\n            }\n            mp[x]++;ans+=x;flg=1;\n        }\n\n        if(flg==0){\n            return mp.rbegin()->first;\n        }\n\n        return ans;\n    }\n};","author":"soundboard","submissionId":"1575084594"},[]]},{"695":[{"id":"695","fileName":"1575084614.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        // sum of all the pos elements and non repeated;\n\n        HashSet<Integer> hs = new HashSet<>();\n        int max = Integer.MIN_VALUE;\n        int sum = 0;\n        \n        for(int i=0;i<nums.length;i++) {\n            max = Math.max(max, nums[i]);\n            if(nums[i]<0) {\n                continue;\n            }\n            if(hs.contains(nums[i])) continue;\n            sum += nums[i];\n            hs.add(nums[i]);\n        }\n\n        return max < 0 ?  max : sum;\n    }\n}","author":"Jagrit","submissionId":"1575084614"},[{"id":"1770","similarity":0.7160493827160493,"totOverlap":58,"longestOverlap":13},{"id":"1770","similarity":0.7105263157894737,"totOverlap":54,"longestOverlap":7}]],"1211":[{"id":"1211","fileName":"1575089180.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int sum = 0;\n        Set<Integer> set = new HashSet<>();\n        int max = Integer.MIN_VALUE;\n        for(int i = 0 ; i < nums.length;i++)\n        {\n            if(nums[i] > 0)\n            {if(!set.contains(nums[i]))\n            {\n                sum += nums[i];\n                set.add(nums[i]);\n            }}\n            else\n                max = Math.max(max, nums[i]);\n        }\n        if(sum == 0)\n            sum = max;\n        return sum;\n    }\n}","author":"cvr21b81a0595","submissionId":"1575089180"},[{"id":"1211","similarity":0.7105263157894737,"totOverlap":54,"longestOverlap":7}]],"1770":[{"id":"1770","fileName":"611232230.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max = Integer.MIN_VALUE;\n        Set<Integer> set = new HashSet<>();\n        int ans = 0;\n        for (int i = 0; i < nums.length; i++) {\n            max = Math.max(max, nums[i]);\n            if (!set.contains(nums[i])) {\n                if (nums[i] > 0) {\n                    ans += nums[i];\n                }\n            }\n            set.add(nums[i]);\n        }\n\n        return ans == 0 ? max : ans;\n    }\n}","author":"ngi","submissionId":"611232230"},[{"id":"695","similarity":0.7160493827160493,"totOverlap":58,"longestOverlap":13}]]},{"698":[{"id":"698","fileName":"1575084670.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0,flag=0;\n        unordered_map<int,int>mp;\n        for(auto i:nums){\n            if(i>=0){\n                flag=1;\n                if(mp[i]==0){\n                    ans+=i;\n                    mp[i]++;\n                }\n            }\n        }\n        if(!flag) ans=*max_element(nums.begin(),nums.end());\n        return ans;\n    }\n};","author":"Sri Ram Kumar R","submissionId":"1575084670"},[]]},{"700":[{"id":"700","fileName":"1575084667.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        maxi = -2 ** 31\n        for i in range(len(nums)):\n            summ = 0\n            summ += nums[i]\n            d = {}\n            d[nums[i]] = 1\n            for j in range(i +  1 , len(nums)):\n                if nums[j] not in d and nums[j] > 0:\n                    summ += nums[j]\n                    d[nums[j]] = 1\n            maxi = max(maxi , summ)\n        return maxi","author":"Anil","submissionId":"1575084667"},[]]},{"701":[{"id":"701","fileName":"1575084701.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<int> hash(101);\n        int sum=0;\n        int x=*max_element(nums.begin(),nums.end());\n        if(x<=0){\n            return x;\n        }\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>0){\n                hash[nums[i]]++;\n            }\n        }\n        for(int i=0;i<=100;i++){\n            if(hash[i]){\n                sum+=i;\n            }\n        }\n        return sum;\n    }\n};","author":"Nipun Yadav","submissionId":"1575084701"},[]]},{"704":[{"id":"704","fileName":"1575084733.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>m;\n        for(int i=0;i<nums.size();i++)\n            {\n                if(nums[i]>=0)\n                {\n                    m[nums[i]]++;\n                }\n            }\n        int ans=0;\n        for(auto i:m)\n            {\n                ans+=i.first;\n            }\n        if(ans==0&&m[0]==0)\n        {\n            int mini=-100;\n            for(int i=0;i<nums.size();i++)\n                {\n                    mini=max(mini,nums[i]);\n                }\n            ans=mini;\n        }\n        return ans;\n    }\n};","author":"omkar","submissionId":"1575084733"},[]]},{"705":[{"id":"705","fileName":"1575084716.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int sum = 0;\n        int c=0, maxi = INT_MIN;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i] < 0){\n                c++;\n                maxi = max(maxi, nums[i]);\n            }\n            if(c == nums.size())return maxi;\n            if(nums[i]>0 && st.find(nums[i]) == st.end())sum += nums[i];\n            st.insert(nums[i]);\n        }\n        return sum;\n    }\n};","author":"Sumit Kumar Pattanayak","submissionId":"1575084716"},[]]},{"708":[{"id":"708","fileName":"1575084748.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size(),ans=0;\n        bool fg=true;\n        map<int,int>mp;\n        for(int i=0;i<n;i++){\n            if(nums[i]>=0){mp[nums[i]]=1;fg=false;}\n        }\n        if(fg) return *max_element(nums.begin(),nums.end());\n        for(auto it:mp) ans+=it.first;\n        return ans;\n    }\n};","author":"Aun Abbas","submissionId":"1575084748"},[]]},{"711":[{"id":"711","fileName":"1575084734.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        boolean allNegative = true;\n        int max = Integer.MIN_VALUE;\n        for (int i=0;i<nums.length; i++) {\n            set.add(nums[i]);\n            if (nums[i] >= 0 ) {\n                allNegative = false;\n            }\n            max = Math.max(max, nums[i]);\n        }\n        if (allNegative) return max;\n        int total=0;\n        for (Integer i: set) {\n            if (i<0 && set.size() > 1) {\n                //ignore\n            } else  {\n                total += i;\n            }\n        }\n        return total;\n    }\n}","author":"hiandhello5","submissionId":"1575084734"},[]]},{"712":[{"id":"712","fileName":"1575084768.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int su = 0;\n\n        unordered_set<int> s;\n\n        for(int i = 0; i < nums.size(); ++i){\n            if(s.find(nums[i]) != s.end() || nums[i] < 0) continue;\n            s.insert(nums[i]);\n            su += nums[i];\n            \n        }\n\n        sort(nums.begin(),nums.end(), greater<int>());\n        if(su == 0) su += nums[0];\n        return su;\n    }\n};","author":"Top G","submissionId":"1575084768"},[]]},{"713":[{"id":"713","fileName":"1575084737.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set <int> st;\n\n        int ans = 0;\n        int min_ele = INT_MIN;\n        int zero_count = 0;\n\n        for (auto& num: nums) {\n            if (num > 0 && st.find(num) ==st.end()) {\n                ans += num;\n                st.insert(num);\n            }\n            else if (num <= 0) {\n                min_ele = max(min_ele, num);\n            }\n\n            if (num == 0)\n                zero_count++;\n        }\n\n        if (ans == 0)\n             return min_ele;\n\n        return ans;\n    }\n};","author":"Govardhan N","submissionId":"1575084737"},[]]},{"716":[{"id":"716","fileName":"1575084775.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = 0\n        takenany = 0\n        done = {}\n        for i in nums:\n            if i in done:\n                continue\n            if i <0:\n                continue\n            takenany = 1\n            done[i] = 1\n            ans = ans+ i\n        if takenany == 1:\n            return ans\n        return max(nums)","author":"devesh1102","submissionId":"1575084775"},[]]},{"719":[{"id":"719","fileName":"1575084820.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return nums[0]\n\n        max_num = max(nums)\n        if max_num < 0:\n            return max_num\n        \n        nums = set(nums)\n        ans = 0\n        for num in nums:\n            if num >= 0:\n                ans += num\n        return ans\n        ","author":"aiden99","submissionId":"1575084820"},[]]},{"721":[{"id":"721","fileName":"1575084791.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(num <= 0 for num in nums):\n            return max(nums)\n        positiveSet = set([num for num in nums if num > 0])\n        return sum(list(positiveSet))\n        ","author":"Albert_Zhang","submissionId":"1575084791"},[{"id":"1295","similarity":0.7222222222222222,"totOverlap":26,"longestOverlap":7}]],"1295":[{"id":"1295","fileName":"611225616.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0:\n            return max(nums)\n        s = set([x for x in nums if x > 0])\n        return sum(list(s))","author":"thuczh","submissionId":"611225616"},[{"id":"721","similarity":0.7222222222222222,"totOverlap":26,"longestOverlap":7}]]},{"722":[{"id":"722","fileName":"1575084833.txt","sourceCode":"class Solution\n{\n    public int maxSum(int[] as)\n    {\n        int sum = 0;\n        boolean allNeg = true;\n        int maxNeg = -100;\n        Set<Integer> set = new HashSet<>();\n        for (int a : as)\n        {\n            if (a > 0 && set.add(a))\n            {\n                sum += a;\n            }\n            if (a >= 0)\n            {\n                allNeg = false;\n            }\n            else\n            {\n                maxNeg = Math.max(maxNeg, a);\n            }\n        }\n        if (allNeg)\n        {\n            return maxNeg;\n        }\n        return sum;\n    }\n}","author":"LeetCoding_Pro","submissionId":"1575084833"},[]]},{"723":[{"id":"723","fileName":"1575084827.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = set(nums)\n        greatest_seen = float('-inf')\n        res = 0\n        good = False\n        for num in nums:\n            if num >= 0:\n                good = True\n                res += num\n            greatest_seen = max(greatest_seen, num)\n        return res if good else greatest_seen","author":"nchu05","submissionId":"1575084827"},[]]},{"728":[{"id":"728","fileName":"1575084883.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet();\n        int max = nums[0];\n        for (int num : nums) {\n        \tif (num > 0)\n        \t\tset.add(num);\n        \telse\n        \t\tmax = Math.max(num, max);\n        }\n        if (set.isEmpty())\n        \treturn max;\n        int result = 0;\n        for (int val : set)\n        \tresult += val;\n        return result;\n    }\n}","author":"realstar","submissionId":"1575084883"},[]]},{"729":[{"id":"729","fileName":"1575084841.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        if(nums.size()==1)\n            return nums[0];\n        int ans=0,maxi=INT_MIN;\n        unordered_map<int,int> mp;\n        for(int i=0;i<nums.size();i++){\n            if(mp[nums[i]]==0 && nums[i]>0)\n                ans+=nums[i];\n            mp[nums[i]]=1;\n            maxi=max(nums[i],maxi);\n        }\n        if(maxi<0)\n            return maxi;\n        return ans;\n    }\n};","author":"raju9177","submissionId":"1575084841"},[]]},{"733":[{"id":"733","fileName":"1575084896.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean[] seens = new boolean[101];\n        int sum = 0;\n        int max = Integer.MIN_VALUE;\n        for (int i = 0; i < nums.length; i++) {\n            max = Math.max(nums[i], max);\n            if (nums[i] > 0 && !seens[nums[i]]) {\n                seens[nums[i]] = true;\n                sum += nums[i];\n            }\n        }\n        if (sum == 0)\n            return max;\n        return sum;\n    }\n}","author":"watercyb","submissionId":"1575084896"},[]]},{"736":[{"id":"736","fileName":"1575084927.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map <int, int> um;\n        int ans = INT_MIN;\n        for (int i = 0;i < nums.size(); i++){\n            if (nums[i] <= 0) continue;\n            um[nums[i]]++;\n            if (um[nums[i]] == 1) {\n                if (ans == INT_MIN) ans = 0;\n                ans += nums[i];}\n        }\n        sort(nums.begin(), nums.end());\n        if (ans == INT_MIN) return nums.back();\n        return ans;\n    }\n};","author":"Lawliet188","submissionId":"1575084927"},[]]},{"737":[{"id":"737","fileName":"1575084910.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int z = 0;\n        for(int& i: nums) {\n            if(i==0)\n                z++;\n            st.insert(i);\n        }\n        int res = 0;\n        int mx = -101;\n        for(int i:st) {\n            if(i>0)\n                res += i;\n            mx = max(mx, i);\n        }\n        if(res==0 && z==0)\n            return mx;\n        return res;\n    }\n};","author":"Sourav Mandal","submissionId":"1575084910"},[]]},{"739":[{"id":"739","fileName":"1575084946.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int[] values = new int[101];\n        int nl = nums.length;\n        int max = -101;\n        for (int i = 0; i < nl; i++) {\n            if (nums[i] > 0) {\n                values[nums[i]]++;\n            }\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n        }\n        if (max <= 0) {\n            return max;\n        } else {\n            int sum = 0;\n            for(int i = 0; i < 101; i++) {\n                if (values[i] > 0) {\n                    sum += i;\n                }\n            }\n            return sum;\n        }\n    }\n}","author":"Manikandan K K","submissionId":"1575084946"},[]]},{"741":[{"id":"741","fileName":"1575084965.txt","sourceCode":"import java.util.*;\nclass Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n        int max = Integer.MIN_VALUE;\n\n        for (int i = 0; i < n; i++) {\n            max = Math.max(max, nums[i]);\n        }\n\n        if (max < 0) {\n            return max;\n        }\n\n        Set<Integer> visited = new HashSet<>();\n        int result = 0;\n\n        for (int i = 0; i < n; i++) {\n            if (nums[i] > 0 && !visited.contains(nums[i])) {\n                visited.add(nums[i]);\n                result = result + nums[i];\n            }\n        }\n\n        return result;\n        \n    }\n}","author":"Macharla Venkata Ravi Teja","submissionId":"1575084965"},[]]},{"743":[{"id":"743","fileName":"1575084947.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int minNeg = INT_MIN;\n        unordered_set<int> vals;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]<0 || vals.find(nums[i])!=vals.end()){\n                if(nums[i]<0){\n                    minNeg = max(minNeg,nums[i]);\n                }\n            }\n            else{\n                vals.insert(nums[i]);\n            }\n        }\n        if(vals.size()==0) return minNeg;\n        int ans = 0;\n        for(auto x:vals){\n            ans+=x;\n        }\n\n        return ans;\n    }\n};","author":"Niket Mishra","submissionId":"1575084947"},[]]},{"745":[{"id":"745","fileName":"1575084977.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool hp = false;\n        long long sum = 0;\n        int bnp = -1000000000;\n\n        unordered_set<int> seen;\n\n        for (int num : nums) {\n            if (num > 0) {\n                hp = true;\n                if (seen.find(num) == seen.end()) {\n                    sum += num;\n                    seen.insert(num);\n                }\n            } else {\n                bnp = max(bnp, num);\n            }\n        }\n        if (hp) {\n            return (int)sum;\n        } else {\n            return bnp;\n        }\n    }\n};","author":"SAAHIL AV","submissionId":"1575084977"},[]]},{"754":[{"id":"754","fileName":"1575085057.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        unordered_map<int,int> mp;\n        for(int i=0;i<nums.size();i++)\n            {\n                mp[nums[i]]++;\n                if(mp[nums[i]]==1 && nums[i]>=0) ans+=nums[i];\n            }\n        sort(nums.begin(),nums.end());\n        if(nums[nums.size()-1]<0) return nums[nums.size()-1];\n        return ans;\n        \n    }\n};","author":"Rachit Agrawal","submissionId":"1575085057"},[]]},{"755":[{"id":"755","fileName":"1575085018.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> mp;\n        for(int i = 0; i < nums.size(); i++) mp[nums[i]]++;\n\n        int sum = 0;\n        bool pos = false;\n        int neg = INT_MIN;\n        for(auto it = mp.begin(); it != mp.end(); it++){\n            if((*it).first < 0){\n                neg = (*it).first;\n            }\n            else{\n                pos = true;\n                sum += (*it).first;\n            }\n        }\n\n        if(pos) return sum;\n        return neg;\n    }\n};","author":"Ishan","submissionId":"1575085018"},[]]},{"758":[{"id":"758","fileName":"1575085083.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n       unordered_map<int,int>mp;\n        int mx=-1e9;\n        for(auto it:nums)\n        {\n            mp[it]++;\n            mx=max(mx,it);\n        }\n        int ans=0;\n        if(mx>=0){\n            for(auto it:mp){\n                if(it.first>=0) ans+=it.first;\n            }\n        }\n        else\n        {\n            int mn=-1e9;\n            for(auto &it:mp){\n                mn=max(mn,it.first);\n            }\n            ans=mn;\n        }\n        return ans;\n    }\n};","author":"Anurag Vaibhav","submissionId":"1575085083"},[{"id":"824","similarity":0.7164179104477612,"totOverlap":48,"longestOverlap":15}]],"824":[{"id":"824","fileName":"1575085618.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>mp;\n        int ans=0;\n        for(auto it:nums)\n            {\n                mp[it]++;\n            }\n        for(auto it:mp)\n            {\n                if(it.first>0)ans+=it.first;\n            }\n        if(ans==0){\n            int mx=INT_MIN;\n            for(auto it:mp)\n                {\n                    mx=max(mx,it.first);\n                }\n            ans=mx;    \n        }\n        return ans;\n            \n    }\n};","author":"Palak Shah","submissionId":"1575085618"},[{"id":"758","similarity":0.7164179104477612,"totOverlap":48,"longestOverlap":15}]]},{"759":[{"id":"759","fileName":"1575085110.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        TreeSet<Integer> set = new TreeSet<>();\n        int res = 0;\n        boolean flag = false;\n        for(int v: nums){\n            if(set.add(v) && v>=0){\n                res+=v;\n                flag = true;\n            }\n        }\n        if(!flag) return set.last();\n        return res;\n    }\n}","author":"Rishabh Kumrawat","submissionId":"1575085110"},[]]},{"760":[{"id":"760","fileName":"1575085080.txt","sourceCode":"func maxSum(nums []int) int {\n\thm := make(map[int]bool)\n\tres := 0\n    maxn := nums[0]\n\tfor i := range nums {\n        maxn = max(maxn, nums[i])\n\t\tif !hm[nums[i]] && nums[i] > 0 {\n\t\t\tres += nums[i]\n\t\t\thm[nums[i]] = true\n\t\t}\n\t}\n    if maxn<0 {\n        return maxn\n    }\n\treturn res\n}","author":"Wei-Li Lai","submissionId":"1575085080"},[]]},{"761":[{"id":"761","fileName":"1575085114.txt","sourceCode":"class Solution(object):\n    def maxSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        s = set()\n\n        for i in nums:\n            if(i > 0):\n                s.add(i)\n\n        if(len(s) == 0):\n            return max(nums)\n        return sum(s)","author":"saivardhan_1999","submissionId":"1575085114"},[]]},{"762":[{"id":"762","fileName":"1575085119.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int n = nums.size();\n        int ans = *max_element(nums.begin(),nums.end());\n        for(int i = 0; i < n; i++)\n            {\n                if(nums[i] > 0)\n                {\n                    s.insert(nums[i]);\n                }\n            }\n        if(s.empty())\n        {\n            return ans;\n        }\n        ans = 0;\n        for(auto x : s)\n            {\n                ans += x;\n            }\n        return ans;\n    }\n};","author":"Mihir Pandit","submissionId":"1575085119"},[]]},{"764":[{"id":"764","fileName":"1575085123.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int maxE = nums[0];\n        int sum = 0;\n        int su = 0;\n        unordered_set<int> s;\n        \n        for(int i=0; i<n; i++){\n            su += nums[i];\n        }\n        \n        for(int it : nums) {\n            maxE = max(maxE, it);\n            if(it > 0 && s.find(it) == s.end()) {\n                sum += it;\n                s.insert(it);\n            }\n        }\n        \n        return sum > 0 ? sum : maxE;\n    }\n};\n","author":"SA_Shukla","submissionId":"1575085123"},[]]},{"765":[{"id":"765","fileName":"1575085175.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        sort(a.begin(), a.end());\n\n        if(a.back() <= 0)\n            return a.back();\n        \n        int sum = 0, n = a.size();\n        if (a[0] > 0)\n            sum += a[0];\n        for (int i = 1; i < n; i++) {\n            if (a[i] != a[i - 1] && a[i] > 0) {\n                sum += a[i];\n            }\n        }\n\n        return sum;\n    }\n};","author":"Pushkar Mourya","submissionId":"1575085175"},[]]},{"766":[{"id":"766","fileName":"1575085176.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        st = set()\n        max_val = float(\"-inf\")\n        for n in nums:\n            if n > 0:\n                st.add(n)\n            max_val = max(max_val, n)\n\n        ans = 0\n        for n in st:\n            ans += n\n\n        if len(st) == 0:\n            return max_val\n            \n        return ans","author":"serein","submissionId":"1575085176"},[]]},{"477":[{"id":"477","fileName":"1575083265.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort()\n        s = 0\n        nSet = set()\n\n        for i in nums:\n            if i not in nSet and i >= 0:\n                s += i\n                nSet.add(i)\n        if len(nSet) == 0:\n            s = nums[-1]\n        \n        return s","author":"Likith","submissionId":"1575083265"},[{"id":"477","similarity":0.7272727272727273,"totOverlap":32,"longestOverlap":12}]],"769":[{"id":"769","fileName":"1575085216.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        total = 0\n        seen =set()\n        for num in nums:\n            if num not in seen and num > 0:\n                total += num\n                seen.add(num)\n        if len(seen) == 0:\n            return max(nums)\n        return total","author":"Shyam Kumar Reddy K","submissionId":"1575085216"},[{"id":"884","similarity":0.8837209302325582,"totOverlap":38,"longestOverlap":12},{"id":"1162","similarity":0.8372093023255814,"totOverlap":36,"longestOverlap":11},{"id":"1761","similarity":0.8048780487804879,"totOverlap":33,"longestOverlap":10},{"id":"769","similarity":0.7272727272727273,"totOverlap":32,"longestOverlap":12}]],"884":[{"id":"884","fileName":"1575086009.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        s = 0\n        for i in nums:\n            if i not in seen and i >= 0:\n                s += i\n                seen.add(i)\n        if len(seen) == 0:\n            return max(nums)\n        return s","author":"user7719id","submissionId":"1575086009"},[{"id":"769","similarity":0.8837209302325582,"totOverlap":38,"longestOverlap":12}]],"1162":[{"id":"1162","fileName":"1575088592.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = 0\n        hs = set()\n        for x in nums:\n            if x not in hs and x >= 0:\n                ans += x\n                hs.add(x)\n        if len(hs) == 0:\n            return max(nums)\n        return ans","author":"jachetheboss","submissionId":"1575088592"},[{"id":"769","similarity":0.8372093023255814,"totOverlap":36,"longestOverlap":11}]],"1761":[{"id":"1761","fileName":"611231702.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        d = set()\n        ans = 0\n        for i in nums:\n            if i in d:\n                continue\n            if i >= 0:\n                ans += i\n                d.add(i)\n        if len(d) == 0:\n            return max(nums)\n        return ans","author":"NCU_jack","submissionId":"611231702"},[{"id":"884","similarity":0.8048780487804879,"totOverlap":33,"longestOverlap":10}]]},{"771":[{"id":"771","fileName":"1575085210.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        contain = set()\n        total = 0\n        check = False\n        for num in nums:\n            if num < 0 or num in contain: continue\n            check = True\n            contain.add(num)\n            total += num\n        if not check: return max(nums)\n        return total","author":"N Venkat Abhilash","submissionId":"1575085210"},[]]},{"772":[{"id":"772","fileName":"1575085189.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        c = Counter(nums)\n        a = 0\n        for num in c:\n            if(num<0):\n                continue\n            a+=num\n        if a==0:\n            re = -1000000\n            for num in c:\n                re = max(re,num)\n            return re\n        return a\n        ","author":"srinandan69","submissionId":"1575085189"},[]]},{"775":[{"id":"775","fileName":"1575085244.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        vector<int>cnt(105,0);\n\n        int ans=0;\n        bool fl=0;\n\n        for(auto&num:nums){\n            if(num>=0 && cnt[num]==0){\n                ans+=num;\n                cnt[num]=1;\n                fl=1;\n            }\n        }\n\n        if(fl){\n            return ans;\n        }\n\n        int x=-1e9;\n        for(auto&num:nums){\n            x=max(x,num);\n        }\n       return x;\n        \n        \n    }\n};","author":"farmcreepissohard","submissionId":"1575085244"},[]]},{"776":[{"id":"776","fileName":"1575085266.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer>hs=new HashSet<>(); int ans=0; int max=Integer.MIN_VALUE;\n        boolean flag=false;\n        for(int num:nums){\n            if(num<=0){\n                max=Math.max(max,num);\n                continue;\n            }\n            if(!hs.contains(num)){\n                flag=true;\n                hs.add(num);\n                ans+=num;\n            }\n        }\n        if(flag)\n        return ans;\n        return max;\n    }\n}","author":"tinku_vishnu17","submissionId":"1575085266"},[]]},{"778":[{"id":"778","fileName":"1575085275.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        sort(nums.begin(),nums.end());\n        map<int,int> pm;\n        int sum =0;\n        for(int x : nums){\n            if(x>0 && pm[x] ==0){\n                sum += x;\n            }\n            pm[x] = 1;\n        }\n\n        if(nums[0] <0 && nums.back() <0){\n            return nums.back();\n        }\n\n        return sum;\n\n        \n    }\n};","author":"khalil shaik","submissionId":"1575085275"},[]]},{"779":[{"id":"779","fileName":"1575085272.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        res = max(nums)\n        temp = set(nums)\n        res2 = 0\n        for i in temp:\n            if i > 0:\n                res2 += i\n        if res2 > 0:\n            return res2\n        return res\n        ","author":"rukt","submissionId":"1575085272"},[]]},{"780":[{"id":"780","fileName":"1575085280.txt","sourceCode":"#define all(a) (a).begin(), (a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n\n// shortcut type\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<ll> vl;\ntypedef vector<vl> vll;\n\n// Constants\nconst int MOD = 1e9 + 7;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& v) {\n        set<int>st(all(v));\n        int sm=0;\n        if(*st.rbegin()<=0){\n            return *st.rbegin();\n        }\n        while(!st.empty()){\n            if(*st.rbegin()>0){\n                sm+=*st.rbegin();\n            }\n            else break;\n            st.erase(prev(st.end()));\n        }\n        return sm;\n    }\n};","author":"Sk Najir","submissionId":"1575085280"},[]]},{"781":[{"id":"781","fileName":"1575085290.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> freq;\n        int sum = 0;\n        bool isZero = false;\n        for(auto &a: nums) {\n            isZero |= (a == 0);\n            if(a <= 0 or freq.count(a))\n                continue;\n\n            sum += a;\n            freq[a] += 1;\n        }\n\n        if(isZero == false and sum == 0) {\n            sum = *max_element(nums.begin(), nums.end());\n        }\n        return sum;\n    }\n};","author":"_Dragneel","submissionId":"1575085290"},[]]},{"782":[{"id":"782","fileName":"1575085300.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> se;\n        for(auto x: nums) se.insert(x);\n        int ans = 0;\n        bool ok = false;\n        for(auto x: se)\n            if(x >= 0) {\n                ans += x;\n                ok = true;\n            }\n        if(!ok){\n            auto it = se.end();\n            it--;\n            return *it;\n        }\n        return ans;\n    }\n};","author":"Do Van Tuan","submissionId":"1575085300"},[]]},{"785":[{"id":"785","fileName":"1575085305.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map <int , int> mp;\n        for(auto n : nums) mp[n]++;\n        int maxsum = 0;\n        int sum = 0;\n        int t = -1e9;\n        for(auto x : mp){\n            sum = max(sum , sum + x.first);\n            maxsum = max(sum , maxsum);\n            t = max(x.first,t);\n        } \n        if(maxsum == 0) return t; \n        return maxsum;\n    }\n};","author":"Manimum","submissionId":"1575085305"},[]]},{"787":[{"id":"787","fileName":"1575085307.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector <bool> pres(105,false);\n        int sum=0;\n        int mx=-105;\n        bool poss=false;\n        for(auto &z : nums){\n            if(z >= 0 && !pres[z]){\n                sum+=z;\n                pres[z]=true;\n                poss=true;\n            }\n            mx=max(mx,z);\n        }\n        if(!poss) sum=mx;\n        return sum;\n    }\n};","author":"gok_2001","submissionId":"1575085307"},[]]},{"789":[{"id":"789","fileName":"1575085320.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        result = 0\n        count = 0\n        st = set(nums)\n        for x in st:\n            if x > 0:\n                result += x\n                count += 1\n        return result if count > 0 else max(st)","author":"Zhu","submissionId":"1575085320"},[]]},{"790":[{"id":"790","fileName":"1575085323.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = set(nums)\n        ans = max(nums)\n        nums.remove(ans)\n        for n in nums:\n            if n > 0:\n                ans += n\n        return ans","author":"3ternalSage","submissionId":"1575085323"},[]]},{"792":[{"id":"792","fileName":"1575085339.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n\n        int n = nums.size();\n        long long last = -100000;\n        long long answer = 0;\n\n        if(nums[n-1] < 0){\n            return nums[n-1];\n        }\n\n        for(int i = n-1; i >= 0; i--)if(nums[i] >= 0){\n            if(nums[i] != last){\n                answer += nums[i];\n            }\n            last = nums[i];\n        }\n        return answer;\n    }\n};","author":"Nima","submissionId":"1575085339"},[]]},{"796":[{"id":"796","fileName":"1575085395.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans =0;\n        bool neg = 0;\n        unordered_map<int,bool> m;\n        int d = nums[0];\n        for(auto &n:nums) {if(n>0) m[n]=1,neg=1;d=max(d,n);}\n        if(!neg) return d;\n        for(auto &v:m) ans+=v.first;\n        return ans;\n    }\n};","author":"Dibas Behera","submissionId":"1575085395"},[]]},{"798":[{"id":"798","fileName":"1575085389.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        \n        set<int> st;\n        sort(nums.begin(),nums.end(),greater<int>());\n        int ans=0,f=0;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>=0&&st.count(nums[i])==0){\n                f=1;\n                ans+=nums[i];\n                st.insert(nums[i]);\n            }\n            \n}\n        \n        if(f==0){\n            ans+=(nums[0]);\n        }\n        \n        return ans;\n        \n    }\n};","author":"Shubham Chauhan","submissionId":"1575085389"},[]]},{"799":[{"id":"799","fileName":"1575085405.txt","sourceCode":"\n  //the game is won at the practice not during the performance//-->someone \n #include <bits/stdc++.h>\n using namespace std;\n #define ll                     long long int\n #define all(v)                 v.begin(), v.end()\n #define maxi(v)                *max_element(v.begin(), v.end())\n #define vecsum(v)              accumulate(v.begin(), v.end(), 0LL)\n #define mini(v)                *min_element(v.begin(), v.end())\n #define sortd(v)                sort(v.begin(), v.end(), greater<int>())\n #define read(a, n)             for(int i=0;i<n;i++)    cin >> a[i]\n #define print(a, n)            for(int i=0;i<n;i++)    cout << a[i] << \" \"; cout << endl\n #define rep(a,n,b,i)           for(int i=a;i<n;i+=b)       \n #define M                       1000000007\n #define pb                      push_back\n #define sz                      size()\n #define len                     length()\n #define fir                     first\n #define sec                     second\n #define cy                      cout << \"YES\" << endl\n #define cn                      cout << \"NO\" << endl \n using pp = pair<ll,ll>;\n using ppp = pair<ll,pair<ll,ll>>;\n using vl = vector<ll>;\n using vc = vector<char>;\n using vi = vector<int>;\n using vvl=vector<vector<ll>>;\n using vvc=vector<vector<char>>;\n \n class Solution {\n    public:\n        int maxSum(vector<int>& v) {\n            ll n=v.sz;\n            ll ans=0;\n            set<ll>st;\n            for(auto it:v){\n                if(it>0)st.insert(it);\n            }\n            for(auto it:st)ans+=it;\n            if(st.sz==0){\n                ans=maxi(v);\n            }\n            return ans;\n        }\n    };","author":"nishanth14","submissionId":"1575085405"},[]]},{"800":[{"id":"800","fileName":"1575085408.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        int maxi = -1e9;\n        for(int i=0; i<nums.size(); i++){\n            if(nums[i] >= 0){\n                st.insert(nums[i]);\n            }\n            else maxi = max(maxi, nums[i]);\n        }\n        int ans = 0;\n        if(st.size() ==0) st.insert(maxi);\n        for(auto &it: st) ans+= it;\n        return ans;\n    }\n};","author":"IronEdge","submissionId":"1575085408"},[]]},{"804":[{"id":"804","fileName":"1575085432.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int ans = 0, last = -1, num = 0;\n        Arrays.sort(nums);\n        for (int i = nums.length - 1; i >= 0; i--)\n            {\n                if (last != nums[i] && nums[i] > 0)\n                {\n                    ans += nums[i];\n                    num++;\n                }\n                last = nums[i];\n            }\n        if (num == 0) ans = nums[nums.length - 1];\n\n        return ans;\n    }\n}","author":"sodacorsair","submissionId":"1575085432"},[]]},{"805":[{"id":"805","fileName":"1575085462.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        min = nums[0]\n        total = 0\n        for i in nums:\n            if i > 0:\n                if i not in s:\n                    total += i\n                    s.add(i)\n            if i > min:\n                min = i\n        if min > 0:\n            return total\n        else:\n            return min","author":"jyhuang2005","submissionId":"1575085462"},[]]},{"806":[{"id":"806","fileName":"1575085478.txt","sourceCode":"public class Solution {\n    public int MaxSum(int[] nums) {\n        var set = new HashSet<int>();\n        foreach (var num in nums)\n        {\n            if (num > 0)\n            {\n                set.Add(num);\n            }\n        }\n\n        return set.Count > 0 ? set.Sum() : nums.Max();\n    }\n}","author":"Walias","submissionId":"1575085478"},[]]},{"808":[{"id":"808","fileName":"1575085486.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        int sum=0,neg=0;\n        map<int,int>mp;\n\n        for(auto u:nums)\n        {\n            if(u>=0)\n            {\n                if(!mp[u])\n                {\n                    sum+=u;\n                    mp[u]=1;\n                    \n                }\n            }\n            else\n            {\n                neg++;\n            }\n        }\n        if(neg==nums.size())return *max_element(nums.begin(),nums.end());\n\n        return sum;\n    \n    }\n};","author":"Neeraj9436","submissionId":"1575085486"},[]]},{"810":[{"id":"810","fileName":"1575085488.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        unique = set(nums)\n\n        for num in list(unique):\n            if num < 0:\n                unique.remove(num)\n\n        if not unique:\n            return max(nums)\n\n        return sum(unique)","author":"Huskat","submissionId":"1575085488"},[]]},{"811":[{"id":"811","fileName":"1575085506.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        f=0\n        c=0\n        an=0\n        s=set()\n        for i in range(len(nums)):\n            if(nums[i]<0):\n                c+=1\n            elif(nums[i]==0):\n                f=1\n            else:\n                if(nums[i] not in s):\n                    s.add(nums[i])\n                    an+=nums[i]\n        if(c==len(nums)):\n            return max(nums)\n        else:\n            return an","author":"KartikeyThakur","submissionId":"1575085506"},[]]},{"812":[{"id":"812","fileName":"1575085505.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = sorted(list(set(nums)))\n        if nums[-1] < 0:\n            return nums[-1]\n\n        return sum(filter(lambda k: k >= 0, nums))","author":"dinhlockt02","submissionId":"1575085505"},[]]},{"813":[{"id":"813","fileName":"1575085531.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        unordered_map<int,bool>mapi;\n        bool flag=0;\n        int maxi=INT_MIN;\n        for(int &i:nums){\n            maxi=max(maxi,i);\n            if(mapi.count(i) || i<0){\n                \n            }else{\n                flag=1;\n                mapi[i]=1;\n                ans+=i;\n            }\n        }\n        if(!flag){\n            ans+=maxi;\n        }\n        return ans;\n    }\n};","author":"Aayush Singh","submissionId":"1575085531"},[]]},{"815":[{"id":"815","fileName":"1575085539.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(int it : nums)\n            st.insert(it);\n        int s = 0;\n        bool f = false;\n        int neg = INT_MIN;\n        for(auto it : st){\n            if(it > 0){\n                s += it;\n                f = true;\n            }\n            else{\n                neg = max(neg, it);\n            }\n        }\n        return f ? s : neg;\n    }\n};","author":"S Rithish","submissionId":"1575085539"},[]]},{"817":[{"id":"817","fileName":"1575085546.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans=0; se=set(); \n        for i in nums: \n            if i>0 and i not in se: ans+=i; se.add(i); \n        if ans==0: ans=max(nums); \n        return ans; ","author":"manoharsingh2402","submissionId":"1575085546"},[]]},{"820":[{"id":"820","fileName":"1575085563.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        d=defaultdict(lambda:0)\n        for i in nums:\n            d[i]+=1\n\n        ans=0\n        f=0\n        for i in d:\n            if i>0:\n                f=1\n                ans+=i\n                \n        if f==0:\n            return max(list(d.keys()))\n        return ans","author":"wanderlust312","submissionId":"1575085563"},[]]},{"821":[{"id":"821","fileName":"1575085599.txt","sourceCode":"#define FOR(i,a,b)   for(int i = a; i < b.size(); ++i)\n#define F(i,a,b)     for(int i = a; i < b; ++i)\n#define F0(i,b)      for(int i = 0; i< b.size();++i)\n#define BE(a)        a.begin(), a.end()\n#define __S(a)       a.size()\n#define pb(a)        push_back(a)\n#define pr(a)        cout << a << \" \";\n\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntypedef vector<string> vs;\ntypedef vector<int> vi;\ntypedef vector<vector<int> > vvi;\ntypedef vector <long long> vl;\ntypedef vector<vector<long long> > vvl;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxx = -101;\n        set<int> st;\n\n        for(auto a: nums){\n            maxx =max(maxx,  a);\n            if (a > 0) st.insert(a);\n        }\n\n        int sum{};\n        for(auto a= st.begin(); a != st.end();a++){\n            sum += *a;\n        }\n\n        if (sum == 0) return maxx;\n        else return sum;\n    }\n};","author":"ziang","submissionId":"1575085599"},[]]},{"823":[{"id":"823","fileName":"1575085570.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        sort(nums.begin(),nums.end());\n        ans=max(nums[0],0);\n        for(int i=1;i<nums.size();i++)\n            {\n                if(nums[i]!=nums[i-1]&&nums[i]>0)\n                {\n                    ans+=nums[i];\n                }\n            }\n        if(nums[nums.size()-1]<0)\n        {\n            ans=nums[nums.size()-1];\n        }\n        return ans;\n        \n    }\n};","author":"Raj Tiwari","submissionId":"1575085570"},[]]},{"825":[{"id":"825","fileName":"1575085588.txt","sourceCode":"class Solution(object):\n    def maxSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        a=list(set(nums))\n        b=sum(i for i in a if i>0)\n        if b>0:\n            return b\n        else:\n            return max(a)","author":"ollimuh","submissionId":"1575085588"},[]]},{"826":[{"id":"826","fileName":"1575085625.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& v) {\n        unordered_map<int,int> mp;\n        int i,mn=-1e5,n=v.size(),sum=0;\n        \n        for(i=0;i<n;i++) {\n            mn = max(mn, v[i]);\n            \n            if(v[i] <= 0) {\n                continue;\n            }\n            \n            if(mp.find(v[i]) == mp.end()) {\n                sum += v[i];\n            }\n            mp[v[i]] = 1;\n        }\n        return sum == 0 ? mn : sum;\n    }\n};","author":"Yuu","submissionId":"1575085625"},[]]},{"827":[{"id":"827","fileName":"1575085617.txt","sourceCode":"class Solution(object):\n    def maxSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        if len(nums)==1:\n            return nums[0]\n        s = set(nums)\n        ans = 0\n        neg = 0\n        for x in s:\n            if x>=0:\n                ans+=x\n            else:\n                neg+=1\n        if len(s)==neg:\n            return sorted(list(s))[-1]\n        return ans\n        ","author":"prudvinit","submissionId":"1575085617"},[]]},{"831":[{"id":"831","fileName":"1575085653.txt","sourceCode":"class Solution {\npublic:\n    const int INF = 1e9;\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        map<int,int> hash;\n        int mxNeg = -INF;\n        bool foundPos = false;\n        for(auto &x : nums) {\n            if(hash[x])continue;\n            if(x <= 0) {\n                mxNeg = max(mxNeg,x);\n                continue;\n            }\n            foundPos = true;\n            hash[x] = 1;\n            ans += x;\n        }\n        if(!foundPos)\n            return mxNeg;\n        return ans;\n    }\n};","author":"Manas Kumar","submissionId":"1575085653"},[]]},{"833":[{"id":"833","fileName":"1575085651.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mxneg = INT_MIN;\n        int mxpos = 0;\n        set<int>pos;\n        bool isposPresent = false;\n        for(auto i:nums){\n            if(i<0){\n                mxneg=max(mxneg,i);\n            }\n            else{\n                pos.insert(i);\n                isposPresent = true;\n            }\n        }\n        if(isposPresent){\n            for(auto i:pos){\n                mxpos+=i;\n            }\n            return mxpos;\n        }\n        else{\n            return mxneg;\n        }\n        \n        \n    }\n};","author":"Suryasekhar K","submissionId":"1575085651"},[]]},{"834":[{"id":"834","fileName":"1575085665.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        bool exist[101] = {false};\n        for (int i = 0; i < nums.size(); i++) {\n            int num = nums[i];\n            if (num > 0 and !exist[num]) {\n                sum += num;\n                exist[num] = true;\n            }\n        }\n\n        if (sum == 0) {\n            sum = *max_element(nums.begin(), nums.end());\n        }\n\n        return sum;\n    }\n};","author":"TuAnhNguyen","submissionId":"1575085665"},[]]},{"835":[{"id":"835","fileName":"1575085663.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int ans = 0;\n        for(int x : nums) {\n            if(x >= 0 && st.find(x) == st.end()) {\n                ans += x;\n                st.insert(x);\n            }\n        }\n        if(ans == 0 && st.find(0) == st.end()) {\n            return *max_element(begin(nums),end(nums));\n        }\n        return ans;\n    }\n};","author":"Shubham choudhary","submissionId":"1575085663"},[]]},{"837":[{"id":"837","fileName":"1575085711.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        \n        Map < Integer , Integer > mp = new HashMap<>();\n        int n  = nums.length;\n        int mx = nums[0];\n        for (int i = 0 ;i < n; i++){\n            mx = Math.max(mx , nums[i]);\n            if (nums[i] >= 0)\n                mp.put(nums[i] , mp.getOrDefault(nums[i] , 0) + 1);\n        }\n        if (mp.size()==0)\n            return mx;\n        \n        int ans = 0;\n        for (Map.Entry < Integer , Integer > v  :mp.entrySet()){\n            ans = ans + v.getKey();\n        }\n        return ans;\n        \n        \n\n    }\n}","author":"SATYAJEET","submissionId":"1575085711"},[]]},{"841":[{"id":"841","fileName":"1575085728.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        hm = {}\n        maxi = float('-inf')\n        s = 0\n        flag = False\n        for i in nums:\n            if i >= 0 and i not in hm:\n                s += i\n                flag = True\n                hm[i] = 1\n            elif i < 0:\n                maxi = max(maxi,i)\n        if not flag:\n            return maxi\n        return s\n            \n            \n        ","author":"Niharika","submissionId":"1575085728"},[]]},{"842":[{"id":"842","fileName":"1575085730.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = 0\n        ma = -float('inf')\n        ct_set = set()\n        for i in nums:\n            if i >=0 and (i not in ct_set):\n                ans+=i\n                ct_set.add(i)\n            ma = max(i,ma)\n        if ma <0:\n            ans = ma\n        return ans","author":"Sunny","submissionId":"1575085730"},[]]},{"843":[{"id":"843","fileName":"1575085732.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = a.size();\n        set<int> st(a.begin(), a.end());\n        if (ranges::max(a) > 0) {\n            int ans = 0;\n            while (st.size() && *st.rbegin() > 0) {\n                ans += *st.rbegin();\n                st.erase(--st.end());\n            }\n            return ans;\n        } else {\n            return ranges::max(a);\n        }\n    }\n};","author":"Sam Huang","submissionId":"1575085732"},[]]},{"844":[{"id":"844","fileName":"1575085729.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        max_neg = -inf\n        ans = 0\n        for num in nums:\n            if num < 0:\n                max_neg = max(max_neg, num)\n            elif num not in seen:\n                seen.add(num)\n                ans += num\n\n        return ans if seen else max_neg","author":"quizliu","submissionId":"1575085729"},[]]},{"845":[{"id":"845","fileName":"1575085739.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        \n        int[] ar = new int[101];\n        \n        int m1 = Integer.MIN_VALUE;\n\n        for(int x : nums){\n            if(x<0){\n                m1 = Math.max(m1, x);\n                continue;\n            };\n            \n            ar[x]++;\n        }\n        \n        int res = 0;\n        boolean f = true;\n        for(int i = 0; i<ar.length;i++){\n            if(ar[i]>0){\n                res+=i;\n                f = false;\n            } \n        }\n        \n        if(f) res+= m1;\n        return res;\n    }\n}","author":"Jinal Patel","submissionId":"1575085739"},[]]},{"846":[{"id":"846","fileName":"1575085746.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> a;\n        int max=INT_MIN;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>0) a.insert(nums[i]);\n            if(nums[i]>max) max=nums[i];\n        }\n        int ans=0;\n        for(auto& it:a){\n            ans+=it;\n        }\n        if(max<0) ans+=max;\n        return ans;\n    }\n};","author":"Chanakya2456","submissionId":"1575085746"},[]]},{"847":[{"id":"847","fileName":"1575085764.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        uniques = set()\n        for n in nums:\n            uniques.add(n)\n        res = -math.inf\n        for n in uniques:\n            if res < 0:\n                res = max(res, n)\n            else:\n                if n > 0:\n                    res += n\n        return res\n        \n        ","author":"Minghao Li","submissionId":"1575085764"},[]]},{"849":[{"id":"849","fileName":"1575085776.txt","sourceCode":"impl Solution {\n    pub fn max_sum(nums: Vec<i32>) -> i32 {\n        let mut nums_set = std::collections::HashSet::new();\n        let mut answer = 0;\n        let mut max = nums[0];\n        for num in nums {\n            if num >= 0 {\n                if !nums_set.contains(&num) {\n                    answer += num;\n                    nums_set.insert(num);\n                }\n            }\n            max = std::cmp::max(max, num);\n        }\n        if nums_set.len() == 0 {\n            max\n        } else {\n            answer\n        }\n    }\n}\n","author":"WHMHammer","submissionId":"1575085776"},[]]},{"850":[{"id":"850","fileName":"1575085777.txt","sourceCode":"class Solution {\npublic:\nint maxSum(vector<int>& nums) {\n    int res = -100;\n    set<int> s(begin(nums), end(nums));\n    for (int n : s) {\n        res = max(res + n, n);\n    }\n    return res;\n}\n};","author":"Vlad","submissionId":"1575085777"},[]]},{"851":[{"id":"851","fileName":"1575085788.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> arr(200, 0);\n        int ans = 0, zp = 0;\n        for(auto it:nums){\n            if(it>0 && arr[it]==0){\n                ans+=it;\n                arr[it] = 1;\n            }\n            else if(it==0){\n                zp = 1;\n            }\n        }\n        if(ans==0 and zp==1) return 0;\n        else if(ans==0 and zp==0){\n            int mx = -1000;\n            for(auto it:nums){\n                mx = max(mx, it);\n            }\n            return mx;\n        }\n        return ans;\n    }\n};","author":"anurag073","submissionId":"1575085788"},[]]},{"852":[{"id":"852","fileName":"1575085806.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        map<int,int> mp;\n        long long int s=0;\n        if(a.size()==1)return a[0];\n        int mx=INT_MIN;\n        for(int i=0;i<a.size();i++){\n            if(mp[a[i]]==0&&a[i]>0){\n                s+=a[i];\n            }\n            mx=max(mx,a[i]);\n            mp[a[i]]++;\n        }\n        if(s==0)return mx;\n        return s;\n    }\n};","author":"Rip_Logic","submissionId":"1575085806"},[]]},{"853":[{"id":"853","fileName":"1575085797.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int, int> m;\n        for(int i=0; i<nums.size(); i++)\n            {\n                if(nums[i]>0)\n                    m[nums[i]]++;\n            }\n        int ans=0;\n        int tmp=-200;\n        if(m.size()==0)\n        {\n            for(int i=0; i<nums.size(); i++)\n                tmp=max(tmp, nums[i]);\n\n            return tmp;\n        }\n        for(auto it:m)\n            ans+=it.first;\n\n        return ans;\n    }\n};","author":"vansh268p","submissionId":"1575085797"},[]]},{"854":[{"id":"854","fileName":"1575085808.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> hset=new HashSet<Integer>();\n        int sum=0;\n        for(int i=0;i<nums.length;i++)\n            {\n                if(nums[i]>0)\n                {\n                    if(!hset.contains(nums[i]))\n                    {\n                        hset.add(nums[i]);\n                        sum+=nums[i];\n                    }\n                }\n            }\n        if(sum==0)\n        {\n            Arrays.sort(nums);\n            sum=nums[nums.length-1];\n        }\n        return sum;\n    }\n}","author":"Sakshi Kishore","submissionId":"1575085808"},[]]},{"856":[{"id":"856","fileName":"1575085798.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        positive_set = set()\n        max_negative = float('-inf')\n        for num in nums:\n            if num >= 0 and num not in positive_set:\n                positive_set.add(num)\n            elif num < 0:\n                max_negative = max(max_negative, num)\n        \n        return sum(positive_set) if len(positive_set) != 0 else max_negative","author":"Adamranger","submissionId":"1575085798"},[]]},{"857":[{"id":"857","fileName":"1575085816.txt","sourceCode":"class Solution {\npublic:    \n    int maxSum(vector<int>& nums) \n    {\n        unordered_map<int,int>Map;\n        for (int x: nums) Map[x]++;\n        \n        int sum = 0;\n        int count = 0;\n        for (auto [k,v]: Map)\n        {\n            if (k>0) \n            {\n                sum += k; \n                count++;\n            }\n        }\n        \n        if (count>0) return sum;\n        \n        return *max_element(nums.begin(),nums.end());\n        \n        \n    }\n};","author":"wisdompeak","submissionId":"1575085816"},[]]},{"859":[{"id":"859","fileName":"1575085812.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool allNeg = true;\n        int maxE = INT_MIN;\n        \n        int ans = 0;\n        set<int> s;\n        for(int i = 0; i < nums.size(); i++) {\n            if(nums[i] > 0) {\n                s.insert(nums[i]);\n                allNeg = false;\n            }\n            maxE = max(maxE, nums[i]);\n        }\n\n        if(allNeg) {\n            return maxE;\n        }\n\n        for(auto& k: s) {\n            ans += k;\n        }\n        return ans;\n    }\n};","author":"振群 高","submissionId":"1575085812"},[]]},{"861":[{"id":"861","fileName":"1575085853.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        map<int, int> vis;\n        int ans = 0;\n        bool ok = false;\n        for(int i: nums){\n            if(i >= 0 && !vis[i]){\n                ans += i;\n                vis[i] = 1;\n                ok = true;\n            }\n        }\n        if(!ok)return *max_element(nums.begin(), nums.end());\n        return ans;\n    }\n};","author":"Ashutosh Sahu","submissionId":"1575085853"},[]]},{"294":[{"id":"294","fileName":"1575081992.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int ans = 0;\n        int maxx = Integer.MIN_VALUE;\n        int n = nums.length;\n        Set<Integer> s = new HashSet<>();\n        for (int i=0; i<n; i++) {\n            maxx = Math.max(maxx, nums[i]);\n            if (nums[i] > 0 && !s.contains(nums[i])) {\n                s.add(nums[i]);\n                ans += nums[i];\n            }\n        }\n        return ans != 0 ? ans : maxx;\n    }\n}","author":"yge2","submissionId":"1575081992"},[{"id":"294","similarity":0.7088607594936709,"totOverlap":56,"longestOverlap":9}]],"862":[{"id":"862","fileName":"1575085807.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n      int n = nums.length;\n       HashSet<Integer> set = new HashSet<>();\n        int sum = 0; int cnt = 0; int max = -101;\n        for(int i=0;i<n;i++)\n        {\n            if(!set.contains(nums[i])&&nums[i]>=0)\n            {\n                set.add(nums[i]);\n                sum+=nums[i];\n                cnt++;\n            }\n            max = Math.max(max,nums[i]);\n        }\n        if(cnt>0) return sum;\n        return max;\n    }\n}","author":"TulasiRaj","submissionId":"1575085807"},[{"id":"1782","similarity":0.7647058823529411,"totOverlap":78,"longestOverlap":17},{"id":"1153","similarity":0.7222222222222222,"totOverlap":65,"longestOverlap":11},{"id":"1153","similarity":0.7088607594936709,"totOverlap":56,"longestOverlap":9}]],"1153":[{"id":"1153","fileName":"1575088435.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        // Delete n number of elements\n        // Not empty though - cannot delete all\n        // Select subarray such taht elements are unique, sum is maximized\n\n        // All negative numbers can be deleted\n        // Test cases:\n        // (1) All negative\n        // [-1, -2, -1,- 1, -1]\n        // (2) All 0s\n        // \n        int sum = 0;\n        int largestElem = Integer.MIN_VALUE;\n        Set<Integer> seen = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            largestElem = Math.max(largestElem, nums[i]);\n            if (!seen.contains(nums[i]) && nums[i] > 0) {\n                seen.add(nums[i]);\n                sum += nums[i];\n            }\n        }\n\n        if (largestElem > 0) return sum;\n        else return largestElem;\n    }\n}","author":"Kenny","submissionId":"1575088435"},[{"id":"862","similarity":0.7222222222222222,"totOverlap":65,"longestOverlap":11}]],"1782":[{"id":"1782","fileName":"611233236.txt","sourceCode":"import java.util.HashSet;\nimport java.util.Set;\n\nclass Solution {\n    public int maxSum(int[] nums) {\n        int len = nums.length;\n        int now = 0;\n\n        Set<Integer> set= new HashSet<>();\n\n        for (int i = 0; i < len; i++) {\n            if(!set.contains(nums[i])&&nums[i]>=0) {\n                set.add(nums[i]);\n                now += nums[i];\n            }\n        }\n        int max = Integer.MIN_VALUE;\n        for (int i = 0; i < len; i++) {\n            max=Math.max(max,nums[i]);\n        }\n        if(max<=0) return max;\n        return now;\n\n    }\n}","author":"Run","submissionId":"611233236"},[{"id":"862","similarity":0.7647058823529411,"totOverlap":78,"longestOverlap":17}]]},{"863":[{"id":"863","fileName":"1575085859.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int, int> freq;\n        for (auto &&v: nums)\n                freq[v]++;\n\n        int s = 0, neg = 0;\n        auto it = freq.end(); it--;\n        int cnt= 0 ;\n        while (1) {\n            if (it->first < 0) {\n                neg += it->first;\n                break;\n            } else \n                cnt++;\n            s += it->first;\n            if (it == freq.begin()) break;\n            it--;\n        }\n        return cnt >= 1 ? s : neg;\n    }\n};","author":"sunilsatyarampatel","submissionId":"1575085859"},[]]},{"864":[{"id":"864","fileName":"1575085877.txt","sourceCode":"#include <bits/stdc++.h>\nusing namespace std;\n#define F first\n#define S second\n#define R cin>>\n#define ll long long\n#define ln cout<<'n'\n#define in(a) insert(a)\n#define pb(a) push_back(a)\n#define pd(a) printf(\"%.10fn\",a)\n#define mem(a) memset(a,0,sizeof(a))\n#define all(c) (c).begin(),(c).end()\n#define iter(c) __typeof((c).begin())\n#define rrep(i,n) for(ll i=(ll)(n)-1;i>=0;i--)\n#define REP(i,m,n) for(ll i=(ll)(m);i<(ll)(n);i++)\n#define rep(i,n) REP(i,0,n)\n#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)\nll check(ll n,ll m,ll x,ll y){return x>=0&&x<n&&y>=0&&y<m;}void pr(){ln;}\ntemplate<class A,class...B>void pr(const A &a,const B&...b){cout<<a<<(sizeof...(b)?\" \":\"\");pr(b...);}\ntemplate<class A>void PR(A a,ll n){rep(i,n){if(i)cout<<' ';cout<<a[i];}ln;}\nconst ll MAX=1e9+7,MAXL=1LL<<61,dx[8]={0,-1,0,1,-1,-1,1,1},dy[8]={-1,0,1,0,-1,1,1,-1};\ntypedef pair<ll,ll> P;\n\nclass Solution {\npublic:\n  int maxSum(vector<int>& a) {\n    int ans=-MAX;\n    set<ll> se;\n    rep(i,a.size()) se.in(-a[i]);\n    int sum=0;\n    tr(it,se) {\n      sum-=*it;\n      ans=max(ans,sum);\n    }\n    return ans;\n  }\n};\n","author":"kzyKT","submissionId":"1575085877"},[]]},{"865":[{"id":"865","fileName":"1575085870.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int ans = 0;\n        HashSet<Integer> set = new HashSet();\n        int max = nums[0];\n        for(int i:nums){\n            max = Math.max(max,i);\n            if(i>0 && !set.contains(i)){\n                ans+=i;\n                set.add(i);\n            }\n        }\n        if(max<0) return max;\n        return ans;\n    }\n}","author":"Vinayak Soni","submissionId":"1575085870"},[]]},{"867":[{"id":"867","fileName":"1575085893.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> mp;\n\n        for(auto x: nums){\n            mp[x]++;\n        }\n\n        int ans = 0, flag = 0,mx=-500;\n        \n        for(auto x: mp){\n            if(x.first>0){\n                ans+=x.first;\n                flag = 1;\n            }\n            mx=max(mx,x.first);\n        }\n\n        if(!flag){\n            ans=mx;\n        }\n\n        return ans;\n    }\n};","author":"Anish Mahale","submissionId":"1575085893"},[]]},{"869":[{"id":"869","fileName":"1575085892.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int sum = nums[nums.length - 1], prev = sum;        \n        for (int i = nums.length - 2; i >= 0; i--) {\n            if (nums[i] == prev) continue;\n            if (nums[i] > 0) sum += nums[i];\n            else break;\n            prev = nums[i];\n        }\n        return sum;\n    }\n}","author":"hulot-bak","submissionId":"1575085892"},[{"id":"942","similarity":0.7796610169491526,"totOverlap":46,"longestOverlap":11}]],"942":[{"id":"942","fileName":"1575086461.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int sum = nums[nums.length-1];\n        for (int i=nums.length-2; i>=0; i--) {\n            if (nums[i] == nums[i+1]) continue;\n            if (nums[i] > 0) sum += nums[i];\n            else break;\n        }\n        return sum;\n    }\n}","author":"iris","submissionId":"1575086461"},[{"id":"869","similarity":0.7796610169491526,"totOverlap":46,"longestOverlap":11}]]},{"871":[{"id":"871","fileName":"1575085901.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>m;\n        int mx=INT_MIN;\n        int pos =0 ;\n        for(auto &i:nums){\n            m[i]++;\n            if(i>=0){\n                pos=1;\n            }\n            mx=max(mx,i);\n        }\n        if(pos==0){\n            return mx;\n        }\n        \n        int ans=0;\n        for(auto &i:m){\n            if(i.first>=0)\n            ans+=i.first;\n        }\n        return ans;\n    }\n};","author":"CASIO-FX69","submissionId":"1575085901"},[]]},{"872":[{"id":"872","fileName":"1575085926.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, bool> visit;\n        \n\n        int result = 0, pick = 0, max_element = INT_MIN;\n        for (int num : nums) {\n            if (num > 0 && !visit[num]) {\n                result += num;\n                visit[num] = true;\n                pick++;\n            }\n            max_element = max(max_element, num);\n        }\n\n        return (pick == 0) ? max_element : result;\n    }\n};","author":"Chi-Shen Chan","submissionId":"1575085926"},[]]},{"874":[{"id":"874","fileName":"1575085915.txt","sourceCode":"class Solution(object):\n    def maxSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        freCnt = collections.Counter(nums)\n        vList = list(freCnt.keys())\n        vList.sort()\n        #print(vList)\n        n = len(vList)\n        res = float('-inf')\n        s = 0\n        for i in range(n-1,-1,-1):\n            s += vList[i]\n            res = max(res,s)\n        return res","author":"luckyboy","submissionId":"1575085915"},[]]},{"876":[{"id":"876","fileName":"1575085950.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        if(allNeg(nums)){\n            Arrays.sort(nums);\n            return nums[nums.length-1];\n        }\n        HashSet<Integer> set = new HashSet<>();\n        for(int i : nums)\n            set.add(i);\n        int sum = 0;\n        for(int i : set){\n            if(i > 0)\n                sum +=  i;\n        }\n        return sum;\n    }\n    public boolean allNeg(int[] nums){\n        for(int i : nums){\n            if(i > 0)\n                return false;\n        }\n        return true;\n    }\n}","author":"Nitesh Kumar","submissionId":"1575085950"},[]]},{"879":[{"id":"879","fileName":"1575085982.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum=0;\n        unordered_map<int,int> mpp;\n        int n=nums.size();\n        bool found=false;\n        for(int i=0;i<n;i++){\n            if(nums[i]>0 && mpp[nums[i]]==0){\n                mpp[nums[i]]++;\n                sum+=nums[i];\n                found=true;\n            }\n        }\n        if(!found){\n            sum=INT_MIN;\n            for(int i=0;i<n;i++){\n                sum=max(sum,nums[i]);\n            }\n        }\n        return sum;\n    }\n};","author":"Yuvaraj","submissionId":"1575085982"},[]]},{"880":[{"id":"880","fileName":"1575085966.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if len(nums)==1:\n            return nums[0]\n        visit=set()\n        s=0\n        cnt=0\n        for i in nums:\n            if i not in visit and i>=0:\n                s+=i\n                visit.add(i)\n                cnt+=1\n        if cnt==0:\n            s=max(nums)\n        return s","author":"Kierthana","submissionId":"1575085966"},[]]},{"882":[{"id":"882","fileName":"1575086039.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> used;\n        long long sum = 0;\n        int maxElem = nums[0];\n        for (int x : nums) {\n            maxElem = max(maxElem, x);\n            if (x >= 0 && used.find(x) == used.end()) {\n                used.insert(x);\n                sum += x;\n            }\n        }\n        return used.empty() ? maxElem : static_cast<int>(sum);\n    }\n};","author":"IronSpidy","submissionId":"1575086039"},[]]},{"885":[{"id":"885","fileName":"1575086060.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        # sum of all positive unique elements\n        s = set()\n        ans = 0\n        largest = -inf\n        # need to make sure its non empty\n        for num in nums:\n            if num <= 0:\n                largest = max(largest, num) \n                continue\n            if num in s:\n                continue\n            else:\n                s.add(num)\n                ans += num\n        if len(s) == 0:\n            return largest\n        return ans\n                ","author":"Kuang Yu Heng","submissionId":"1575086060"},[]]},{"886":[{"id":"886","fileName":"1575086000.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> hs= new HashSet();\n        int sum=0, ans=Integer.MIN_VALUE;\n        for(int e : nums){\n            if(!hs.contains(e) && e > 0){\n                sum += e;\n                ans = Math.max(ans, sum);\n            }\n            ans = Math.max(ans, e);\n\n            hs.add(e);\n        }\n    return ans;\n    }\n}","author":"Lokesh Negi","submissionId":"1575086000"},[]]},{"887":[{"id":"887","fileName":"1575086054.txt","sourceCode":"class Solution {\npublic:\n\nint cal(vector<int> &arr) {\n    int res = arr[0];\n  \n      for(int i = 0; i < arr.size(); i++) {\n        int currSum = 0;\n      \n        for(int j = i; j < arr.size(); j++) {\n            currSum = currSum + arr[j];\n          \n            res = max(res, currSum);\n        }\n    }\n    return res;\n}\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int sum = 0;\n        for(auto &i: nums) {\n            if(s.find(i) == s.end()) {\n                s.insert(i);\n                sum += i;\n            }\n        }\n        vector<int> v;\n        for(auto &i: s) v.push_back(i);\n        \n        return cal(v);\n    }\n};","author":"Prathamesh Mane","submissionId":"1575086054"},[]]},{"890":[{"id":"890","fileName":"1575086071.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        unordered_set<int> s;\n        int ans=0;bool check=false;\n        for(auto &it:a) s.insert(it);\n        for(auto &it:s){\n            if(it>0) {\n                ans+=it;\n                check=true;\n            }\n        }\n        if(!check){\n            ans=INT_MIN;\n            for(auto &it:s){\n                ans=max(ans,it);\n            }\n        }\n        return ans;\n    }\n};","author":"Meda Jaswanth","submissionId":"1575086071"},[]]},{"891":[{"id":"891","fileName":"1575086059.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set <int> st;\n        int sum=0,count=0;\n        for (int i=0;i<nums.size();i++){\n            if (st.find(nums[i])==st.end() && nums[i]>=0)sum+=nums[i],count++;\n            st.insert(nums[i]);\n        }\n        if (count>0)return sum;\n        auto it = st.rbegin();\n        return (*it);\n    }\n};","author":"Prithvi Sen","submissionId":"1575086059"},[]]},{"893":[{"id":"893","fileName":"1575086069.txt","sourceCode":"func maxSum(nums []int) int {\n    var res = math.MinInt\n    var temp int\n    visit := make(map[int]bool)\n    var find bool\n    for i := 0; i < len(nums); i++ {\n        res = max(res, nums[i])\n        if visit[nums[i]] || nums[i] < 0 {continue}\n        visit[nums[i]] = true\n        temp += nums[i]\n        find = true\n    }\n\n    if !find {return res}\n    return max(res, temp)\n}","author":"Muzakkiy","submissionId":"1575086069"},[]]},{"894":[{"id":"894","fileName":"1575086113.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        sumSet = set([])\n        discardedSet = set([])\n\n        for num in nums:\n            if num <= 0 or num in sumSet: \n                discardedSet.add(num)\n                continue\n            sumSet.add(num)\n\n        if len(sumSet) == 0: return max(discardedSet)\n        \n        maxSum = 0\n        for num in sumSet:\n            maxSum += num\n\n        return maxSum","author":"Lowkya","submissionId":"1575086113"},[]]},{"898":[{"id":"898","fileName":"1575086140.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums){\n        map<int,int> mp;\n        int n = nums.size(),res = 1e9,mx = -1e9;\n        for(int i=0;i<n;++i){\n            if(nums[i] > 0 and !mp[nums[i]]){\n                res = (res == 1e9 ? nums[i] : res + nums[i]);\n                mp[nums[i]] = 1;\n            }\n            mx = max(mx,nums[i]);\n        }\n        return (res == 1e9 ? mx : res);\n    }\n};","author":"Sakthi Narayanan R","submissionId":"1575086140"},[]]},{"899":[{"id":"899","fileName":"1575086119.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        var counts = new int[201];\n        for(int num : nums) {\n            ++counts[num+100];\n        }\n        int result = 0;\n        var found = false;\n        for(int i = 100; i <= 200; ++i) {\n            if (counts[i] > 0) {\n                found = true;\n                result += i - 100;\n            }\n        }\n        if (found) {\n            return result;\n        }\n        for(int i = 99;; --i) {\n            if (counts[i] > 0) {\n                return i - 100;\n            }\n        }\n    }\n}","author":"heshan1234","submissionId":"1575086119"},[]]},{"900":[{"id":"900","fileName":"1575086120.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int ans = 0;\n        set<int> st;\n        bool check = true;\n        for(auto &x:nums) st.insert(x);\n        for(auto &x:st){\n            if(x>=0){\n                ans += x;\n                check = false;\n            }\n        }\n        if(check) ans += *st.rbegin();\n        return ans;\n    }\n};","author":"Shashi Raj","submissionId":"1575086120"},[]]},{"901":[{"id":"901","fileName":"1575086141.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        count = Counter(nums)\n        m = max(nums)\n        ans = 0\n        for num in count:\n            if num > 0:\n                ans += num\n        return ans if ans > 0 else m\n        ","author":"djhunjhu","submissionId":"1575086141"},[]]},{"904":[{"id":"904","fileName":"1575086163.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<int> cnt(101, 0);\n        int res = 0;\n        int lo = -101;\n        for (int i : nums) {\n            if (i > 0) cnt[i]++;\n            if (i > 0 && cnt[i] == 1) res += i;\n            if (i <= 0) lo = max(lo, i);\n        }\n        if (res > 0) return res;\n        return lo;\n    }\n};","author":"Tyrande","submissionId":"1575086163"},[]]},{"906":[{"id":"906","fileName":"1575086180.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        if all(x <=0 for x in nums):\n            return max(nums)\n        ans = -101\n        for i in range(n):\n            for j in range(i,n):\n                st = set(nums[i : j + 1])\n                t = [x for x in st if x > 0]\n                if t:                    \n                    ans = max(ans,sum(t))\n        return ans","author":"Sasank Nasika","submissionId":"1575086180"},[]]},{"908":[{"id":"908","fileName":"1575086188.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size(), i = n - 2, res = 0;\n        sort(nums.begin(), nums.end());\n        res = nums[n - 1];\n        while (i >= 0) {\n            if (nums[i] > 0) {\n                if (nums[i] != nums[i + 1]) {\n                    res += nums[i];\n                }\n            } else {\n                break;\n            }\n            i--;\n        }\n\n        return res;\n    }\n};","author":"dragon76","submissionId":"1575086188"},[]]},{"909":[{"id":"909","fileName":"1575086204.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<int>mp(150);\n        int mn=INT_MIN;\n        for(auto &it:nums){\n            if(it>0)\n             mp[it]=1;\n            else \n                mn=max(mn,it);\n        }\n        int sum=0;\n        for(int g=1;g<=100;g++)\n            if(mp[g]>0)\n                sum+=g;\n        if(sum==0)\n            sum=mn;\n        return sum;\n    }\n};","author":"George Magde","submissionId":"1575086204"},[]]},{"912":[{"id":"912","fileName":"1575086226.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<bool> appeared(101);\n        int sum = 0;\n        int trap = INT_MIN;\n        for (int num: nums) {\n            if (num <= 0) {\n                trap = max(trap, num);\n                continue;\n            }\n            if (!appeared[num]) sum += num;\n            appeared[num] = true;\n        }\n        if (sum == 0) return trap;\n        return sum;\n    }\n};","author":"Dan Tran","submissionId":"1575086226"},[]]},{"913":[{"id":"913","fileName":"1575086218.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> h=new HashSet<Integer>();\n        int sum=0;\n        int temp=Integer.MIN_VALUE;\n        for(int i=0;i<nums.length;i++)\n            if(nums[i]>=0)\n            {\n                if(!h.contains(nums[i]))\n                    sum+=nums[i];\n                h.add(nums[i]);\n            }\n        else\n                temp=Math.max(temp,nums[i]);\n        if(h.size()>0)\n            return sum;\n        else \n            return temp;\n    }\n}","author":"Raghavendra Velpugonda","submissionId":"1575086218"},[]]},{"914":[{"id":"914","fileName":"1575086236.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(auto it : nums){\n            st.insert(it);\n        }\n        int sum =0;\n        int maxi = INT_MIN;\n        bool pres = false;\n        for(auto it : st){\n            if(it >= 0){\n                sum += it;\n                pres = true;\n            }\n            maxi = max(maxi, it);\n        }\n        if(!pres){\n            return maxi;\n        }\n        return sum;\n    }\n};","author":"Perisetla sri satwik","submissionId":"1575086236"},[]]},{"916":[{"id":"916","fileName":"1575086244.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int ans=0;\n        set<int>s;\n        int cnt=0;\n        for(int i=nums.size()-1;i>=0;i--){\n            if(s.count(nums[i])==0){\n                if(ans+nums[i]>ans)\n                {ans+=nums[i];s.insert(nums[i]);cnt++;}\n                else if(cnt==0)\n                {ans+=nums[i];s.insert(nums[i]);cnt++;}\n                \n            }\n        }\n        return ans;\n    }\n};","author":"Prashant Singh","submissionId":"1575086244"},[]]},{"918":[{"id":"918","fileName":"1575086266.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        set<int> st(nums.begin(), nums.end());\n\n        int neg = -1e9, sum = 0;\n        bool flag = false;\n        for(int x: st){\n            if(x<0) neg = max(neg, x);\n            else{\n                flag = true;\n                sum += x;\n            }\n        }\n\n        if(!flag) return neg;\n        return sum;\n    }\n};","author":"ritik__thakur","submissionId":"1575086266"},[]]},{"919":[{"id":"919","fileName":"1575086262.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max = -101;\n        int count = 0;\n\n        for (int num: nums) {\n            max = Math.max(max, num);\n        }\n\n        Set<Integer> s = new HashSet<>();\n\n        for (int num: nums) {\n            s.add(num);\n        }\n\n        for (Integer a: s) {\n            if (a >= 0) {\n                count += a;\n            }\n        }\n\n        if (count == 0) {\n            return max;\n        } else {\n            return count;\n        }\n    }\n}","author":"Leon Lei","submissionId":"1575086262"},[]]},{"920":[{"id":"920","fileName":"1575086283.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> visited;\n        int n = nums.size();\n        int sum = 0;\n        bool atLeastOne = false;\n        for (int i = 0; i < n; i += 1) {\n            int num = nums[i];\n            if (num >= 0 && visited.find(num) == visited.end()) {\n                visited.insert(num);\n                sum += num;\n                atLeastOne = true;\n            }\n            \n        }\n        if (!atLeastOne) {\n            sum = *max_element(nums.begin(), nums.end());\n        }\n        return sum;\n    }\n};","author":"Atharva","submissionId":"1575086283"},[]]},{"921":[{"id":"921","fileName":"1575086276.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int> dict;\n        int sum = 0;\n        for(int i=0; i<nums.size(); i++)\n        {\n            if(dict.count(nums[i]) == 0)\n            {\n                dict[nums[i]] = 1;\n                if(nums[i] >= 0) sum+= nums[i];\n            }\n        }\n        int minE = *max_element(nums.begin(), nums.end());\n        if(minE < 0) return minE;\n\n        return sum;\n    }\n};","author":"Arjun","submissionId":"1575086276"},[]]},{"922":[{"id":"922","fileName":"1575086314.txt","sourceCode":"int max(int a, int b) {\n    return a > b ? a : b;\n}\nint maxSum(int* nums, int numsSize) {\n    int ans = 0;\n    int dict[101] = {};\n    int fullNegative = 1;\n    for (int i = 0; i < numsSize; i++) {\n        if (nums[i] <= 0) continue;\n        else if (dict[nums[i]] == 0) {\n            ans+=nums[i];\n            dict[nums[i]] = 1;\n        }\n        fullNegative = 0;\n    }\n    if (fullNegative) {\n        int ans = INT_MIN;\n        for (int i = 0; i < numsSize; i++) {\n            ans = max(ans, nums[i]);\n        }\n        return ans;\n    }\n    return ans;\n}","author":"7fdu8TLwtN","submissionId":"1575086314"},[]]},{"930":[{"id":"930","fileName":"1575086343.txt","sourceCode":"#include <stdbool.h>\n\nint maxSum(int* nums, int numsSize) {\nbool used[201] = { false };\nint sum = 0;\nbool hasPositive = false;\n\nfor (int i = 0; i < numsSize; i++) {\nint idx = nums[i] + 100;\nif (!used[idx]) {\nused[idx] = true;\nif (nums[i] > 0) {\nsum += nums[i];\nhasPositive = true;\n}\n}\n}\n\nif (hasPositive) {\nreturn sum;\n} else {\nif (used[100]) {\nreturn 0;\n}\nint maxNeg = -101;\nfor (int i = 0; i < numsSize; i++) {\nif (nums[i] < 0 && nums[i] > maxNeg) {\nmaxNeg = nums[i];\n}\n}\nreturn maxNeg;\n}\n}\n","author":"kl2400032885","submissionId":"1575086343"},[]]},{"931":[{"id":"931","fileName":"1575086387.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos = set()\n        neg = set()\n        for num in nums:\n            if num > 0:\n                pos.add(num)\n            else:\n                neg.add(num)\n        return sum(list(pos)) if pos else max(neg)","author":"jayxps","submissionId":"1575086387"},[]]},{"932":[{"id":"932","fileName":"1575086357.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort()\n        if nums[-1] < 0:\n            return nums[-1]\n        c = Counter(nums)\n        ans = 0\n        \n        for k, v in c.items():\n            if k > 0:\n                ans += k\n        return ans\n        ","author":"txycodelc","submissionId":"1575086357"},[]]},{"933":[{"id":"933","fileName":"1575086363.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        \n        Set<Integer> hs = new HashSet<>();\n        int result = 0;\n        int max = Integer.MIN_VALUE;\n        for(int i = 0; i < nums.length;i++)\n            {\n                max = Math.max(max,nums[i]);\n                if(nums[i] > 0 && !hs.contains(nums[i]))\n                   {\n                        result += nums[i];\n                        hs.add(nums[i]);\n                   }\n            }\n\n        return hs.size() == 0? max:result;\n    }\n}","author":"Nauyel","submissionId":"1575086363"},[{"id":"1187","similarity":0.7032967032967034,"totOverlap":64,"longestOverlap":14}]],"1187":[{"id":"1187","fileName":"1575088873.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<>();\n        int ans = 0;\n        int min = 0;\n        boolean t = false;\n        for(int i = 0 ; i < nums.length ; i++){\n            if(min == 0){\n                min = nums[i];\n            }\n            else{\n                min = Math.max(min , nums[i]);\n            }\n            \n            if( nums[i] >= 0 && !set.contains(nums[i])){\n                ans += nums[i];\n                set.add(nums[i]);\n                t = true;\n            }\n        }\n\n        if(!t) return min;\n        \n        return ans;\n    }\n}","author":"Lakshya Thakur","submissionId":"1575088873"},[{"id":"933","similarity":0.7032967032967034,"totOverlap":64,"longestOverlap":14}]]},{"934":[{"id":"934","fileName":"1575086389.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        keep = []\n        for n in nums:\n            if n > 0 and n not in keep:\n                keep.append(n)\n\n        return sum(keep) if keep else max(nums)","author":"sslance","submissionId":"1575086389"},[{"id":"1402","similarity":1.0,"totOverlap":42,"longestOverlap":21},{"id":"1060","similarity":0.7391304347826086,"totOverlap":34,"longestOverlap":8}]],"1060":[{"id":"1060","fileName":"1575087441.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        rskjfees = []\n        hashdoifhset = set()\n\n        for num in nums:\n            if num > 0 and num not in hashdoifhset:\n                rskjfees.append(num)\n            hashdoifhset.add(num)\n\n        return sum(rskjfees) if rskjfees else max(nums)","author":"james Paul","submissionId":"1575087441"},[{"id":"934","similarity":0.7391304347826086,"totOverlap":34,"longestOverlap":8}]],"1402":[{"id":"1402","fileName":"611226301.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        tmp = []\n        for num in nums:\n            if num > 0 and num not in tmp:\n                tmp.append(num)\n        return sum(tmp) if tmp else max(nums)","author":"Barcelona","submissionId":"611226301"},[{"id":"934","similarity":1.0,"totOverlap":42,"longestOverlap":21}]]},{"935":[{"id":"935","fileName":"1575086392.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> vals;\n        for (int x : nums)\n            vals.insert(x);\n        if (vals.size() == 1 || *vals.rbegin() <= 0)\n            return *vals.rbegin();\n        int s = 0;\n        \n        for(auto it = vals.rbegin(); it != vals.rend(); ++it) {\n            if (*it > 0) {\n                s += *it;\n            }\n        }\n        return s;\n    }\n};","author":"Weiming Zhao","submissionId":"1575086392"},[]]},{"939":[{"id":"939","fileName":"1575086418.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        q = collections.Counter()\n        best_negative = float('-inf')\n        has_non_negative = False\n        \n        for i in range(n):\n            q[nums[i]] += 1\n            if nums[i] >= 0:\n                has_non_negative = True\n            else:\n                best_negative = max(best_negative, nums[i])\n        \n        if not has_non_negative:\n            return best_negative\n        \n        res = sum(v for v in q if v >= 0)\n        return res","author":"gan14008","submissionId":"1575086418"},[]]},{"943":[{"id":"943","fileName":"1575086475.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        psum=0\n        mxneg = -101\n        hash = {}\n        zero = False\n        a1p = False\n        for i in nums :\n            if i ==0:\n                zero = True\n            elif i > 0 :\n                a1p = True\n                if i in hash :\n                    hash[i]+=1\n                else:\n                    hash[i] = 1\n                    psum += i\n            else:\n                mxneg = max(mxneg,i)\n        if a1p :\n            return psum\n        elif zero :\n            return 0\n        else:\n            return mxneg","author":"YASH BHATT","submissionId":"1575086475"},[]]},{"945":[{"id":"945","fileName":"1575086479.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        unordered_set<int> seen;\n        int positives = 0;\n        int maximNeg = -100;\n        for(int num : nums){\n            if(seen.count(num)) continue;\n            if(num <= 0) {\n                maximNeg = max(maximNeg, num);\n                continue;\n            }\n            seen.insert(num);\n            sum+= num;\n            positives++;\n        }\n        if(positives == 0) return maximNeg;\n        return sum;\n    }\n};","author":"Ian Arsenault","submissionId":"1575086479"},[]]},{"948":[{"id":"948","fileName":"1575086484.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        counted = set()\n        total = 0\n        max_val = float('-inf')\n        for num in nums:\n            if not num in counted and num > 0:\n                total += num\n                counted.add(num)\n            max_val = max(max_val, num)\n                \n        return total if len(counted) else max_val","author":"jeremyfellner","submissionId":"1575086484"},[]]},{"950":[{"id":"950","fileName":"1575086504.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        sorted_nums = sorted(set(nums))\n        ans = 0\n        for i in range(len(sorted_nums) - 1, -1, -1):\n            if sorted_nums[i] > 0:\n                ans += sorted_nums[i]\n        if ans == 0:\n            ans = sorted_nums[-1]\n        return ans","author":"yw w","submissionId":"1575086504"},[]]},{"951":[{"id":"951","fileName":"1575086533.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> hs=new HashSet<>();\n        int sum=0;\n        int min=Integer.MIN_VALUE;\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]>=0){\n                if(hs.add(nums[i])){\n                    sum+=nums[i];\n                }\n            }\n            else{\n                min=Math.max(min,nums[i]);\n            }\n        }\n        if(hs.size()==0){\n            return min;\n            \n        }\n        else return sum;\n    }\n}","author":"Sai_krishna_05","submissionId":"1575086533"},[]]},{"952":[{"id":"952","fileName":"1575086539.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int exist[201];\n        memset(exist, 0, sizeof(exist));\n        int res = 0;\n        for (auto v : nums) {\n            if (exist[v+100] == 0) {\n                exist[v+100] = 1;\n                if (v > 0) {\n                    res += v;\n                }\n            }\n        }\n        if (res == 0) {\n            for (int i = 0; i >= -100; i--) {\n                if (exist[i+100]) {\n                    return i;\n                }\n            }\n        }\n        return res;\n    }\n};","author":"loriex","submissionId":"1575086539"},[]]},{"954":[{"id":"954","fileName":"1575086522.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        for(auto it: nums)\n            st.insert(it);\n\n        int maxi=*(st.rbegin());\n        if(maxi<0)\n            return maxi;\n\n        maxi=0;\n        int sum=0;\n        for(auto it: st)\n            {\n                sum+=it;\n                if(sum<0)\n                    sum=0;\n\n                maxi=max(maxi, sum);\n            }\n        return maxi;\n    }\n};","author":"Soumyadipto Pal","submissionId":"1575086522"},[]]},{"955":[{"id":"955","fileName":"1575086570.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = -1;\n        unordered_map<int,int> mp;\n        int n = nums.size();\n        int maxi = -1e9;\n        \n        for(int i = 0; i < n; i++){\n            if(nums[i] >= 0 && (mp.find(nums[i]) == mp.end())){\n                if(sum == -1){\n                    sum = 0;\n                }\n                sum += nums[i];\n                mp[nums[i]] = 1;\n            }\n            else if(nums[i] < 0){\n                maxi = max(maxi, nums[i]);\n            }\n        }\n\n        return (sum == -1) ? maxi : sum;\n    }\n};","author":"Sanskar Sureka","submissionId":"1575086570"},[]]},{"957":[{"id":"957","fileName":"1575086554.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<int> counter(1000 , 0);\n        int ans = 0 , maxi = -1000;\n        bool ok = 0;\n        for(int i = 0; i < nums.size() ; i++){\n            if(nums[i] <= 0){\n                maxi = max(maxi , nums[i]);\n                continue;\n            }\n            else{\n                ok = 1;\n                if(counter[nums[i]] == 0)ans += nums[i];\n                counter[nums[i]] = 1;\n            }\n        }\n        if( ok )return ans;\n        return maxi;\n    }\n};","author":"katuri vinay chowdary","submissionId":"1575086554"},[]]},{"960":[{"id":"960","fileName":"1575086593.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int, int> freq;\n        for(auto i:nums){freq[i]++;}\n        int final=0;\n        int maxi=INT_MIN;\n        for(auto i:freq){\n            maxi=max(maxi, i.first);\n            if(i.first>0){final+=i.first;}\n        }\n        if(maxi<=0){\n            final=maxi;            \n        }\n        return final;\n    }\n};","author":"Shashvat Singhal","submissionId":"1575086593"},[]]},{"961":[{"id":"961","fileName":"1575086585.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        int ans = 0;\n        bool em = true;;\n        for(auto i:nums){\n            if(i>0 && s.find(i) == s.end()){\n                ans += i;\n                s.insert(i);\n                em = false;\n            }\n        }\n        if(em){\n            ans = *max_element(nums.begin(),nums.end());\n        }\n        return ans;\n    }\n};","author":"yogesh_j_9296","submissionId":"1575086585"},[]]},{"962":[{"id":"962","fileName":"1575086577.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size(), ans=nums[0];\n        for(int i=0;i<n;i++){\n            int sum=nums[i];\n            ans=max(ans, sum);\n            unordered_set<int>s;\n            s.insert(nums[i]);\n            for(int j=i+1;j<n;j++){\n                sum=max(sum, sum+(s.find(nums[j])==s.end()?nums[j]:0));\n                s.insert(nums[j]);\n                ans=max(ans, sum);\n            }\n        }\n        return ans;\n    }\n};","author":"yoasobi","submissionId":"1575086577"},[]]},{"965":[{"id":"965","fileName":"1575086607.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        c = Counter(nums)\n        ret = 0\n        arr = set()\n        neg = []\n        for v in nums:\n            if v > 0:\n                arr.add(v)\n            else:\n                neg.append(v)\n        su = sum(list(arr))\n        if su == 0:\n            return max(neg)\n        return su\n                ","author":"Krishnakumar R","submissionId":"1575086607"},[]]},{"966":[{"id":"966","fileName":"1575086601.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>f;\n        int res=0;\n        for(int i:nums){\n            if(i<0) continue;\n            if(f[i]>0) continue;\n            res+=i;\n            f[i]=1;\n        }\n        if(res==0){\n            res=-1000;\n            for(int i:nums){\n                res=max(res,i);\n            }\n        }\n        return res;\n    }\n};","author":"Honey Gupta","submissionId":"1575086601"},[]]},{"967":[{"id":"967","fileName":"1575086653.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        set<int> st;\n        int ans=0;\n        int ok=0;\n        int mx=-int(1e9);\n        for(int i=0;i<a.size();i++){\n            st.insert(a[i]);\n            if(a[i]>=0){\n                ok=1;\n            } \n            mx=max(mx,a[i]);\n        }\n\n        if(ok==0){\n            return mx;\n        }\n        for(auto x:st){\n            if(ok && x<0) continue;\n            ans+=x;\n        }\n        return ans;\n    }\n};","author":"Raghav Mangla","submissionId":"1575086653"},[]]},{"970":[{"id":"970","fileName":"1575086655.txt","sourceCode":"from collections import Counter\nclass Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        counts = Counter(nums)\n        ans = 0\n        for key in counts:\n            if key > 0:\n                ans += key\n        if ans > 0:\n            return ans\n        elif ans == 0 and 0 in counts:\n            return 0\n        else:\n            return max(counts.keys())","author":"qcoh","submissionId":"1575086655"},[]]},{"972":[{"id":"972","fileName":"1575086697.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        set<int> st;\n        long long ans = 0;\n        int cnt=0;\n        int maxi = INT_MIN;\n        for(int i=0;i<n;i++){\n            if(nums[i]>=0 && st.find(nums[i])==st.end()){\n                st.insert(nums[i]);\n                ans += (long long)nums[i];\n            }\n\n            else if(nums[i]<0){\n                cnt++;\n                maxi =  max(maxi,nums[i]);\n            }\n        }\n        if(cnt==n) return maxi ;\n        return ans;\n    }\n};","author":"vanshgupta_25","submissionId":"1575086697"},[]]},{"973":[{"id":"973","fileName":"1575086692.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = int(a.size());\n        int sum = 0;\n        int maxi = *max_element(a.begin(), a.end());\n        map<int,int>cnt;\n        for(int i=0; i<n; i++){\n            if( a[i] > 0 && !cnt[a[i]] ){\n                cnt[a[i]]++;\n                sum+=a[i];\n            }\n        }\n        if( maxi<0 )return maxi;\n        return sum;\n    }\n};","author":"Ritik Thakur","submissionId":"1575086692"},[]]},{"974":[{"id":"974","fileName":"1575086680.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        has_positive = False\n        res = -200\n        for i in nums:\n            if i > 0:\n                s.add(i)\n                has_positive = True\n            else:\n                res = max(res, i)\n                \n\n        return sum(s) if has_positive else res\n        ","author":"ApoapsisAlpha","submissionId":"1575086680"},[]]},{"975":[{"id":"975","fileName":"1575086708.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(int i = 0 ;i<nums.size();i++){\n            s.insert(nums[i]);\n        }\n        \n        int ans =  -1e9;\n        while( !s.empty() )\n        {\n            int val = *s.rbegin();\n            s.erase(val);\n            \n            if(ans == -1e9) ans = val;\n            else \n            {\n                if(val >0) ans += val;\n            }\n        }\n        \n        return ans;\n        \n    }\n};","author":"ak_fo7","submissionId":"1575086708"},[]]},{"976":[{"id":"976","fileName":"1575086704.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort (nums.begin(), nums.end()); \n        int n = nums.size(); \n        unordered_map <int, int> mp; \n        int ans = 0; \n        if (nums[n-1] < 0) return nums[n-1];\n        for (int i = 0; i < nums.size(); i++){\n            if (nums[i] < 0) continue; \n            if (mp.find (nums[i]) == mp.end()){\n                ans += nums[i];\n                mp[nums[i]] = 1; \n            }\n        }\n        return ans; \n    }\n};","author":"PRATBAN11","submissionId":"1575086704"},[]]},{"977":[{"id":"977","fileName":"1575086703.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<>();\n        int sum = 0;\n        int min = nums[0];\n        int count = 0;\n        for(int num : nums) {\n            min = Math.max(num , min);\n            if(num < 0)\n                count++;\n        }\n        if(count == nums.length)\n            return min;\n            \n        for(int i = 0;i < nums.length;i++) {\n            if(!set.contains(nums[i]))\n                sum += Math.max(0 , nums[i]);\n\n            //min = Math.max(min , max);\n            set.add(nums[i]);\n        }\n        return sum;\n    }\n}","author":"Atindraa Sk","submissionId":"1575086703"},[]]},{"978":[{"id":"978","fileName":"1575086709.txt","sourceCode":"class Solution(object):\n    def maxSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        pos = set()\n\n        for i in nums:\n            if i>=0:pos.add(i)\n\n        return max(nums) if len(pos)==0 else sum(pos)","author":"Vibranium","submissionId":"1575086709"},[]]},{"980":[{"id":"980","fileName":"1575086730.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        if (find_if(nums.begin(), nums.end(), [](const int x) { return x >= 0; }) == nums.end())\n            return *max_element(nums.begin(), nums.end());\n        \n        unordered_set<int> collections;\n        for (auto& x: nums) {\n            collections.insert(max(0, x));\n        }\n\n        return std::accumulate(collections.begin(), collections.end(), 0);\n    }\n};","author":"Edward Lee","submissionId":"1575086730"},[]]},{"981":[{"id":"981","fileName":"1575086724.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = -1000000000\n        n = len(nums)\n        arr = []\n        for i in nums:\n            if i not in arr:\n                arr.append(i)\n\n        print(arr)\n        sum = 0\n        ans = 0\n        flag = True\n        for i in arr:\n            if i>0:\n                flag = False\n                ans += i\n\n        if flag:\n            ans = max(arr)\n\n        return ans","author":"Rudra Narola","submissionId":"1575086724"},[]]},{"982":[{"id":"982","fileName":"1575086698.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>mp;\n        int sum = 0;\n        int maxi = INT_MIN;\n        for(int i=0;i<nums.size();i++){\n            maxi = max(maxi,nums[i]);\n        }\n        bool isZero =false;\n        for(int i=0;i<nums.size();i++){\n             if(nums[i]<= 0){\n                 if(nums[i]==0){\n                     isZero = true;\n                 }\n                 continue;\n             }else if(mp.find(nums[i])==mp.end()){\n                 sum+=nums[i];\n                 mp[nums[i]]++;\n             }\n        }\n        if(sum==0){\n              if(isZero){\n                  return 0;\n              }else{\n                  return maxi;\n              }\n        }\n        return sum;\n    }\n};","author":"leetcode","submissionId":"1575086698"},[{"id":"1037","similarity":0.7272727272727273,"totOverlap":72,"longestOverlap":17}]],"1037":[{"id":"1037","fileName":"1575087250.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>mp;\n        int ans =0;\n        bool check = true;\n        int maxi = INT_MIN;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>=0) check = false;\n            maxi = max(maxi,nums[i]);\n        }\n        if(check) return maxi;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>=0 && mp.find(nums[i])==mp.end()){\n                ans += nums[i];\n                mp[nums[i]]++;\n            }\n            \n        }\n        return ans;\n        \n    }\n};","author":"Hardik Aswal","submissionId":"1575087250"},[{"id":"982","similarity":0.7272727272727273,"totOverlap":72,"longestOverlap":17}]]},{"983":[{"id":"983","fileName":"1575086736.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res = max(nums)\n        if res < 0:\n            return res\n\n        res = 0\n        for num in set(nums):\n            if num > 0:\n                res += num\n\n        return res","author":"KNuggies","submissionId":"1575086736"},[{"id":"1639","similarity":1.0,"totOverlap":28,"longestOverlap":14}]],"1639":[{"id":"1639","fileName":"611228372.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        mx = max(nums)\n        if mx <= 0:\n            return mx\n        ans = 0\n        for x in set(nums):\n            if x > 0:\n                ans += x\n        return ans\n        ","author":"nanjolno39","submissionId":"611228372"},[{"id":"983","similarity":1.0,"totOverlap":28,"longestOverlap":14}]]},{"985":[{"id":"985","fileName":"1575086766.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        long long ans =0;\n        unordered_map<int,int>mp;\n        if(nums.size()==1){\n            return nums[0];\n        }\n        int maxi=INT_MIN;\n        for(auto i: nums){\n            maxi =max(maxi,i);\n            if(i>0 && mp.count(i)==0){\n                ans+=i;\n            }\n            mp[i]++;\n        }\n        if(ans==0){\n            return maxi;\n        }\n        \n        return ans;\n    }\n};","author":"Ravish Singla","submissionId":"1575086766"},[]]},{"988":[{"id":"988","fileName":"1575086714.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        if (nums == null || nums.length == 0) {\n            return 0;\n        }\n\n        Set<Integer> checker = new HashSet<Integer>();\n        int result = 0;\n        int maxNegative = Integer.MIN_VALUE;\n        boolean hasZero = false;\n        for (int n : nums) {\n            if (!checker.contains(n)) {\n                if (n > 0) {\n                    result += n;\n                } else if (n < 0) {\n                    maxNegative = Math.max(maxNegative, n);\n                } else {\n                    hasZero = true;\n                }\n                \n                checker.add(n);\n            }\n        }\n\n        if (result == 0) {\n            if (hasZero) {\n                return 0;\n            }\n            \n            return maxNegative;\n        }\n        return result;\n    }\n}","author":"leetcode_2019","submissionId":"1575086714"},[]]},{"991":[{"id":"991","fileName":"1575086837.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:     \n        seen = set()\n        total = 0\n        \n        for num in nums:\n            if num > 0 and num not in seen:\n                seen.add(num)\n                total += num\n\n        return total if total else max(nums)\n        ","author":"Suraj Suryawanshi","submissionId":"1575086837"},[{"id":"1222","similarity":0.9767441860465116,"totOverlap":42,"longestOverlap":21}]],"1222":[{"id":"1222","fileName":"1575089333.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen = set()\n        total = 0\n        for num in nums:\n            if num > 0 and num not in seen:\n                seen.add(num)\n                total += num\n        if total > 0:\n            return total\n        else:\n            return max(nums)\n","author":"ianCheng","submissionId":"1575089333"},[{"id":"991","similarity":0.9767441860465116,"totOverlap":42,"longestOverlap":21}]]},{"993":[{"id":"993","fileName":"1575086866.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        int sum = 0;\n        unordered_map<int, int> mpp;\n        bool zflag = 0;\n        \n        for(auto it : nums){\n            if(it > 0 && mpp[it] == 0){\n                sum += it;\n                mpp[it]++;\n            }\n            else if(it == 0) zflag = 1;\n        }\n\n        int small = *max_element(nums.begin(), nums.end());\n\n\n        if(sum > 0) return sum;\n        else if (zflag == 1) return 0;\n        else return small;\n        \n    }\n};","author":"Soorya Kumar S","submissionId":"1575086866"},[]]},{"995":[{"id":"995","fileName":"1575086857.txt","sourceCode":"class Solution {\n    public:\n        int maxSum(vector<int>& nums) {\n\n            int n = nums.size();\n            int ans = 0;\n\n            vector<int> a = nums;\n            sort(a.begin(), a.end());\n            a.erase(unique(a.begin(), a.end()), a.end());\n\n            bool ok = false;\n\n            while (!a.empty()) {\n\n                int v = a.back();\n                a.pop_back();\n\n                if (v < 0) {\n                    if (!ok) {\n                        ans += v;\n                    }\n\n                    break;\n                } else {\n                    ans += v;\n                    ok = true;\n                }\n            }\n\n            return ans;\n\n        }\n\n    };","author":"drifter","submissionId":"1575086857"},[]]},{"999":[{"id":"999","fileName":"1575086915.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int ans = 0;\n        for (auto& num : nums)\n        {\n            if (num < 0)\n            {\n                continue;\n            }\n            if (st.count(num))\n            {\n                continue;\n            }\n            st.insert(num);\n            ans += num;\n        }\n        \n        if (ans == 0)\n        {\n            set<int> s(nums.begin(), nums.end());\n            \n            if (!s.count(0))\n            {\n                ans = *prev(s.end());\n            }\n        }\n        return ans;\n    }\n};","author":"agix","submissionId":"1575086915"},[]]},{"1000":[{"id":"1000","fileName":"1575086885.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int ans = 0, mn = INT_MIN;\n        for(int i=0;i<nums.size();i++) {\n            if(nums[i] > 0) \n                st.insert(nums[i]);\n            mn = max(mn, nums[i]);\n        }\n        for(auto it: st) ans += it;\n        return st.size() == 0 ? mn : ans;\n    }\n};","author":"Hardik Soni","submissionId":"1575086885"},[]]},{"1002":[{"id":"1002","fileName":"1575086853.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max = Integer.MIN_VALUE;\n        for (int a = 0; a < nums.length; a++) {\n            for (int b = a + 1; b <= nums.length; b++) {\n                PriorityQueue<Integer> heap = new PriorityQueue<>();\n                Set<Integer> seen = new HashSet<>();\n                for (int i = a; i < b; i++) {\n                    if (seen.contains(nums[i])) continue;\n                    seen.add(nums[i]);\n                    heap.offer(-nums[i]);\n                }\n                int tot = -heap.poll();\n                while (!heap.isEmpty() && heap.peek() <= 0) tot -= heap.poll();\n                if (tot > max) max = tot;\n            }\n        }\n        return max;\n    }\n}","author":"Samuel","submissionId":"1575086853"},[]]},{"1004":[{"id":"1004","fileName":"1575086949.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        '''\n            nums: array[int]\n\n            DELETE any -> SELECT subarray\n                All elements ARE Unique\n                SUM -> MAXiMIZED\n            RETURN MAXIMUM SUM\n\n            Intuition:\n                + Sum all positive numbers\n        '''\n        ans = 0\n        seen = set()\n        for num in nums:\n            if num > 0 and num not in seen:\n                ans += num\n                seen.add(num)\n        if len(seen) == 0:\n            ans = max(nums)\n        return ans\n        ","author":"ymn5tfnXS0","submissionId":"1575086949"},[]]},{"1005":[{"id":"1005","fileName":"1575086937.txt","sourceCode":"\nusing i8 = int8_t;\nusing u8 = uint8_t;\nusing i16 = int16_t;\nusing u16 = uint16_t;\nusing i32 = int32_t;\nusing u32 = uint32_t;\nusing i64 = int64_t;\nusing u64 = uint64_t;\n\nusing f32 = float;\nusing f64 = double;\n\n#define all(x) (x).begin(), (x).end()\n#define ll long long int\n#define VI vector<ll>\n#define VVI vector<VI>\n\n#define ISD true\n#define debug(x) \n    if (ISD)     \n    cout << #x << \": \" << x << endl\n#define DEBUG(x) cout << #x << \": \" << x << endl\n\ntemplate <typename C>\ni64 SIZE(const C &c)\n{\n    return static_cast<i64>(c.size());\n}\n\ntemplate <typename T, size_t N>\ni64 SIZE(const T (&)[N]) { return static_cast<i64>(N); }\n\ntemplate <typename T, typename U, typename Comp = less<>>\nbool chmax(T &xmax, const U &x, Comp comp = {})\n{\n    if (comp(xmax, x))\n    {\n        xmax = x;\n        return true;\n    }\n    return false;\n}\n\ntemplate <typename T, typename U, typename Comp = less<>>\nbool chmin(T &xmin, const U &x, Comp comp = {})\n{\n    if (comp(x, xmin))\n    {\n        xmin = x;\n        return true;\n    }\n    return false;\n}\n\n#define CPP_STR(x) CPP_STR_I(x)\n#define CPP_CAT(x, y) CPP_CAT_I(x, y)\n#define CPP_STR_I(args...) #args\n#define CPP_CAT_I(x, y) x##y\n\n#define ASSERT(expr...) assert((expr))\n\n// }}}\n\nconstexpr i64 INF = 1'010'000'000'000'000'017LL;\n\nconstexpr i64 MOD = 998244353LL;\n\nconstexpr f64 EPS = 1e-12;\n\nconstexpr f64 PI = 3.14159265358979323846;\n\n#define M5 100007\n#define M9 1000000000\n\n#define F first\n#define S second\n\n// util {{{\n#define FOR(i, start, end) for (i64 i = (start), CPP_CAT(i, xxxx_end) = (end); i < CPP_CAT(i, xxxx_end); ++i)\n#define REP(i, n) FOR(i, 0, n)\n\nclass Solution\n{\npublic:\n    int maxSum(vector<int> &nums)\n    {\n        set<int> S;\n        for (auto n : nums)\n        {\n            if (n > 0 && S.count(n) == 0)\n            {\n                S.insert(n);\n            }\n        }\n        if (S.size() == 0)\n        {\n            int m = -102;\n            for (auto n : nums)\n            {\n                chmax(m, n);\n            }\n            return m;\n        }\n        int sum = 0;\n        for (auto s : S)\n            sum += s;\n        return sum;\n    }\n};","author":"atm314","submissionId":"1575086937"},[]]},{"1008":[{"id":"1008","fileName":"1575086960.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        int n = nums.size(), ans = 0;\n\n        vector<int> arr(101, 0);\n\n        for(int i = 0; i < n; i++)\n            {\n                if(nums[i] > 0 && !arr[nums[i]])\n                {\n                    arr[nums[i]] = 1;\n                    ans += nums[i];\n                }\n            }\n        if(ans == 0)\n        {\n            ans = -100;\n            for(int i = 0; i < n; i++) ans = max(ans, nums[i]);\n        }\n\n        return ans;\n    }\n};","author":"CHENNARAPU YASWANTH KUMAR","submissionId":"1575086960"},[]]},{"1013":[{"id":"1013","fileName":"1575086993.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum=0;\n        int n=nums.size();\n        unordered_set<int> u;\n        bool check=false;\n        int maxm=INT_MIN;\n        for(int i=0;i<n;i++)\n        {\n            maxm=max(maxm,nums[i]);\n            if(nums[i]>=0) check=true;\n            if(u.find(nums[i])==u.end() && nums[i]>=0)\n            {\n                sum+=nums[i];\n                u.insert(nums[i]);\n            }\n        }\n        if(!check) return maxm;\n        return sum;\n    }\n};","author":"Hacker___","submissionId":"1575086993"},[{"id":"1775","similarity":0.7058823529411765,"totOverlap":60,"longestOverlap":10},{"id":"1775","similarity":0.7317073170731707,"totOverlap":60,"longestOverlap":10}]],"1638":[{"id":"1638","fileName":"611228384.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        int res=0;\n        int mx=INT_MIN;\n        set<int> st;\n        for(int i=0;i<n;i++){\n            mx=max(mx,nums[i]);\n            if(nums[i]<=0) continue;\n            st.insert(nums[i]);\n        }\n        if(st.empty()) return mx;\n        for(auto it=st.begin();it!=st.end();it++){\n            res+=*it;\n        }\n        return res;\n    }\n};","author":"ACM种子选手","submissionId":"611228384"},[{"id":"1638","similarity":0.7317073170731707,"totOverlap":60,"longestOverlap":10}]],"1775":[{"id":"1775","fileName":"611232601.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int n = nums.size();\n        int ans = 0;\n        int max_element = INT_MIN;\n        for(int i = 0; i < n; i++) {\n            max_element = max(max_element, nums[i]);\n            if(nums[i] <= 0) continue;\n            if(st.find(nums[i]) == st.end()) {\n                ans += nums[i];\n                st.insert(nums[i]);\n            }\n        }\n        if(st.empty()) ans = max_element;\n        return ans;\n    }\n};","author":"原味鸡","submissionId":"611232601"},[{"id":"1013","similarity":0.7058823529411765,"totOverlap":60,"longestOverlap":10}]]},{"1016":[{"id":"1016","fileName":"1575087033.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        \n        int n = nums.length;\n        \n        if(nums[n-1] <= 0){\n            return nums[n-1];\n        }\n        \n        else{\n            int ans = 0;\n            Set<Integer> set = new HashSet<>();\n            \n            int i = n-1;\n            while(i >= 0){\n                if(set.contains(nums[i]) == false && nums[i] > 0){\n                    ans += nums[i];\n                    set.add(nums[i]);\n                }\n                i--;\n            }\n            \n            return ans;\n        }\n    }\n}","author":"Yatnesh Gyani","submissionId":"1575087033"},[]]},{"1020":[{"id":"1020","fileName":"1575087093.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st(nums.begin(), nums.end());\n        vector<int> neg;\n        vector<int> pos;\n        \n        \n        int sum = 0;\n        \n        for(int x: st) {\n            if (x < 0) neg.push_back(x);\n            else {\n                pos.push_back(x);\n                sum += x;\n            }\n        }\n        \n        if (pos.size()) {\n            return sum;\n        }\n        \n        \n        \n\n        return *max_element(neg.begin(), neg.end());\n    }\n};","author":"Ashish Singh","submissionId":"1575087093"},[]]},{"1021":[{"id":"1021","fileName":"1575087109.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int ans = -1;\n        HashSet<Integer> st = new HashSet<>();\n        for(int ele : nums){\n            if(ele<0 || st.contains(ele))  continue; \n            ans = ans==-1?0:ans;\n            st.add(ele);\n            ans+=ele;\n        }\n        //if ans is -1, get the max\n        int tmp = Arrays.stream(nums).max().getAsInt();\n        return ans==-1?tmp:ans;\n    }\n}","author":"SOMANATH MIKALI","submissionId":"1575087109"},[]]},{"1022":[{"id":"1022","fileName":"1575087073.txt","sourceCode":"\nclass Solution {\npublic:\n\tint maxSum(vector<int>& nums) {\n\t\tsort(begin(nums), end(nums));\n\t\tint ans = nums.back();\n\t\tset<int> used;\n\t\tint sum = 0;\n\t\tfor (int x : nums) {\n\t\t\tif (x > 0 && used.find(x) == end(used))\n\t\t\t{\n\t\t\t\tsum += x;\n\t\t\t\tused.insert(x);\n\t\t\t}\n\t\t}\n\t\tif (used.size())\n\t\t\treturn sum;\n\t\treturn ans;\n\t}\n};","author":"rupakkkk","submissionId":"1575087073"},[]]},{"1024":[{"id":"1024","fileName":"1575087118.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int[] arr = new int[101];\n        int n = nums.length;\n        int ans = -200;\n        int val = 0;\n        for(int i = 0;i < n;i++){\n            ans = Math.max(nums[i],ans);\n            if(nums[i] > 0 && arr[nums[i]] == 0){\n                arr[nums[i]]++;\n                val += nums[i];\n            }\n        }\n        if(val == 0){\n            return ans;\n        }\n        return val;\n    }\n}","author":"Greeshwar R S","submissionId":"1575087118"},[]]},{"1025":[{"id":"1025","fileName":"1575087094.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int f[102] = {0};\n        int sum = 0;\n        int neg = false;\n        for(auto it : nums){\n            if(it >= 0){\n                neg = true;\n                f[it] ++;\n                if(f[it] == 1) sum += it;\n            }\n        }\n        if(!neg){\n           sum = *max_element(nums.begin(),nums.end()); \n        }\n        return sum;\n    }\n};","author":"Mercer_2","submissionId":"1575087094"},[]]},{"1028":[{"id":"1028","fileName":"1575087135.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(auto &i : nums){\n            s.insert(i);\n        }\n        bool check = false;\n        int sum = 0;\n        for(auto &i : s){\n            if(i >= 0) {\n                check = true;\n                sum += i;\n            }\n        }\n        if(!check){\n            auto k = s.end();\n            k--;\n            sum = *k;\n        }\n        return sum;\n    }\n};","author":"Win_Handsome","submissionId":"1575087135"},[]]},{"1029":[{"id":"1029","fileName":"1575087164.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        map<int,int> mp;\n        for(auto& i:nums){\n            mp[i]++;\n        }\n        bool atleast_one = false;\n        for(auto&i:mp){\n            if(i.first > 0){\n                atleast_one = true;\n                sum+=i.first;\n            }\n        }\n        if(!atleast_one){\n            sum += mp.rbegin()->first;\n        }\n        return sum;\n    }\n};","author":"Sai Mahesh","submissionId":"1575087164"},[]]},{"1030":[{"id":"1030","fileName":"1575087144.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>&X) {\n        ranges::sort(X);ranges::reverse(X);\n        int RR=X[0];unordered_set<int>u{RR};\n        for(int i=1;i<X.size()&&X[i]>=0;++i)if(u.insert(X[i]).second)RR+=X[i];\n        return RR;\n    }\n};","author":"rip.nsk","submissionId":"1575087144"},[]]},{"1031":[{"id":"1031","fileName":"1575087207.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int>m;\n        int f=0;\n        int mx=INT_MIN;\n        for(auto i:nums){\n            m[i]++;\n            if(i<0) f++;\n            if(i<0){\n                mx=max(mx,i);\n            }\n            \n        }\n        int ans=0;\n        if(f==nums.size()){\n            return mx;\n        }\n        for(auto i:m){\n            if(i.first>=0){\n                ans+=i.first;\n            }\n        }\n        return ans;\n    }\n};","author":"_Sahil_22","submissionId":"1575087207"},[]]},{"1032":[{"id":"1032","fileName":"1575087193.txt","sourceCode":"class Solution {\n    public int maxSum(int[] Tokyo) {\n        Berlin(Tokyo);\n        HashSet<Integer> Rome = new HashSet<>();\n        boolean Cairo = London(Tokyo);\n        int Paris = Beijing(Tokyo, Rome);\n\n        if (Cairo) {\n            return Paris;\n        }\n\n        return Madrid(Tokyo);\n    }\n    private void Berlin(int[] Tokyo) {\n        if (Tokyo == null || Tokyo.length == 0) {\n            throw new IllegalArgumentException(\"Input array cannot be null or empty\");\n        }\n    }\n\n    private boolean London(int[] Tokyo) {\n        return checkForPositive(Tokyo);\n    }\n\n    private int Beijing(int[] Tokyo, HashSet<Integer> Rome) {\n        return calculateSum(Tokyo, Rome);\n    }\n\n    private int Madrid(int[] Tokyo) {\n        return findMaxElement(Tokyo);\n    }\n\n    private boolean checkForPositive(int[] Tokyo) {\n        for (int Delhi : Tokyo) {\n            if (Delhi > 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private int calculateSum(int[] Tokyo, HashSet<Integer> Rome) {\n        int Paris = 0;\n        for (int Delhi : Tokyo) {\n            if (Delhi > 0 && Rome.add(Delhi)) {\n                Paris += Delhi;\n            } else if (Delhi == 0) {\n                Rome.add(Delhi);\n            }\n        }\n        return Paris;\n    }\n\n    private int findMaxElement(int[] Tokyo) {\n        int Sydney = Tokyo[0];\n        for (int Delhi : Tokyo) {\n            if (Delhi > Sydney) {\n                Sydney = Delhi;\n            }\n        }\n        return Sydney;\n    }\n\n    \n}","author":"Thrisha","submissionId":"1575087193"},[]]},{"1033":[{"id":"1033","fileName":"1575087122.txt","sourceCode":"\n#include <bits/stdc++.h>\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\n\n#pragma GCC optimize(\"O3,unroll-loops\")\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\n// using namespace __gnu_pbds;\n#define MODS 100005\n#define MOD 1000000007\n#define all(x) (x).begin(), (x).end()\n#define ll int\n#define ld long double\n#define bigint __int128\n#define vll vector<ll>\n#define vpll vector<pair<ll,ll>>\n#define mp make_pair\n#define mt make_tuple\n#define pb push_back\n#define pf push_front\n#define pbb pop_back\n#define pff pop_front\n#define test ll t;read(t);while(t--)\n#define pll pair<ll,ll>\n#define vvll vector<vector<ll>>\n#define fst first\n#define scd second\n#define ins insert\n#define cline \"n\"\n#define yes \"YES\"\n#define no \"NO\"\n#define arrlen(x) (ll)x.size()\n#define tup tuple<ll,ll,ll>\n\n#define err1(x)  cout << #x <<\"=\"<<x<<cline;\n#define err2(x,y)  cout << #x <<\"=\"<<x<<\" \"<<#y<<\"=\"<<y<<cline;\n#define err3(x,y,z)cout << #x <<\"=\"<<x<<\" \"<<#y<<\"=\"<<y<<\" \"<<#z<<\"=\"<<z<<cline;\n#define err4(x,y,z,a)cout << #x <<\"=\"<<x<<\" \"<<#y<<\"=\"<<y<<\" \"<<#z<<\"=\"<<z<<\" \"<<#a<<\"=\"<<a<<cline;\n#define forn(i,n) for(ll (i) = 0 ; (i) < (n) ; ++(i))\n#define for1(i,n) for(ll (i) = 1 ; (i) <= (n) ; ++(i))\n#define forr(i,n) for(ll (i) = (n)-1 ; (i)>=0 ; --(i))\n#define forab(i,a,b,c) for(ll (i) = a ; (i) <= (b) ; (i)+=(c))\n#define forba(i,b,a,c) for(ll (i) = b ; (i) >= (a) ; (i)+=(c))\n\n// #define pbds tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>\n\n#ifndef ONLINE_JUDGE\n#define err(x)    cout << #x <<\"=\"; _print(x); cout << cline;\n#else\n#define err(x)\n#endif\n\nstruct myhash\n{\n    static uint64_t fxn(uint64_t x)\n    {\n        x += 0x9e3779b97f4a7c15;\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n        return x ^ (x >> 31);\n    }\n \n    size_t operator ()(uint64_t x) const\n    {\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\n        return fxn(x + FIXED_RANDOM);\n    }\n};\n\ntemplate <typename T>                                           void read(T &x){cin >> x;}\ntemplate <typename T , typename T0>                             void read(T &x,T0 &y){cin >> x >> y;}\ntemplate <typename T , typename T0 , typename T1>               void read(T &x,T0 &y,T1 &z){cin >> x >> y >> z;}\ntemplate <typename T , typename T0 , typename T1 , typename T2> void read(T &x,T0 &y,T1 &z,T2 &w){cin >> x >> y >> z >> w;}\ntemplate <typename T , typename T0>                             void read(pair< T , T0 > &p){cin >> p.fst >>p.scd;}\ntemplate <typename T>                                           void read(vector< T > &oneD,ll n){forn(i,n){T x;read(x);oneD.push_back(x);}}\ntemplate <typename T>                                           void read(T oneD[] , ll n){for(ll i=0;i<n;i++){read(oneD[i]);}}\ntemplate <typename T>                                           void write(T x){cout << x << \" \";}\ntemplate <typename T>                                           void wrtline(T x){cout << x << cline;}\ntemplate <typename T , typename T0>                             void write(T x,T0 y){cout << x << \" \" << y << \"n\";}\ntemplate <typename T , typename T0 , typename T1>               void write(T x,T0 y,T1 z){cout << x << \" \" << y << \" \" << z << \"n\";}\ntemplate <typename T , typename T0 , typename T1 , typename T2> void write(T x,T0 y,T1 z,T2 w){cout << x << \" \" << y << \" \" << z << \" \" << w << \"n\";}\ntemplate <typename T , typename T0>                             void write(pair< T , T0 > &p){write(p.fst);write(p.scd);cout << cline;}\ntemplate <typename T>                                           void write(vector< T > &oneD,ll n){for(ll i=0;i<n;i++){cout<<oneD[i]<<\" \";}cout << cline;}\ntemplate <typename T>                                           void write(T oneD[] ,ll n){for(ll i=0;i<n;i++){write(oneD[i]);}cout <<cline;}\ntemplate <typename T>                                           void write(vector<vector<T>> &rc,ll n,ll m,ll w){forn(i,n){forn(j,m){cout<<setw(w)<<rc[i][j]<<\" \";}cout<<cline;}}\ntemplate <typename T>                                           void _print(T t) {cout << t;}\ntemplate <class T, class V>                                     void _print(pair <T, V> p);\ntemplate <class T>                                              void _print(vector <T> v);\ntemplate <class T>                                              void _print(set <T> v);\ntemplate <class T, class V>                                     void _print(map <T, V> v);\ntemplate <class T>                                              void _print(multiset <T> v);\ntemplate <class T>                                              void _print(set <T, greater<T>> v);\ntemplate <class T, class V>                                     void _print(map <T, V, greater<T>> v);\ntemplate <class T>                                              void _print(multiset <T, greater<T>> v);\ntemplate <class T, class V>                                     void _print(unordered_set <T, myhash> v);\ntemplate <class T, class V>                                     void _print(unordered_map <T, V, myhash> v);\ntemplate <class T>                                              void _print(stack<T> st);\ntemplate <class T>                                              void _print(queue<T> q);\ntemplate <class T>                                              void _print(deque<T> dq);\ntemplate <class T>                                              void _print(priority_queue<T> pq);\ntemplate <class T>                                              void _print(priority_queue<T,vector<T>,greater<T>> pq);\ntemplate <class T, class V>                                     void _print(pair <T, V> p) {cout << \"{\"; _print(p.fst); cout << \",\"; _print(p.scd); cout << \"}\";}\ntemplate <class T>                                              void _print(vector <T> v) {cout << \"[ \"; for (T i : v) {_print(i); cout << \" \";} cout << \"]\";}\ntemplate <class T>                                              void _print(set <T> v) {cout << \"[ \"; for (T i : v) {_print(i); cout << \" \";} cout << \"]\";}\ntemplate <class T>                                              void _print(set <T, greater<T>> v) {cout << \"[ \"; for (T i : v) {_print(i); cout << \" \";} cout << \"]\";}\ntemplate <class T>                                              void _print(priority_queue <T> pq) {cout << \"[ \"; while(!pq.empty()) {T temp=pq.top(); pq.pop(); _print(temp); cout << \" \";} cout << \"]\";}\ntemplate <class T>                                              void _print(priority_queue <T,vector<T>,greater<T>> pq) {cout << \"[ \"; while(!pq.empty()) {T temp=pq.top(); pq.pop(); _print(temp); cout << \" \";} cout << \"]\";}\ntemplate <class T>                                              void _print(stack <T> st) {cout << \"[ \"; while(!st.empty()) {T temp=st.top(); st.pop(); _print(temp); cout << \" \";} cout << \"]\";}\ntemplate <class T>                                              void _print(queue <T> q) {cout << \"[ \"; while(!q.empty()) {T temp=q.front(); q.pop(); _print(temp); cout << \" \";} cout << \"]\";}\ntemplate <class T>                                              void _print(deque <T> dq) {cout << \"[ \"; while(!dq.empty()) {T temp=dq.front(); dq.pop_front(); _print(temp); cout << \" \";} cout << \"]\";}\ntemplate <class T>                                              void _print(multiset <T> v) {cout << \"[ \"; for (T i : v) {_print(i); cout << \" \";} cout << \"]\";}\ntemplate <class T>                                              void _print(multiset <T, greater<T>> v) {cout << \"[ \"; for (T i : v) {_print(i); cout << \" \";} cout << \"]\";}\ntemplate <class T, class V>                                     void _print(map <T, V> v) {cout << \"[ \"; for (auto i : v) {_print(i); cout << \" \";} cout << \"]\";}\ntemplate <class T, class V>                                     void _print(map <T, V, greater<T>> v) {cout << \"[ \"; for (auto i : v) {_print(i); cout << \" \";} cout << \"]\";}\ntemplate <class T>                                              void _print(unordered_set <T, myhash> v) {cout << \"[ \"; for (auto i : v) {_print(i); cout << \" \";} cout << \"]\";}\ntemplate <class T, class V>                                     void _print(unordered_map <T, V, myhash> v) {cout << \"[ \"; for (auto i : v) {_print(i); cout << \" \";} cout << \"]\";}\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        set<int> s;\n        for(auto it: nums){\n            if(it>0){\n                s.ins(it);\n            }\n        }\n        if(s.empty()){\n            return *max_element(all(nums));\n        }\n        int ans=0;\n        for(auto it: s){\n            ans+=it;\n        }\n        return ans;\n    }\n};","author":"kelvin_0179","submissionId":"1575087122"},[]]},{"1035":[{"id":"1035","fileName":"1575087202.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        counter = Counter(nums)\n        ret = 0\n        for k, v in counter.items():\n            if k > 0:\n                ret += k\n        if ret ==0:\n            return max(nums)\n        else:\n            return ret\n                ","author":"chris850327","submissionId":"1575087202"},[{"id":"1884","similarity":0.7209302325581395,"totOverlap":31,"longestOverlap":9}]],"1884":[{"id":"1884","fileName":"611261180.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        cnt = Counter(nums)\n        res = 0\n        for x,c in cnt.items():\n            if x > 0:\n                res += x \n        if res == 0:\n            return max(cnt.keys())\n        return res","author":"活力喵饭","submissionId":"611261180"},[{"id":"1035","similarity":0.7209302325581395,"totOverlap":31,"longestOverlap":9}]]},{"1036":[{"id":"1036","fileName":"1575087208.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        \n        nums.sort()\n        taken = set()\n        res = 0\n        if nums[-1] < 0:\n            return nums[-1]\n            \n        for n in nums:\n            if n not in taken and n > 0:\n                taken.add(n)\n                res += n\n\n        return res\n            ","author":"Andrew Lo Zhi Sheng","submissionId":"1575087208"},[]]},{"1038":[{"id":"1038","fileName":"1575087254.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<bool> vec(101, false);\n        int ans = 0;\n        int maxNonpositive = -1000;\n        for (auto num: nums) {\n            if (num > 0) {\n                if (!vec[num]) {\n                    vec[num] = true;\n                    ans += num;\n                }\n            } else {\n                maxNonpositive = max(maxNonpositive, num);\n            }\n        }\n        if (ans == 0) {\n           ans = maxNonpositive; \n        }\n        return ans;\n    }\n};","author":"tsehsuan1102","submissionId":"1575087254"},[]]},{"1039":[{"id":"1039","fileName":"1575087212.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum=0;\n        if(*max_element(nums.begin(),nums.end())<0){\n            return *max_element(nums.begin(),nums.end());\n        }\n        map<int,int> mp;\n        for(auto &i:nums){\n            if(i<0){\n                continue ;\n            }\n            mp[i]++;\n        }\n        for(auto &i:mp){\n            sum+=i.first;\n        }\n        return sum;\n    }\n};","author":"Anupam Ghosh","submissionId":"1575087212"},[]]},{"1042":[{"id":"1042","fileName":"1575087262.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int max_neg = INT_MIN;\n        int sum = 0;\n        unordered_set<int> visited;\n        for (const int val : nums) {\n            if (val <= 0) {\n                max_neg = max(max_neg, val);\n                continue;\n            }\n            if (visited.count(val)) continue;\n            sum += val;\n            visited.insert(val);\n        }\n        return sum ? sum : max_neg;\n    }\n};","author":"HarleyLiu","submissionId":"1575087262"},[]]},{"1043":[{"id":"1043","fileName":"1575087261.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end()); \n        bool flag = false; \n        int prev = -101;\n        int sum = 0;\n        for(int i = 0; i < nums.size(); i++) {\n            if(prev == nums[i]) continue; \n            if(nums[i] < 0) continue; \n            flag = true; \n            sum += nums[i];\n            prev = nums[i]; \n        }\n        if(flag) return sum; \n        else return *max_element(nums.begin(), nums.end()); \n    }\n};","author":"Konstantinos Fotopoulos","submissionId":"1575087261"},[]]},{"1044":[{"id":"1044","fileName":"1575087321.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        unique = set([max(nums)])\n        for num in nums:\n            if num > 0:\n                unique.add(num)\n        return sum(unique)","author":"bogdansharpy","submissionId":"1575087321"},[]]},{"1045":[{"id":"1045","fileName":"1575087294.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        seen_numbers = set()\n        output = 0\n        largest_negative_number = -float('inf')\n        no_positive = True\n        for i in range(len(nums)):\n            if nums[i] in seen_numbers:\n                continue\n            elif nums[i] < 0:\n                largest_negative_number = max(largest_negative_number, nums[i])\n                continue\n            else:\n                no_positive = False\n                output += nums[i]\n                seen_numbers.add(nums[i])\n\n        if no_positive:\n            return largest_negative_number\n        else:\n            return output","author":"advait02c","submissionId":"1575087294"},[]]},{"1047":[{"id":"1047","fileName":"1575087340.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        result = 0\n        cnt = 0\n        maxi = -100\n        store = set()\n        for n in nums:\n            maxi = max(maxi, n)\n            if n not in store:\n                store.add(n)\n                if n > 0:\n                    result += n\n                    cnt += 1\n        if cnt == 0:\n            result = maxi\n        return result\n","author":"Harry Wang","submissionId":"1575087340"},[]]},{"1048":[{"id":"1048","fileName":"1575087379.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max = -0x3f3f3f3f, len = 0;\n        for(int i = 0; i < nums.length; i++) {\n            max = Math.max(nums[i], max);\n            if(nums[i] >= 0)\n                nums[len++] = nums[i];\n        }\n        if(len == 0)\n            return max;\n        int res = 0;\n        boolean[] exists = new boolean[103];\n        for(int i = 0; i < len; i++) {\n            if(!exists[nums[i]]) {\n                res += nums[i];\n                exists[nums[i]] = true;\n            }\n        }\n        return res;\n    }\n}","author":"jam","submissionId":"1575087379"},[]]},{"1050":[{"id":"1050","fileName":"1575087344.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(num <= 0 for num in nums):\n            return max(nums)\n        hashmap = set()\n        res = 0\n        for num in nums:\n            if num in hashmap or num <= 0:\n                continue\n            hashmap.add(num)\n            res += num\n        return res","author":"user9140jy","submissionId":"1575087344"},[]]},{"1051":[{"id":"1051","fileName":"1575087356.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        best = nums[0]\n        for i in range(n):\n            for j in range(i+1, n+1):\n                subarr = sorted(set(nums[i:j]))\n                while len(subarr) >= 2 and subarr[0] < 0:\n                    subarr = subarr[1:]\n                if len(subarr) > 0:\n                    best = max(best, sum(subarr))\n                \n        return best ","author":"ocavue","submissionId":"1575087356"},[]]},{"1052":[{"id":"1052","fileName":"1575087406.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        bool p = false, z = false;\n        int mn = -101, sp = 0;\n        unordered_set<int> st;\n        \n        for (int x : a) {\n            if (x > 0) {\n                if (st.find(x) == st.end()) {\n                    sp += x;\n                    st.insert(x);\n                }\n                p = true;\n            } else if (x == 0) {\n                z = true;\n                st.insert(x);\n            } else {\n                if (x > mn)\n                    mn = x;\n            }\n        }\n        \n        return p ? sp : (z ? 0 : mn);\n    }\n};","author":"yuv5120","submissionId":"1575087406"},[]]},{"1054":[{"id":"1054","fileName":"1575087393.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        \n        int ans = 0;\n        \n        bool hash[201];\n        \n        for(auto x : nums)\n            hash[x+100] = true;\n        \n        bool found = false;\n        \n        for(int i=0;i<=100;i++)\n        {\n            if(hash[i+100])\n            {\n                found = true;\n                ans += i;\n            }\n        }\n        \n        if(!found)\n        {\n            for(int i=-1;i>=-100;i--)\n            {\n                if(hash[i+100])\n                {\n                    ans = i;\n                    break;\n                }\n            }\n        }\n        \n        return ans;\n    }\n};","author":"Yuvansh Agrawal","submissionId":"1575087393"},[]]},{"1055":[{"id":"1055","fileName":"1575087384.txt","sourceCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSum = function (nums) {\n    let sum = 0;\n    let maximum = -100;\n    const set = new Set();\n    for (let i = 0; i < nums.length; i++) {\n        maximum = Math.max(maximum, nums[i]);\n        if (nums[i] <= 0 || set.has(nums[i])) continue;\n        set.add(nums[i]);\n        sum += nums[i];\n    }\n    if (sum === 0) return maximum;\n    return sum;\n};\n","author":"Duandz","submissionId":"1575087384"},[]]},{"1056":[{"id":"1056","fileName":"1575087419.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<int> present(201, 0);\n        int ans = 0;\n        int maxNegative = -100;\n\n        for (int i : nums) {\n            if (present[i + 100] == 0) {\n                present[i + 100] = 1;\n                if (i > 0) ans += i;\n                else maxNegative = max(maxNegative, i);\n            }\n        }\n\n        return ans != 0 ? ans : maxNegative;\n    }\n};","author":"lakshyak","submissionId":"1575087419"},[]]},{"1058":[{"id":"1058","fileName":"1575087410.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> m;\n        int ans = 0;\n        for(int i = 0;i<nums.size();i++){\n            if(m[nums[i]]) continue;\n            if(nums[i] > 0) ans += nums[i];\n            m[nums[i]]++;\n        }\n        if(ans == 0 && nums.size() > 0){\n            ans = INT_MAX;\n            for(int i = 0;i<nums.size();i++){\n                ans = min(abs(nums[i]),ans);\n            }\n            return -ans;\n        }\n        return ans;\n    }\n};","author":"sharit vaishnav","submissionId":"1575087410"},[]]},{"1061":[{"id":"1061","fileName":"1575087440.txt","sourceCode":"public class Solution {\n    public int MaxSum(int[] nums) {\n        bool[] e = new bool[101];\n        int sum = 0;\n\n        foreach (int num in nums) {\n            if (num > 0 && !e[num]) {\n                e[num] = true;\n                sum += num;\n            }\n        }\n        \n        return sum == 0 ? nums.Max() : sum;\n    }\n}","author":"lauel24","submissionId":"1575087440"},[]]},{"1062":[{"id":"1062","fileName":"1575087450.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        auto v = nums;\n        int n = v.size();\n        int ans = -(int)1e9;\n        for (int i = 0; i < n; i++) {\n            set <int> st;\n            int cs = 0;\n            st.insert(v[i]);\n            for (int j = i + 1; j < n; j++) {\n                st.insert(v[j]);\n            }\n            \n            while (!st.empty()) {\n                int x = *st.rbegin();\n                cs += x;\n                ans = max(ans, cs);\n                st.erase(--st.end());\n            }\n        }\n        \n        return ans;\n    }\n};","author":"Ineesh","submissionId":"1575087450"},[]]},{"1064":[{"id":"1064","fileName":"1575087425.txt","sourceCode":"// lc\n#define vi vector<int>\n#define vvii vector<vi>\n#define vpii vector<pair<int,int>>\n#define pii  pair<int,int>\n#define ll long long int\n#define vs vector<string>\n#define mii map<int, int>\n#define umii unordered_map<int, int> \n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n#define sall(x) sort(x.begin(), x.end());\n#define rall(x) sort(x.rbegin(), x.rend())\n#define pb push_back \n#define in insert\n#define ff first\n#define ss second\n#define rep(i, a, b) for (int i = a; i < b; i++)\n#define all(x) x.begin(), x.end()\n#define sall(x) sort(x.begin(), x.end());\n#define rall(x) sort(x.rbegin(), x.rend())\n#define MAX(x) *max_element(x.begin(), x.end())\n#define MIN(x) *min_element(x.begin(), x.end())\n#define SUM(X) accumulate(X.begin(), X.end(), 0LL)\n#define rev(a) reverse(a.begin(), a.end());\nconst int mod = 1e9 + 7;\n\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        umii mp;\n        int pos=0;\n        for(auto it: nums) {\n            if(it>=0) pos++;\n            mp[it]++;\n        }\n        if(pos==0) {\n            return MAX(nums);\n        }\n        int sum = 0;\n        \n        for(auto it: mp) {\n           if(it.ff>0) {\n               sum += it.ff;\n           }\n        }\n        return sum;\n    }\n};","author":"Shivank Dixit","submissionId":"1575087425"},[]]},{"1066":[{"id":"1066","fileName":"1575087477.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean found[] = new boolean[101];\n        int max = -101;\n        for(int num: nums) {\n            max = Math.max(max, num);\n            if(num < 0) {\n                continue;\n            }\n            found[num] = true;\n        }\n        if(max < 0) {\n            return max; \n        }\n        int res = 0;\n        for(int i = 0; i <= 100; i++) {\n            res += found[i] ? i : 0;\n        }\n        return res;\n    }\n}","author":"skcodes31","submissionId":"1575087477"},[]]},{"1068":[{"id":"1068","fileName":"1575087503.txt","sourceCode":"# @param {Integer[]} nums\n# @return {Integer}\ndef max_sum(nums)\n    count = nums.tally\n    if count.keys.max < 0\n        return count.keys.max\n    end\n    count.keys.sum{_1 > 0 ? _1 : 0}\nend","author":"lanegue","submissionId":"1575087503"},[]]},{"1069":[{"id":"1069","fileName":"1575087488.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        map<int,int> mp;\n        for(int i=0;i<a.size();i++){\n            mp[a[i]]++;\n        }\n        int ans=0,f=0;\n        for(int i=0;i<=100;i++){\n            if(mp.find(i)!=mp.end()){\n                ans+=i;\n                f=1;\n            }\n        }\n        if(f==1) return ans;\n        int ans1 = *max_element(a.begin(),a.end());\n        return ans1;\n    }\n};","author":"Jaikrit Sanandiya","submissionId":"1575087488"},[]]},{"1070":[{"id":"1070","fileName":"1575087506.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = 0\n        nums = set(nums)\n        nonneg = True\n        for num in nums:\n            if num >= 0:\n                ans += num\n                nonneg = False\n        if nonneg:\n            return max(nums)\n        return ans\n                \n        ","author":"a______","submissionId":"1575087506"},[]]},{"1072":[{"id":"1072","fileName":"1575087508.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        unordered_map<int, int> ma;\n        for (int i=0; i<a.size(); i++) {\n            ma[a[i]] = 1;\n        }\n        int ans = 0;\n        bool is_ok = false;\n        for (auto it=ma.begin(); it!=ma.end(); it++) {\n            if (it->first >= 0) {\n                is_ok = true;\n                ans += it->first;\n            }\n        }\n        if (is_ok) return ans;\n        ans = -200;\n        for (auto it=ma.begin(); it!=ma.end(); it++) {\n            if (it->first < 0 && it->first > ans) {\n                ans = it->first;\n            }\n        }\n        return ans;\n    }\n};","author":"ydnl","submissionId":"1575087508"},[]]},{"1073":[{"id":"1073","fileName":"1575087518.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> selected;\n        int ans = 0;\n        int maxVal = INT_MIN;\n        for(const auto& n: nums) {\n            maxVal = max(maxVal, n);\n            if(n <= 0) continue;\n            if(selected.find(n) != selected.end()) continue;\n            ans += n;\n            selected.insert(n);\n        }\n        if(ans == 0) return maxVal;\n        return ans;\n    }\n};","author":"Yu-Cheng Lin","submissionId":"1575087518"},[{"id":"1147","similarity":0.7272727272727273,"totOverlap":40,"longestOverlap":6}]],"1147":[{"id":"1147","fileName":"1575088425.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        int mx = INT_MIN;\n        unordered_set<int> st;\n        for(auto & i : nums){\n            mx = max(i, mx);\n            if(i <= 0)\n                continue;\n            if(st.count(i))\n                continue;\n            ans += i;\n            st.insert(i);\n        }\n        if(mx < 0)\n            return mx;\n            \n        return ans;\n    }\n};","author":"a7174812","submissionId":"1575088425"},[{"id":"1073","similarity":0.7272727272727273,"totOverlap":40,"longestOverlap":6}]]},{"1074":[{"id":"1074","fileName":"1575087597.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int sum = 0;\n        int leastNegative = 0;\n        boolean[] found = new boolean[101];\n\n        for (int num : nums) {\n            if (num < 0) {\n                if (leastNegative == 0 || num > leastNegative) {\n                    leastNegative = num;\n                }\n                continue;\n            }\n            \n            if (found[num]) {\n                continue;\n            }\n            found[num] = true;\n            sum += num;\n        }\n\n        if (sum == 0 && !found[0]) {\n            return leastNegative;\n        }\n\n        return sum;\n    }\n}","author":"Hidden","submissionId":"1575087597"},[]]},{"1075":[{"id":"1075","fileName":"1575087601.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean[] used = new boolean[101];\n        int sum = 0;\n        int max = Integer.MIN_VALUE;\n        for (int num : nums) {\n            if (num <= 0) {\n                max = Math.max(max, num);\n                continue;\n            }\n            if (used[num]) {\n                continue;\n            }\n            sum += num;\n            used[num] = true;\n        }\n        return sum == 0 ? max : sum;\n    }\n}","author":"jason1116","submissionId":"1575087601"},[]]},{"1076":[{"id":"1076","fileName":"1575087577.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        int sum=0,maxi=INT_MIN;\n        unordered_map<int,int> mp;\n\n        for(int x:nums) {\n            maxi=max(maxi,x);\n            if(x>0) mp[x]++;\n        }\n        for(auto& it:mp) sum+=it.first;\n        if(mp.size()==0) return maxi;\n        return sum;   \n    }\n};","author":"GMT","submissionId":"1575087577"},[]]},{"1077":[{"id":"1077","fileName":"1575087656.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mx = INT_MIN;\n        map<int,int> mp;\n        for(auto x:nums)\n        {\n           mp[x]++;\n           mx = max(mx,x);\n        }\n        int ans = 0;\n        for(auto x:mp)\n        {\n             if(x.first > 0)\n             {\n                 ans += x.first;\n             }\n        }\n        return ans>0?ans:mx;\n    }\n};","author":"ami_2025","submissionId":"1575087656"},[]]},{"1079":[{"id":"1079","fileName":"1575087612.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort()\n        ans=nums[-1]\n        n=len(nums)\n        s=set()\n        s.add(nums[-1])\n        for i in range(n-1,-1,-1):\n            x=nums[i]\n            if x>0 and x not in s:\n                ans+=x\n                s.add(x)\n                \n                \n            \n        \n        return ans\n            \n        ","author":"Cem Birler","submissionId":"1575087612"},[]]},{"1080":[{"id":"1080","fileName":"1575087640.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        \n        sort(nums.begin(), nums.end());\n        if (nums.back() < 0) {\n            return nums.back();\n        }\n        \n        map<int, int> vis;\n        int res = 0;\n        for (int i = 0; i < n; i++) {\n            if (vis[nums[i]] == 0 and nums[i] > 0) {\n                res += nums[i];\n            }\n            vis[nums[i]] = 1;\n        }\n        \n        return res;\n    }\n};","author":"Pankaj Ananda Bhosale","submissionId":"1575087640"},[]]},{"1085":[{"id":"1085","fileName":"1575087700.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool isAllNegative = true;\n        for(auto& num : nums){\n            if(num >= 0){\n                isAllNegative = false;\n                break;\n            }\n        }\n        if(isAllNegative)\n            return *max_element(nums.begin(), nums.end());\n        int res = 0;\n        unordered_set<int> st;\n        for(auto& num : nums){\n            if(num > 0 && !st.count(num))\n                res += num;\n            st.insert(num);\n        }\n        return res;\n    }\n};","author":"PeterChenX","submissionId":"1575087700"},[]]},{"1086":[{"id":"1086","fileName":"1575087746.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int n = nums.length;\n        if(nums[n - 1] > 0) {\n            int sum = 0;\n            int[] f = new int[101];\n            for(int i = n - 1; i >= 0 && nums[i] > 0; i--) {\n                if(f[nums[i]] == 0) {\n                    f[nums[i]]++;\n                    sum += nums[i];\n                }\n            }\n            return sum;\n        }\n        return nums[n - 1];\n    }\n}","author":"Algernon_5","submissionId":"1575087746"},[]]},{"1087":[{"id":"1087","fileName":"1575087758.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        int ans = 0;\n        bool elementUsed = false;\n        int maxE = -101;\n        for (int i : nums) {\n            maxE = max(maxE, i);\n            if (s.find(i) != s.end() || i <= 0) continue;\n            ans += i;\n            elementUsed = true;\n            s.insert(i);\n        }\n        return elementUsed ? ans : maxE;\n    }\n};","author":"xquisite0","submissionId":"1575087758"},[]]},{"1089":[{"id":"1089","fileName":"1575087718.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> seen(nums.begin(), nums.end());\n        int sum = 0;\n        int count = 0;\n        for (auto it = seen.rbegin(); it != seen.rend(); ++it) {\n            if (*it > 0) {\n                sum += *it;\n                ++count;\n            }\n        }\n        if (count == 0)\n            return *seen.rbegin();\n        return sum;\n    }\n};","author":"mustart","submissionId":"1575087718"},[{"id":"1581","similarity":0.8115942028985508,"totOverlap":56,"longestOverlap":24}]],"1581":[{"id":"1581","fileName":"611227703.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> numSet(nums.begin(), nums.end());\n        int ans = -101;\n        for (auto iter = numSet.rbegin(); iter != numSet.rend(); ++iter) {\n            if (ans == -101) {\n                ans = *iter;\n            } else {\n                if (*iter > 0) {\n                    ans += *iter;\n                }\n            }\n        }\n        return ans;\n    }\n};","author":"C_Learner","submissionId":"611227703"},[{"id":"1089","similarity":0.8115942028985508,"totOverlap":56,"longestOverlap":24}]]},{"1091":[{"id":"1091","fileName":"1575087789.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<int> v(101, 0);\n        int m = INT_MIN;\n        for (int a: nums) {\n            if (a >= 0) {v[a]++;}\n            m = max(m, a);\n        }\n        if (m < 0) return m;\n        int ans = 0;\n        for (int i = 0; i < 101; i++) {\n            if (v[i] > 0) ans+=i;\n        }\n        return ans;\n    }\n};","author":"Zhenyuan Lu","submissionId":"1575087789"},[]]},{"1093":[{"id":"1093","fileName":"1575087761.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(auto x:nums) {\n            if(x>=0) s.insert(x);\n        }\n        if(s.empty()) return *max_element(begin(nums),end(nums));\n        return accumulate(begin(s),end(s),0);\n    }\n};","author":"Divyansh Aggarwal","submissionId":"1575087761"},[]]},{"1094":[{"id":"1094","fileName":"1575087827.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n\n        int sum = 0;\n        var set = new HashSet<Integer>();\n        int neg = Integer.MIN_VALUE;\n        for(int i=0; i< nums.length; i++){\n           if(nums[i] >= 0 && set.add(nums[i])) {\n               sum+= nums[i];\n           }\n            if(nums[i] < 0){\n                neg = Math.max(neg, nums[i]);\n            }\n        }\n        if(set.isEmpty()){\n            return neg;\n        }else{\n            return sum;\n        }\n    }\n}","author":"Sydney Burgess","submissionId":"1575087827"},[]]},{"436":[{"id":"436","fileName":"1575082910.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>nums_set(nums.begin(), nums.end());\n        vector<int>nums2(nums_set.begin(), nums_set.end());\n        int n = nums2.size();\n        int ret = nums2[n-1];\n        for (int i = n-2; i >= 0; i--) {\n            if (nums2[i] > 0) ret += nums2[i];\n        }\n        return ret;\n        \n    }\n};","author":"Yi Yao","submissionId":"1575082910"},[{"id":"1671","similarity":0.8241758241758241,"totOverlap":75,"longestOverlap":25},{"id":"1711","similarity":0.7590361445783133,"totOverlap":63,"longestOverlap":21},{"id":"1711","similarity":0.7439024390243902,"totOverlap":61,"longestOverlap":14},{"id":"1711","similarity":0.7283950617283951,"totOverlap":59,"longestOverlap":16},{"id":"1484","similarity":0.7402597402597403,"totOverlap":57,"longestOverlap":11}]],"958":[{"id":"958","fileName":"1575086566.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size();\n        int ans = nums[n-1];\n        \n        for(int i = n-2; i >= 0; i--) {\n            if(nums[i] > 0 && nums[i] != nums[i+1])\n                ans = ans + nums[i];\n        }\n        return ans;\n    }\n};","author":"Satyam Bansal","submissionId":"1575086566"},[{"id":"958","similarity":0.7272727272727273,"totOverlap":56,"longestOverlap":25}]],"1095":[{"id":"1095","fileName":"1575087808.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        nums.erase(unique(nums.begin(),nums.end()),nums.end());\n        long long ans = *max_element(nums.begin(), nums.end());\n        if(ans<=0) return ans;\n        long long sum = 0;\n        for(int i = 0; i<nums.size(); ++i){\n            if(nums[i]>=0)sum+=nums[i];\n        }\n        return sum;\n    }\n};","author":"MemoMeto","submissionId":"1575087808"},[{"id":"1655","similarity":0.7422680412371134,"totOverlap":72,"longestOverlap":7},{"id":"1441","similarity":0.7530864197530864,"totOverlap":61,"longestOverlap":18},{"id":"1484","similarity":0.7662337662337663,"totOverlap":59,"longestOverlap":18},{"id":"1484","similarity":0.7808219178082192,"totOverlap":57,"longestOverlap":24},{"id":"1711","similarity":0.7402597402597403,"totOverlap":57,"longestOverlap":11},{"id":"1589","similarity":0.7272727272727273,"totOverlap":56,"longestOverlap":25},{"id":"1688","similarity":0.7941176470588235,"totOverlap":54,"longestOverlap":17}]],"1242":[{"id":"1242","fileName":"611225135.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        sort(a.begin(), a.end());\n        a.erase(unique(a.begin(), a.end()), a.end());\n        int ans = a.back();\n        for (int i = (int)a.size() - 2; i >= 0; i--) {\n            if (a[i] < 0) break;\n            ans += a[i];\n        }\n        return ans;\n    }\n};","author":"tobo","submissionId":"611225135"},[{"id":"1361","similarity":0.7435897435897436,"totOverlap":58,"longestOverlap":10},{"id":"1242","similarity":0.7808219178082192,"totOverlap":57,"longestOverlap":24}]],"1361":[{"id":"1361","fileName":"611226048.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end(), greater<>());\n        nums.erase(unique(nums.begin(), nums.end()), nums.end());\n        int res = 0;\n        if (nums[0] <= 0) return nums[0];\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums[i] <= 0) break;\n            res += nums[i];\n        }\n        return res;\n    }\n};","author":"Pomme","submissionId":"611226048"},[{"id":"1242","similarity":0.7435897435897436,"totOverlap":58,"longestOverlap":10}]],"1441":[{"id":"1441","fileName":"611226569.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        nums.erase(unique(nums.begin(), nums.end()), nums.end());\n        int ans = 0, cnt = 0;\n        for(int i = 0; i < nums.size(); i++) {\n            if(nums[i] >= 0) {\n                cnt++;\n                ans += nums[i];\n            } \n        }\n        if(cnt > 0)\n            return ans;\n        else return nums.back();\n    }\n};","author":"lin1314_fan","submissionId":"611226569"},[{"id":"1095","similarity":0.7530864197530864,"totOverlap":61,"longestOverlap":18}]],"1484":[{"id":"1484","fileName":"611226799.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        nums.erase(unique(nums.begin(),nums.end()),nums.end());\n        int ans = nums.back();\n        for(int i=nums.size()-2;i>=0;i--){\n            if(nums[i] >= 0) ans += nums[i];\n        }\n        return ans;\n    }\n};","author":"bright_ml","submissionId":"611226799"},[{"id":"1095","similarity":0.7662337662337663,"totOverlap":59,"longestOverlap":18}]],"1589":[{"id":"1589","fileName":"611227778.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size();\n        int sum = nums[n - 1];\n        for (int i = n - 2; i >= 0; --i)\n        {\n            if (nums[i] == nums[i + 1])\n                continue;\n            if (nums[i] < 1)\n                break;\n            sum += nums[i];\n        }\n        return sum;\n    }\n};","author":"LNR3","submissionId":"611227778"},[{"id":"1589","similarity":0.7283950617283951,"totOverlap":59,"longestOverlap":16}]],"1655":[{"id":"1655","fileName":"611228699.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums)\n    {\n    \tint n = nums.size();\n    \n    \tint f = 0;\n    \tfor (int i = 0; i < n; i++)\n    \t\tif (nums[i] > 0) f = 1;\n    \tif (!f) return *max_element(nums.begin(), nums.end());\n    \n    \tsort(nums.begin(), nums.end());\n    \tn = nums.erase(unique(nums.begin(), nums.end()), nums.end()) - nums.begin();\n    \tint sum = 0;\n    \tfor (int i = 0; i < n; i++)\n    \t{\n    \t\tif (nums[i] > 0) sum += nums[i];\n    \t}\n    \treturn sum;\n    }\n};","author":"OVOAutoMaton","submissionId":"611228699"},[{"id":"1095","similarity":0.7422680412371134,"totOverlap":72,"longestOverlap":7}]],"1662":[{"id":"1662","fileName":"611228801.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        nums.erase(unique(nums.begin(), nums.end()), nums.end());\n        const int n = nums.size();\n        int ans = nums[n - 1];\n        for(int i = n - 2; i >= 0; i -- ) {\n            if(nums[i] >= 0) {\n                ans += nums[i];\n            }\n            else{\n                break;\n            }\n        }\n\n        return ans;\n    }\n};","author":"latstars","submissionId":"611228801"},[{"id":"1662","similarity":0.7439024390243902,"totOverlap":61,"longestOverlap":14}]],"1671":[{"id":"1671","fileName":"611228926.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>us(nums.begin(),nums.end());\n        vector<int>new_nums(us.begin(),us.end());\n        int n=new_nums.size();\n        sort(new_nums.begin(),new_nums.end());\n        \n        if(new_nums[n-1]<0)return new_nums[n-1];\n        int res=0;\n        for(int i=n-1; i>=0; i--){\n            // cout<<new_nums[i]<<' ';\n            if(new_nums[i]>=0)res+=new_nums[i];\n        }\n        return res;\n    }\n};","author":"Zhang-Jiahui","submissionId":"611228926"},[{"id":"436","similarity":0.8241758241758241,"totOverlap":75,"longestOverlap":25}]],"1688":[{"id":"1688","fileName":"611229157.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        ranges::sort(nums);\n        nums.erase(unique(nums.begin() ,nums.end()), nums.end());\n        int re = nums.back();\n        for(int i = nums.size() - 2; i >= 0; --i)\n            {\n                if(re + nums[i] < re)\n                {\n                    return re;\n                }\n                re += nums[i];\n            }\n\n        return re;\n    }\n};","author":"hanser_no_neko","submissionId":"611229157"},[{"id":"1484","similarity":0.7941176470588235,"totOverlap":54,"longestOverlap":17}]],"1711":[{"id":"1711","fileName":"611229704.txt","sourceCode":"class Solution {\n    public:\n        int maxSum(vector<int>& nums) {\n            sort(nums.begin(),nums.end());\n            auto it = unique(nums.begin(),nums.end());\n            nums.erase(it,nums.end());\n            int n = nums.size();\n            int res = nums[n-1];\n            for (int i = n-2; i >= 0; i--)\n            {\n                if(nums[i]>0)res+=nums[i];\n                else break;\n            }\n            return res;\n            \n        }\n    };","author":"AwakeFantasy","submissionId":"611229704"},[{"id":"436","similarity":0.7590361445783133,"totOverlap":63,"longestOverlap":21}]]},{"1098":[{"id":"1098","fileName":"1575087826.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res = sum(i for i in set(nums) if i > 0)\n        if res == 0:\n            return max(set(nums))\n        return res","author":"yui","submissionId":"1575087826"},[]]},{"1099":[{"id":"1099","fileName":"1575087842.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if len(set(nums))==1:\n            return nums[0]\n        s=set(nums)\n        if all(x<0 for x in s):\n            return max(s)\n        return sum(set([num for num in nums if num>0]))\n        ","author":"rba123","submissionId":"1575087842"},[]]},{"1100":[{"id":"1100","fileName":"1575087832.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size() ; \n        if(n==1) return nums[0] ; \n        set<int> s ; \n        for(int ele : nums) s.insert(ele) ; \n        int sum = 0 ; \n        set<int> st ; \n        for(auto it = s.begin() ; it!=s.end() ; it++){\n            if(*it>=0){\n                sum+=*it ; \n                st.insert(*it) ;\n            }\n        }\n        if(st.size()==0){\n            return *max_element(nums.begin(),nums.end()) ; \n        }\n        return sum ; \n    }\n};","author":"Raghav Mahajan","submissionId":"1575087832"},[]]},{"1101":[{"id":"1101","fileName":"1575087917.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int> seen;\n        int ans = 0;\n        int big = INT_MIN;\n        bool taken = false;\n        for(int i : nums){\n            big = max(i,big);\n            if(seen[i] == 0 && i > 0){\n                ans += i;\n                seen[i] += 1;\n                taken = true;\n            }\n        }\n        if(!taken){\n            return big;\n        }\n        return ans;\n    }\n};","author":"ALWHleetcode","submissionId":"1575087917"},[]]},{"1102":[{"id":"1102","fileName":"1575087924.txt","sourceCode":"class Solution:\n    def maxSum(self, a: List[int]) -> int:\n        mx=max(i for i in a)\n        if mx<0:return mx\n        a=[i for i in a if i>0]\n        n=len(a)\n        if n==0:return 0\n        ans=a[0]\n        for i in range(n):\n            for j in range(i+1,n+1):\n                s=set(a[i:j])\n                if sum(s)>ans:\n                    ans=sum(s)\n        return ans","author":"OuterRidgeSavage","submissionId":"1575087924"},[]]},{"1104":[{"id":"1104","fileName":"1575087935.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        if(nums.size() == 1) return nums[0];\n        for(int i = 0;i<nums.size();i++){\n            if(nums[i]>=0) st.insert(nums[i]);\n        }\n        int sum  = 0;\n        if(st.size() == 0){\n            sort(nums.begin(),nums.end());\n            int n = nums.size();\n            return nums[n-1];\n        }\n        for(auto it : st){\n            sum += it;\n        }\n\n        return sum;\n    }\n};","author":"kushagra saxena","submissionId":"1575087935"},[]]},{"1106":[{"id":"1106","fileName":"1575087946.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = *max_element(nums.begin(),nums.end()),n = nums.size();\n        vector<bool> a(202,false);\n        a[ans+100] = true;\n        for(int i=0;i<n;i++){\n            if(nums[i]>0 && !a[nums[i]+100]){\n                ans += nums[i];\n            }\n            a[nums[i]+100] = true;\n        }\n        return ans;\n    }\n};","author":"Vivek vardhan Mudigonda","submissionId":"1575087946"},[]]},{"1108":[{"id":"1108","fileName":"1575087991.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n =a.size();\n        map<int,int> mp;\n        int maxi= INT_MIN;\n        for(auto ii : a){\n            if(ii>0)\n            mp[ii]++;\n            else{\n                maxi= max(maxi,ii);\n            }\n        }\n        int ans=0;\n        if(!mp.size()) return maxi;\n        for(auto ii : mp){\n            ans+=ii.first;\n        }\n        \n        return ans;\n    }\n};","author":"ketan_k_j","submissionId":"1575087991"},[]]},{"1109":[{"id":"1109","fileName":"1575087953.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max=Integer.MIN_VALUE;\n        int n=nums.length;int sum=0;\n        HashSet<Integer>set=new HashSet<>();\n        for(int i=0;i<n;i++)\n            {\n                max=Math.max(max,nums[i]);\n                if(!set.contains(nums[i]) && nums[i]>0)\n                {\n                    sum+=nums[i];\n                    set.add(nums[i]);\n                }\n            }\n           if(set.size()==0)\n               return max;\n        return sum;\n        }\n}","author":"madhukumarlingudu","submissionId":"1575087953"},[]]},{"1110":[{"id":"1110","fileName":"1575088000.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, bool> mp;\n        int sm = 0, mx = INT_MIN;\n        for(int num : nums) {\n            if(mp.count(num) == 0 && num > 0) {\n                mp[num] = true;\n                sm += num;\n            }\n            mx = max(mx, num);\n        }\n\n        return mx <= 0 ? mx : sm;\n    }\n};","author":"Parth Gupta","submissionId":"1575088000"},[]]},{"1112":[{"id":"1112","fileName":"1575087994.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ut = nums[0];\n        int sum = 0;\n        bitset<101> seen;\n        for (auto& num : nums) {\n            ut = max(num, ut);\n            if (num > 0 && !seen[num]) {\n                sum += num;\n                seen.set(num);\n            }\n        }\n        return ut < 0 ? ut : sum;\n    }\n};","author":"buneet11","submissionId":"1575087994"},[]]},{"1113":[{"id":"1113","fileName":"1575088044.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maximum = -88888888, nowSum;\n        for (int i : nums) {\n            maximum = max(maximum, i);\n        }\n        if (maximum < 0) {\n            return maximum;\n        }\n        for (int i = 0; i != nums.size(); ++i) {\n            nowSum = 0;\n            bool haves[201] = {};\n            for (int j = i; j != nums.size(); ++j) {\n                if (nums[j] < 0 || haves[nums[j]]) {\n                    continue;\n                }\n                nowSum += nums[j];\n                haves[nums[j]] = true;\n                maximum = max(maximum, nowSum);\n            }\n        }\n        return maximum;\n    }\n};","author":"Peter Lin","submissionId":"1575088044"},[]]},{"1114":[{"id":"1114","fileName":"1575087999.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& arr) {\n        int n = (int)arr.size();\n        set<int>st(arr.begin(), arr.end());\n        vector<int>hash;\n        for(auto it: st)hash.push_back(it);\n        sort(hash.rbegin(), hash.rend());\n        int cnt = hash[0];\n        for(int i = 1; i<(int)hash.size(); i++){\n            if(cnt+hash[i] > cnt){\n                cnt+= hash[i];\n            }\n            else break;\n        }\n        return cnt;\n    }\n};","author":"Shubhamnegi","submissionId":"1575087999"},[]]},{"1115":[{"id":"1115","fileName":"1575088024.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& v) {\n        int n = v.size();\n        map<int,int> mp;\n        for(auto &x:v) mp[x]++;\n        int sm = 0;\n        int cnt = 0;\n        for(auto &[a,b]:mp) {\n            if(a > 0) sm += a;\n            else cnt += b;\n        }\n        \n        if(cnt == n) {\n            sort(v.rbegin(),v.rend());\n            sm += v[0];\n        }\n        \n        return sm;\n    }\n};","author":"e7F9OC79Eg","submissionId":"1575088024"},[]]},{"1117":[{"id":"1117","fileName":"1575088027.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums)<=0:\n            return max(nums)\n        else:\n            res=0\n            dic=set()\n            for num in nums:\n                if num>0 and num not in dic:\n                    dic.add(num)\n                    res+=num\n        return res","author":"maky","submissionId":"1575088027"},[]]},{"1120":[{"id":"1120","fileName":"1575088071.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        temp = nums[:]\n        nums = [i for i in nums if i >= 0]\n        if not nums:\n            temp.sort()\n            return max(temp)\n            return sum(set(temp))\n        return sum(set(nums))","author":"mvar","submissionId":"1575088071"},[]]},{"1121":[{"id":"1121","fileName":"1575088097.txt","sourceCode":"class Solution {\n    public int maxSum(int[] a) {\n        Set<Integer> s = new HashSet<>();\n        int sum = 0, max = -101;\n        for (int i = 0; i < a.length; i++) {\n            max = Math.max(max, a[i]);\n            if (s.contains(a[i]) || a[i] < 0) continue;\n            sum += a[i];\n            s.add(a[i]);\n        }\n        if (max <= 0) sum = max;\n        return sum;\n    }\n}","author":"Krishnam Agarwal","submissionId":"1575088097"},[]]},{"1122":[{"id":"1122","fileName":"1575088073.txt","sourceCode":"function maxSum(nums: number[]): number {\n    const set = new Set<number>();\n    nums.forEach((num) => {\n        set.add(num);\n    });\n\n    let res = 0;\n    let max = -101;\n    for (const num of set) {\n        if (num > 0) res += num;\n        max = Math.max(max, num);\n    }\n\n    if (max <= 0) return max;\n\n    return res;\n}\n","author":"Duy Long Nguyen","submissionId":"1575088073"},[]]},{"1124":[{"id":"1124","fileName":"1575088104.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        l=list(set(nums))\n        k=sum(l)\n        l.sort()\n        for i in range(1,len(l)):\n            for j in range(len(l)-i+1):\n                k=max(k,sum(l[j:j+i]))\n                # print(l[j:j+i])\n        return max(sum(l),k)\n        ","author":"Akankasha","submissionId":"1575088104"},[]]},{"1125":[{"id":"1125","fileName":"1575088098.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        var result = 0;\n        var isAlreadyArr = new boolean[101];\n        var maxNegative = Integer.MIN_VALUE;\n        for (int num : nums) {\n            maxNegative = Math.max(maxNegative, num);\n            if (num <= 0)\n                continue;\n            if (isAlreadyArr[num])\n                continue;\n            isAlreadyArr[num] = true;\n            result += num;\n        }\n        if (maxNegative <=0) return maxNegative;\n        return result;\n    }\n}","author":"tmimotw","submissionId":"1575088098"},[]]},{"1126":[{"id":"1126","fileName":"1575088148.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        priority_queue<int> pq;\n        set<int> s;\n        for(int i=0;i<n;i++)\n        {\n            if(s.find(nums[i])==s.end())\n            {\n                pq.push(nums[i]);\n                s.insert(nums[i]);\n            }\n        }\n        int ans=0;\n        int cnt=0;\n        while(!pq.empty() && pq.top()>0){\n            ans+=pq.top();\n            pq.pop();\n            cnt++;\n        }\n        if(cnt==0)\n            ans+=pq.top();\n        return ans;\n    }\n};","author":"Harshit Chauhan","submissionId":"1575088148"},[]]},{"1127":[{"id":"1127","fileName":"1575088140.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mx = -1000;\n        for (int i : nums) mx = max(mx, i);\n        if (mx<=0) return mx;\n\n        int res = 0;\n        vector<bool> v(1000, false);\n        for (int i : nums) {\n            if (i>0 && !v[i]) {\n                v[i] = true;\n                res += i;\n            }\n        }\n        return res;\n        \n    }\n};","author":"Bekzhan","submissionId":"1575088140"},[]]},{"1128":[{"id":"1128","fileName":"1575088157.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> se;\n        int sum = 0, mini = INT_MIN;\n        for(int i = 0; i< nums.size() ; i++){\n            mini = max(mini, nums[i]);\n            if(se.find(nums[i]) == se.end() && nums[i] > 0 ){\n                sum+= nums[i];\n                se.insert(nums[i]);\n            } \n        }\n        sum = sum == 0 ? mini : sum ;\n        return sum ;\n    }\n};","author":"Sarbojit Rana","submissionId":"1575088157"},[]]},{"1129":[{"id":"1129","fileName":"1575088153.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        unique_values = set(nums)\n        \n        sum_of_distinct_positives = sum(x for x in unique_values if x > 0)\n        \n        if sum_of_distinct_positives > 0:\n            return sum_of_distinct_positives\n        \n        return max(nums)\n","author":"yaominzh","submissionId":"1575088153"},[]]},{"1131":[{"id":"1131","fileName":"1575088174.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if any(num > 0 for num in nums):\n            return sum({num for num in nums if num > 0})\n            \n        else:\n            return max(nums)","author":"anish ramesh","submissionId":"1575088174"},[]]},{"1132":[{"id":"1132","fileName":"1575088201.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        visited = set()\n        total = 0\n        negative = -100\n        for num in nums:\n            if num > 0 and num not in visited:\n                total += num\n                visited.add(num)\n            elif num <= 0:\n                negative = max(negative, num)\n        if total > 0:\n            return total\n        else:\n            return negative\n                ","author":"fast benz","submissionId":"1575088201"},[]]},{"1133":[{"id":"1133","fileName":"1575088205.txt","sourceCode":"#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\nusing namespace std;\ntypedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    PBDS; //order_of_key , find_by_order ,use less_equal for multiset\n#define all(x) x.begin(), x.end()\n#define gcd(a, b) __gcd(a, b)\n#define ff first \n#define ss second\n#define lcm(a, b) (a * b) / gcd(a, b)\nconst int N = 1e6 + 10;\nconst int MOD = 1e9 + 7;\nconst int dx[8] = { 1 , -1 , 0 , 0 , 1 , 1 , -1 , -1 } ;\nconst int dy[8] = { 0 , 0 , 1 , -1 , 1 , -1 , 1 , -1 } ;\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> mpp;\n        int mx=INT_MIN;\n        for(auto &it:nums){\n            if(it<0)mx=max(mx,it);\n            else mpp[it]++;\n        }\n        if(mpp.empty())return mx;\n        int res=0;\n        for(auto &it:mpp)res+=it.ff;\n        return res;\n    }\n};","author":"Sutanu Jana","submissionId":"1575088205"},[]]},{"1134":[{"id":"1134","fileName":"1575088187.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        c = Counter(nums)\n        ans = 0\n        for k, v in c.items():\n            if k>=0: ans +=k\n        if ans ==0 and 0 not in nums:\n            return max(nums)\n        return ans\n        ","author":"kenchen","submissionId":"1575088187"},[]]},{"1135":[{"id":"1135","fileName":"1575088213.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        auto next = nums.back();\n        int sum = next;\n        for (unsigned i = nums.size() - 1; i--; ) {\n            auto num = nums[i];\n            if (num < 0)\n                break;\n            if (num == next)\n                continue;\n            sum += next = num;\n        }\n        return sum;\n    }\n};","author":"Yuriy Kaminskiy","submissionId":"1575088213"},[]]},{"1136":[{"id":"1136","fileName":"1575088242.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>mp, mn;\n        for(auto i : nums){\n            if(i >= 0) mp[i] = 1;\n            else mn[i] = 1;\n        }\n        int sum = 0;\n        if(mp.empty()){\n            sum = -200;\n            for(auto i : mn){\n                sum = max(sum, i.first);\n            }\n        } else {\n             for(auto i : mp){\n                 sum += i.first;\n             }\n        }\n        return sum;\n    }\n};","author":"Sowrav Nath","submissionId":"1575088242"},[]]},{"1138":[{"id":"1138","fileName":"1575088269.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = INT_MIN;\n        int sum = 0;\n        set<int>s;\n        for(int i=0;i<nums.size();i++){\n            s.insert(nums[i]);\n        }\n        for(auto a:s){\n            sum += a;\n            ans = max(ans,sum);\n            if(sum<0){\n                sum = 0;\n            }\n        }\n        return ans;\n    }\n};","author":"Praveen Kumar","submissionId":"1575088269"},[]]},{"1139":[{"id":"1139","fileName":"1575088299.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> a;\n        for(int i:nums) a.insert(i);\n        int sum=0;\n        vector<int> A(a.begin(),a.end());\n        int neg = 0;\n        for(int i:A){\n            if(i<0) neg++;\n            if(i>0) sum+=i;\n        }\n        if(neg==A.size()) return A.back();\n        return sum;\n    }\n};","author":"Champath Krishnaa K","submissionId":"1575088299"},[]]},{"1140":[{"id":"1140","fileName":"1575088345.txt","sourceCode":"class Solution\n{\n    public int maxSum(int[] a)\n    {\n        int s=Integer.MIN_VALUE;\n        HashSet<Integer> st=new HashSet<>();\n        for(int x:a)\n            s=Math.max(s,x);\n        if(s<=0)\n            return s;\n        st.add(s);\n        for(int x:a)\n        {\n            if(st.contains(x)||x<0)\n                continue;\n            else\n                s+=x;\n            st.add(x);\n        }\n        return s;\n    }\n}","author":"Arkaprabha De","submissionId":"1575088345"},[]]},{"1144":[{"id":"1144","fileName":"1575088401.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> mpp;\n        int n=nums.size();\n        int ans=0;\n        int smallestNegative=INT_MIN;\n        for(int i=0;i<n;i++){\n            if(nums[i]<0){\n                smallestNegative=max(smallestNegative,nums[i]);\n                continue;\n            }\n            if(mpp.find(nums[i])==mpp.end()){\n                ans+=nums[i];\n            }\n            mpp[nums[i]]=1;\n        }\n        if(mpp.size()==0 && smallestNegative!=INT_MAX){\n            return smallestNegative;\n        }\n        return ans;\n    }\n};","author":"vsriranganidhi7283","submissionId":"1575088401"},[]]},{"1145":[{"id":"1145","fileName":"1575088393.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        \n        visited = set()\n        curr_sum = 0\n        max_num = float(\"-inf\")\n        for num in nums:\n            if num > 0 and num not in visited:\n                curr_sum += num\n                visited.add(num)\n            max_num = max(max_num, num)\n\n        return curr_sum if curr_sum else max_num","author":"Mojtaba Yousefi","submissionId":"1575088393"},[]]},{"1146":[{"id":"1146","fileName":"1575088412.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st(nums.begin(),nums.end());\n\n        int ans = 0, cnt=0;\n        for(auto it: st)\n        {\n            int val = it;\n            if(val>0)\n            {\n                ans += it;\n                cnt++;\n            }\n        }\n        if(cnt==0)\n        {\n            auto it = st.end();\n            it--;\n            ans = *(it);\n        }\n        return(ans);\n    }\n};","author":"prabh_","submissionId":"1575088412"},[]]},{"1148":[{"id":"1148","fileName":"1575088402.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, int> g_map;\n        int i, max_ele=INT_MIN, sum=0;\n        for(i=0;i<nums.size();i++){\n            max_ele=max(max_ele, nums[i]);\n            g_map[nums[i]]++;\n            if(nums[i]>=0 && g_map[nums[i]]==1)\n                sum += nums[i];\n        }\n\n        if(max_ele<0)\n            return max_ele;\n\n        return sum;\n    }\n};","author":"Dragon of the West","submissionId":"1575088402"},[]]},{"1149":[{"id":"1149","fileName":"1575088418.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        big = -inf\n        for num in nums:\n            if num > 0 and num not in s:\n                s.add(num)\n            big = max(big, num)\n        return sum(s) if len(s) > 0 else big","author":"Eason","submissionId":"1575088418"},[]]},{"1150":[{"id":"1150","fileName":"1575088428.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for(int i=0;i<nums.size();i++) s.insert(nums[i]);\n\n        int ans = 0;\n        for(auto it : s) {ans = max(ans,ans+it);}\n        if((*s.rbegin()<0))\n        {\n            ans += *s.rbegin();\n        }\n        return ans;\n    }\n};","author":"Abhi25jk","submissionId":"1575088428"},[]]},{"1151":[{"id":"1151","fileName":"1575088438.txt","sourceCode":"#define ll long long \nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n      ll ans=0;  \n        ll i;\n        ll n=nums.size();\n        ll j;\n        ll x=0;\n        ll mx=-101;\n        for(i=0;i<n;i++){\n            if(nums[i]<0){\n                 mx=max(mx,(ll)nums[i]);\n                x=x+1;\n            }\n        }\n        if(x==n){\n             return mx;\n        }\n        for(i=0;i<n;i++){\n            unordered_map<ll,ll>mp;\n            ll sm=0;\n            for(j=i;j>=0;j--){\n                if(mp[nums[j]]==0&&nums[j]>=0){\n                     sm=sm+nums[j];\n                }\n                mp[nums[j]]++;\n                ans=max(ans,sm);\n            }\n\n            \n        }\n\n        return int(ans);\n    }\n};","author":"Ronit Raj","submissionId":"1575088438"},[]]},{"1152":[{"id":"1152","fileName":"1575088429.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        vector<int> v;\n        for(int i=0;i<n;i++) if(nums[i]>0) v.push_back(nums[i]);\n        int x=v.size();\n        int ans=0;\n        set<int> st;\n        n=v.size();\n        if(n==0){\n            return *max_element(nums.begin(),nums.end());\n        }\n        for(int i=0;i<n;i++){\n            st.insert(v[i]);\n        }\n        for(auto it:st) ans+=it;\n        return ans;\n    }\n};","author":"Rahul Kumar","submissionId":"1575088429"},[]]},{"1156":[{"id":"1156","fileName":"1575088525.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        num_set = set(nums)\n        sorted_nums = sorted(num_set)\n        total = sorted_nums[-1]\n        \n        for i in range(len(sorted_nums) - 2, -1, -1):\n            if sorted_nums[i] < 0: break\n            else: total += sorted_nums[i]\n\n        return total\n","author":"kobb","submissionId":"1575088525"},[]]},{"1158":[{"id":"1158","fileName":"1575088576.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int sum = 0;\n        int mx = -101;\n        Set<Integer> set = new HashSet<>();\n        for (int num : nums) {\n            mx = Math.max(mx, num);\n            if (num < 0) {\n                continue;\n            }\n            if (set.contains(num)) {\n                continue;\n            }\n            set.add(num);\n            sum += num;\n        }\n        if (set.isEmpty()) {\n            return mx;\n        }\n        return sum;\n    }\n}","author":"Yinghua Hu","submissionId":"1575088576"},[]]},{"1159":[{"id":"1159","fileName":"1575088577.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxsum = 0;\n        int n = INT_MIN;\n        unordered_set<int> st;\n        for(auto &j: nums){\n            if(j >= 0){\n                st.insert(j);\n            }else{\n                n = max(n, j);\n            }\n        }\n        if(st.size() == 0){\n            return n;\n        }\n        else{\n            for(auto &j: st){\n                maxsum += j;\n            }\n        }\n        return maxsum;\n        \n    }\n};","author":"Bhavin191","submissionId":"1575088577"},[]]},{"1160":[{"id":"1160","fileName":"1575088581.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        new = []\n        for i in range(len(nums)):\n            if nums[i] >= 0:\n                new.append(nums[i])\n        if len(new) == 0: return max(nums)\n        nums = new\n        return sum(set(nums))","author":"LouisCheng","submissionId":"1575088581"},[]]},{"1161":[{"id":"1161","fileName":"1575088617.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int max=*max_element(begin(nums),end(nums));\n        if(max<=0) return max;\n        int ans=0;\n        unordered_set<int>seen;\n        for(int&n:nums){\n            if(n<=0 || seen.contains(n)) continue;\n            seen.insert(n);\n            ans+=n;\n        }\n        return ans;\n    }\n};","author":"dktoan03","submissionId":"1575088617"},[]]},{"1170":[{"id":"1170","fileName":"1575088692.txt","sourceCode":"class Solution {\n    fun maxSum(a: IntArray): Int {\n        val s = mutableSetOf<Int>()\n        var r = 0\n        for (x in a) {\n            if (x > 0 && s.add(x)) r += x\n        }\n        return if (r > 0) r else a.maxOrNull()!!\n    }\n}\n","author":"dkasd_12","submissionId":"1575088692"},[]]},{"1171":[{"id":"1171","fileName":"1575088724.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        hash_set = set()\n        res = 0\n        max_num = nums[0]\n        for num in nums:\n            if num > 0 and num not in hash_set:\n                res += num\n                hash_set.add(num)\n            max_num = max(max_num, num)\n        return res if res > 0 else max_num","author":"luoyaqifei","submissionId":"1575088724"},[]]},{"1172":[{"id":"1172","fileName":"1575088730.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int> mp;\n        int ans=0;\n        int f=0;\n        for(auto i:nums)\n            {\n                if(i<0)\n                    continue;\n                if(mp.find(i)==mp.end())\n                {ans+=i;\n                 f=1;\n                    mp[i]=1;\n                }\n            }\n        \n        if(f==0)\n        {\n            ans=INT_MIN;\n            for(auto i:nums)\n                ans=max(ans,i);\n            \n        }\n        return ans;\n        \n        \n    }\n};","author":"srirammarni99","submissionId":"1575088730"},[]]},{"1173":[{"id":"1173","fileName":"1575088726.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.rbegin(), nums.rend());\n        int p = nums[0];\n        int ans = nums[0];\n        for (int i = 1; i < nums.size(); ++i) {\n            if (nums[i] != p && nums[i] > 0) {\n                ans += nums[i];\n            }\n            p = nums[i];\n        }\n        return ans;\n        \n    }\n};","author":"Teemu Ryyti","submissionId":"1575088726"},[]]},{"1175":[{"id":"1175","fileName":"1575088747.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        nums.sort()\n        st = set()\n        for i in range(n):\n            if nums[i] >= 0:\n                st.add(nums[i])\n        if len(st) == 0:\n            ans = nums[0]\n            for i in range(1, n):\n                if nums[i] < 0:\n                    ans = nums[i]\n            return ans\n        else:\n            return sum(st)","author":"pein531","submissionId":"1575088747"},[]]},{"1176":[{"id":"1176","fileName":"1575088776.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        unordered_set<int> st;\n        int ans = 0;\n        bool positiveNum = false;\n        for (int i = 0; i < n; i++) {\n            if (nums[i] >= 0 && !st.contains(nums[i])) {\n                ans += nums[i];\n                positiveNum = true;\n                st.insert(nums[i]);\n            }\n        }\n        if (!positiveNum) {\n            ans = *max_element(begin(nums), end(nums));\n        }\n        return ans;\n    }\n};","author":"Apurv Chauhan","submissionId":"1575088776"},[]]},{"652":[{"id":"652","fileName":"1575084363.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n\n        result = 0\n            \n        for num in nums:\n            if num > 0:\n                result += num\n        \n        if result == 0: # no positive nmubers\n            return max(nums)\n            \n        return result\n        ","author":"tlh65","submissionId":"1575084363"},[{"id":"652","similarity":0.717948717948718,"totOverlap":28,"longestOverlap":9}]],"1179":[{"id":"1179","fileName":"1575088778.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        numSet = set(nums)\n        result = 0\n\n        for num in numSet:\n            if num > 0:\n                result += num\n\n        if result == 0:\n            return max(numSet)\n        else:\n            return result","author":"lkhlc","submissionId":"1575088778"},[{"id":"1332","similarity":1.0,"totOverlap":38,"longestOverlap":19},{"id":"1179","similarity":0.717948717948718,"totOverlap":28,"longestOverlap":9}]],"1332":[{"id":"1332","fileName":"611225887.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums=set(nums)\n        answer=0\n        for i in nums:\n            if i>0:\n                answer+=i\n        if answer==0:\n            return max(nums)\n        else:\n            return answer","author":"94664","submissionId":"611225887"},[{"id":"1179","similarity":1.0,"totOverlap":38,"longestOverlap":19}]]},{"1180":[{"id":"1180","fileName":"1575088803.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        check = set()\n        ans = 0\n        maxNega = min(nums)\n        for val in nums:\n            if val <= 0:\n                maxNega = max(maxNega,val)\n                continue\n            if val not in check:\n                ans += val\n                check.add(val)\n        if ans != 0:\n            return ans\n        else:\n            return maxNega","author":"Wenhanfu Yang","submissionId":"1575088803"},[]]},{"1181":[{"id":"1181","fileName":"1575088794.txt","sourceCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSum = function (nums) {\n  const array = Array.from(new Set(nums.filter((num) => num >= 0)));\n  if (array.length === 0) {\n    return Math.max(...nums);\n  }\n\n  return array.reduce((acc, curr) => acc + curr, 0);\n};\n","author":"Fausta Leonardo","submissionId":"1575088794"},[]]},{"1182":[{"id":"1182","fileName":"1575088823.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> u = {nums.begin(),nums.end()};\n        int out = 0;\n        if(u.lower_bound(0) == u.end()) {\n            return *u.rbegin();\n        }\n        for(auto it = u.upper_bound(0); it != u.end();++it) {\n            out += *it;\n        }\n        return out;\n    }\n};","author":"ilyak315","submissionId":"1575088823"},[]]},{"1183":[{"id":"1183","fileName":"1575088805.txt","sourceCode":"from typing import List\n\nclass Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos = []\n        for i in nums:\n            if i > 0 and i not in pos:\n                pos.append(i)\n        \n        if len(pos) > 0:\n            tot = 0\n            for i in pos:\n                tot += i\n            return tot\n        else:\n            return max(nums)","author":"Sujith Kumar K","submissionId":"1575088805"},[]]},{"1184":[{"id":"1184","fileName":"1575088828.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        numset = set()\n        for num in nums:\n            if num not in numset and num >= 0:\n                numset.add(num)\n        #if there are no positive numbers in nums, then select the smallest -ve number\n        if len(numset)==0:\n            maxm = -1e5\n            for num in nums:\n                if num > maxm:\n                    maxm = num\n            return maxm\n        sol = 0\n        for elem in numset:\n            sol += elem\n        return sol","author":"Subhajit Chatterjee","submissionId":"1575088828"},[]]},{"1185":[{"id":"1185","fileName":"1575088854.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>&a) {\n        sort(a.begin(),a.end());\n        int n=a.size();\n        if(a[n-1]<0)\n        {\n            return a[n-1];\n        }\n        if(a[n-1]==0)\n            return 0;\n        set<int>st;\n        int i;\n        int ans=0;\n        for(i=0;i<n;i++)\n            {\n                if(a[i]>=0)\n                {\n                    if(st.find(a[i])==st.end())\n                        ans+=a[i];\n                    st.insert(a[i]);\n                }\n            }\n        return ans;\n    }\n};","author":"Soumyadeep Singh","submissionId":"1575088854"},[]]},{"1186":[{"id":"1186","fileName":"1575088837.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int ans = -1e5;\n        for(int i=0; i<n; i++){\n            map<int,int> mp;\n            int temp = 0, f= 0;\n            for(int j=i; j<n; j++){\n                if(nums[j] < 0 || mp.find(nums[j]) != mp.end()) continue;\n                temp += nums[j];\n                mp[nums[j]]++;\n                f = 1;\n            }\n            if(f) ans = max(ans, temp);\n        }\n\n        if(ans == -1e5){\n            return *max_element(nums.begin(), nums.end());\n        }\n\n        return ans;\n    }\n};","author":"Pramod Biradar","submissionId":"1575088837"},[]]},{"1188":[{"id":"1188","fileName":"1575088874.txt","sourceCode":"use std::cmp::Ordering;\n\nimpl Solution {\n    pub fn max_sum(mut nums: Vec<i32>) -> i32 {\n        let n = nums.len();\n        nums.sort();\n        if nums[n - 1] <= 0 {\n            return nums[n - 1];\n        }\n        let mut ans = 0;\n        for i in 0..n {\n            if nums[i] > 0 && (i == 0 || nums[i] != nums[i - 1]) {\n                ans += nums[i];\n            }\n        }\n        \n        \n        ans\n    }\n}","author":"OneMore14","submissionId":"1575088874"},[]]},{"1190":[{"id":"1190","fileName":"1575088899.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        set<int>st;\n        int re=0;\n        int mi=INT_MIN;\n        for(int i: nums) {\n            st.insert(i);\n            if(i<0) mi=max(mi, i);\n        }\n        //cout<<mi<<\"n\";\n        int f=0;\n        for(auto i: st) {\n            if(i>=0) f=1, re+=i;\n        }\n        if(!f) re=mi;\n        return re;\n        \n    }\n};","author":"SIDDHARTH","submissionId":"1575088899"},[]]},{"1195":[{"id":"1195","fileName":"1575088960.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n=len(nums)\n        st=set()\n        ret=0\n        for i in range(n):\n            if nums[i]>0:\n                if nums[i] not in st:\n                    st.add(nums[i])\n                    ret+=nums[i]\n        if not len(st):\n            ret=max(nums)\n        return ret\n            ","author":"FrogFox","submissionId":"1575088960"},[]]},{"1196":[{"id":"1196","fileName":"1575089026.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        int sum = 0;\n        int max_neg = INT_MIN;\n        int len = nums.size();\n        bool flag = false;\n        for(int i = 0; i < len; i++){\n            int n = nums[i];\n            if(n > 0){\n                if(s.count(n)){continue;}\n                s.insert(n);\n                sum += n;\n                flag = true;\n            }else{\n                max_neg = max(max_neg, n);\n            }\n        }\n\n        if(flag){return sum;}\n        return max_neg;\n        \n    }\n};","author":"Huang yu","submissionId":"1575089026"},[]]},{"1197":[{"id":"1197","fileName":"1575089064.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        int res = INT_MIN;\n        int val = 0;\n        sort(nums.begin(),nums.end());\n        for(int i : nums){\n            if(s.find(i)==s.end()){\n                val+=i;\n                res= max(res,val);\n                s.insert(i);\n                if(val<0){\n                    val = 0;\n                }\n            }\n        }\n        return res;\n        \n    }\n};","author":"Narasimha","submissionId":"1575089064"},[]]},{"1199":[{"id":"1199","fileName":"1575089065.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int count=0;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]>=0) count++;\n        }\n        if(count==0){\n            sort(nums.begin(),nums.end());\n                return nums[nums.size()-1];\n            \n        }\n        unordered_map<int,int>mp;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]<0) continue;\n            mp[nums[i]]++;\n        }\n\n        long long sum=0;\n        for(auto it:mp){\n            sum+=it.first;\n        }\n        return sum;\n    }\n};","author":"Abhishek Choudhary","submissionId":"1575089065"},[]]},{"1200":[{"id":"1200","fileName":"1575089101.txt","sourceCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSum = function(nums) {\n    const set = new Set();\n    for (const num of nums) {\n        set.add(num)\n    }\n    const arr = [...set]\n    \n    arr.sort((a,b)=>a-b);\n    \n    while (arr.length>1 && arr[0]<0) {\n        arr.shift()\n    }\n    \n    return arr.reduce((a,b)=>a+b, 0)\n};","author":"abawlau","submissionId":"1575089101"},[]]},{"1202":[{"id":"1202","fileName":"1575089078.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        bool hasPositive = false;\n        int maxNeg = INT_MIN;\n        for(int num : nums) {\n            if(num >= 0) hasPositive = true;\n            if(num < 0) maxNeg = max(maxNeg, num);\n            s.insert(num);\n        }\n        int result = 0;\n        for(auto it = s.begin(); it != s.end(); it++)\n            if(*it > 0)\n                result += *it;\n        return hasPositive ? result : maxNeg;\n    }\n};","author":"Ting","submissionId":"1575089078"},[]]},{"1205":[{"id":"1205","fileName":"1575089114.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size(), ans = 0;\n        sort(nums.rbegin(),nums.rend());\n        if(nums[0] < 0)\n        return nums[0];\n        set<int> s;\n        for(int i = 0; i < n; i++){\n            s.insert(nums[i]);\n        }\n        for(auto num:s){\n            if(num > 0)\n            ans += num;\n        }  \n        return ans;\n    }\n};","author":"Raj kharkwal","submissionId":"1575089114"},[]]},{"1207":[{"id":"1207","fileName":"1575089164.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int> mp;\n        for(auto i: nums){\n            mp[i] = 1;\n        }\n\n        int ans = 0;\n        for(auto i: mp){\n            if(i.first>0){\n                ans += i.first;\n            }\n        }\n\n        if(ans == 0 && mp.size()>0){\n            ans = *max_element(nums.begin(),nums.end());\n        }\n\n        return ans ;\n    }\n};","author":"Lubesh","submissionId":"1575089164"},[]]},{"1208":[{"id":"1208","fileName":"1575089170.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) \n    {\n        vector<int> gunjesh = nums;\n        unordered_set<int> gun;\n        int kum =0;\n        for(int kumar:gunjesh)\n            {\n                if(kumar>0)\n                {\n                    gun.insert(kumar);\n                }\n            }\n        for(int g: gun)\n            {\n                kum +=g;\n            }\n        int answer;\n        if(!gun.empty())\n        {\n            answer =kum;\n        }\n        else\n        {\n            answer = *max_element(gunjesh.begin(), gunjesh.end());\n        }\n        return answer;\n    }\n};","author":"GUNJESH KUMAR","submissionId":"1575089170"},[]]},{"1209":[{"id":"1209","fileName":"1575089176.txt","sourceCode":"impl Solution {\n    pub fn max_sum(mut nums: Vec<i32>) -> i32 {\n        nums.sort_unstable_by(|a, b| b.cmp(a));\n        let mut sum = nums[0];\n        for i in 1..nums.len() {\n            if nums[i] != nums[i - 1] && nums[i] > 0 {\n                sum += nums[i];\n            }\n        }\n        sum\n    }\n}\n","author":"stupid_panda","submissionId":"1575089176"},[]]},{"1210":[{"id":"1210","fileName":"1575089175.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> x;\n        for(int v: nums) x.insert(v);\n        \n        int r = 0;\n        for(int v: x) {\n            cout << v << \"n\";\n            if(v>0)r+=v;            \n        }\n        auto lastp = x.end();\n        lastp--;\n        \n        int lastv = *lastp;\n        \n        if(lastv<0) return lastv;\n\n    return r;\n        \n        \n    }\n};","author":"oserres","submissionId":"1575089175"},[]]},{"1212":[{"id":"1212","fileName":"1575089190.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n     sort(nums.begin(),nums.end());\n        int maxi=nums[nums.size()-1];\n    for(int i=0;i<nums.size();i++){\n        int a=nums[i];\n        if(a>=0)\n            st.insert(a);\n    }\n    int sm=0;\n    if(!st.empty()){\n        for(int it:st){\n            sm+=it;\n        }\n        return sm;\n    }\n    \n    return maxi;\n    }\n};","author":"pandeysujal04","submissionId":"1575089190"},[]]},{"1213":[{"id":"1213","fileName":"1575089195.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean[] check = new boolean[101];\n        int n = nums.length;\n        boolean positive = false;\n        int max_negative =-20000;\n        int ans=0;\n        for(int i=0;i <n;i++ ){\n            if(nums[i]<0){\n                max_negative = Math.max(max_negative,nums[i]);\n                continue;\n            }\n            else{\n                positive =true;\n            }\n            if(!check[nums[i]]){\n                ans+= nums[i];\n                check[nums[i]] = true;\n            }\n            \n        }\n        if(positive) return ans;\n       return max_negative;\n    }\n}","author":"lmaosuvuong","submissionId":"1575089195"},[]]},{"1216":[{"id":"1216","fileName":"1575089224.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int sum = 0;\n        int cnt = 0;\n        int max_num = INT_MIN;\n        for (int i = 0; i < nums.size(); ++i) {\n            max_num = max(max_num, nums[i]);\n            \n            if ((i == 0 || nums[i] != nums[i-1]) && nums[i] >= 0) {\n                sum += nums[i];\n                cnt++;\n            }\n        }\n\n        return cnt > 0 ? sum : max_num;\n    }\n};","author":"Andrey","submissionId":"1575089224"},[]]},{"1217":[{"id":"1217","fileName":"1575089266.txt","sourceCode":"#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int, int> mp;\n        int Max=nums[0];\n        for(int i=0;i<nums.size();i++){\n            Max=max(Max,nums[i]);\n            if(nums[i]>0){\n                mp[nums[i]]++;\n            }\n        }\n        if(mp.size()>0){\n            int sum=0;\n            for(auto it = mp.begin(); it != mp.end(); it++){\n                sum=sum+it->first;\n            }\n            return sum;\n        }\n        else{\n            return Max;\n        }\n    }\n};\n\n","author":"Manik Aggarwal","submissionId":"1575089266"},[]]},{"1220":[{"id":"1220","fileName":"1575089269.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = 0;\n        set<int> st(nums.begin(), nums.end());\n        bool all_0 = true;\n        for (auto x : st) {\n            if (x >= 0) { all_0 = false; break;}\n        }\n        if (all_0) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        \n        for(auto x : st) res += max(x, 0);\n        return res;\n    }\n};","author":"jeemzz147","submissionId":"1575089269"},[]]},{"1221":[{"id":"1221","fileName":"1575089330.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>mp;\n        int maxi = INT_MIN;\n\n        for(int i : nums){\n            if(i > 0) mp[i]++;\n            maxi = max(maxi, i);\n        }\n        int sum = 0;\n        for(auto i : mp){\n            sum += i.first;\n        }\n        if(sum == 0) return maxi;\n        return sum;\n    }\n};","author":"Mr_QWERTY","submissionId":"1575089330"},[]]},{"1223":[{"id":"1223","fileName":"1575089286.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int[] taken = new int[105];\n        int sum = 0;\n        boolean empty = false;\n        int max = Integer.MIN_VALUE;\n        for(int num: nums) {\n            if(num >= 0 && taken[num] != 1) {\n                taken[num] = 1;\n                sum += num;\n                empty = true;\n                \n            }else {\n                max = Math.max(max, num);\n            }\n        }\n\n        return empty ? sum : max;\n    }\n}","author":"Manikya Sabharwal","submissionId":"1575089286"},[]]},{"1224":[{"id":"1224","fileName":"1575089334.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        HashSet<Integer> set = new HashSet<>();\n        int n = nums.length;\n        int sum = Integer.MIN_VALUE;\n        int sum2 = 0;\n        \n        for(int i = 0; i < n; i++) {\n            if(nums[i] > 0 && !set.contains(nums[i])) {\n                sum2 += nums[i];\n                set.add(nums[i]);\n            }\n        }\n        if(set.isEmpty()) {\n            for(int i = 0; i < n; i++) {\n                sum = Math.max(sum, nums[i]);\n            }\n            return sum;\n        }\n        return sum2;\n    }\n}","author":"pri_singh","submissionId":"1575089334"},[]]},{"1225":[{"id":"1225","fileName":"1575089348.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean all = true;\n        int max = -200;\n        for( int ele : nums){\n            if(max>=0){\n                all = false;\n                break;}\n            else {\n                max = Math.max(ele, max);\n            }\n        }\n        if(all) return max;\n        \n        int sum =0;\n         boolean [] arr = new boolean[200];\n         for( int i =0; i<nums.length; i++){\n             if(nums[i]>0 && !arr[nums[i]]){\n                 sum+= nums[i];\n                 arr[nums[i]] = true;\n             }\n         }\n        return sum;\n    }\n}","author":"Aghori","submissionId":"1575089348"},[]]},{"1226":[{"id":"1226","fileName":"1575089340.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max = Arrays.stream(nums).max().orElse(0);\n        int[] cnt = new int[Math.max(0, max) + 5];\n        boolean b = false;\n        for (int num : nums) {\n            if (num >= 0) {\n                cnt[num]++;\n                b = true;\n            }\n        }\n        if (b) {\n            int ans = 0;\n            for (int i = 0; i < cnt.length; i++) {\n                if (cnt[i] > 0) {\n                    ans += i;\n                }\n            }\n            return ans;\n        } else {\n            return max;\n        }\n    }\n}","author":"cc4414","submissionId":"1575089340"},[]]},{"1227":[{"id":"1227","fileName":"1575089356.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s=set()\n        flag=0\n        for num in nums:\n            if num>=0:\n                flag=1\n                break\n        if flag:\n            for num in nums:\n                if num>0:\n                    s.add(num)\n            return sum(s)\n        else:\n            maxx=-float('inf')\n            for num in nums:\n                maxx=max(maxx,num)\n            return maxx","author":"noonebhargav","submissionId":"1575089356"},[]]},{"1228":[{"id":"1228","fileName":"1575089359.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>st;\n        int ans = 0, count = 0, minNeg = INT_MIN;\n        for(int num: nums){\n            if(st.find(num) == st.end() && num > 0){\n                ans += num;\n                st.insert(num);\n                count++;\n            }\n            else{\n                if(num <= 0)\n                    minNeg = max(minNeg, num);\n            }\n        }\n        if(count == 0)\n            ans = minNeg;\n        return ans;\n    }\n};","author":"Santosh Kumar Singh","submissionId":"1575089359"},[]]},{"1229":[{"id":"1229","fileName":"1575089362.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n        Arrays.sort(nums);\n        if (nums[n - 1] < 0) {\n            return nums[n - 1];\n        }\n        Set<Integer> set = new HashSet<>();\n        for (int x : nums) {\n            set.add(x);\n        }\n        int res = 0;\n        for (int x : set) {\n            if (x > 0) {\n                res += x;\n            }\n        }\n        return res;\n    }\n}","author":"sunsq","submissionId":"1575089362"},[]]},{"1232":[{"id":"1232","fileName":"1575089407.txt","sourceCode":"class Solution\n{\n    public:\n    int maxSum(vector<int>& nums)\n    {\n        int const n = nums.size();\n        int ans = *max_element(nums.begin(), nums.end()); // if all negative\n        for (int i = 0; i <= n - 1; i++)\n        {\n            unordered_set<int> vals;\n            for (int j = i; j <= n - 1; j++)\n            {\n                if (nums[j] > 0) vals.insert(nums[j]);\n\n                int curr = 0;\n                for (int x : vals) curr += x;\n                if (vals.size()) ans = max(ans, curr);\n            }\n        }\n        \n        \n        return ans;\n    }\n};","author":"lakkshyag","submissionId":"1575089407"},[]]},{"1233":[{"id":"1233","fileName":"1575089395.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size(),max1=INT_MIN,sum=0;\n        map<int,int>m;\n        for(int i=0;i<n;i++){\n            m[nums[i]]++;\n            max1=max(max1,nums[i]);\n        }\n        if(max1<=0)return max1;\n        for(auto z:m){\n            if(z.first>0)sum+=z.first;\n        }\n        return sum;\n    }\n};","author":"giridhar123456","submissionId":"1575089395"},[]]},{"1234":[{"id":"1234","fileName":"1575089398.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = sorted(nums, reverse = True)\n        result = nums [0]\n        # prev = -inf\n        for i in range (1, len(nums)):\n            if nums[i] > 0 and nums[i] != nums[i-1]:\n                result += nums[i]\n        return result  ","author":"lidiawu","submissionId":"1575089398"},[]]},{"1235":[{"id":"1235","fileName":"1575089412.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n       sort(nums.begin(),nums.end(),greater<int>());\n        int sum = nums[0];\n        set<int> s;\n        s.insert(nums[0]);\n        for(int i=1;i<nums.size();i++){\n            if(nums[i]>0 && s.find(nums[i]) == s.end())\n                sum+=nums[i],s.insert(nums[i]);\n            if(nums[i]<0)\n                break;\n        }\n        return sum;\n       \n        \n    }\n};","author":"anukul7060","submissionId":"1575089412"},[]]},{"1240":[{"id":"1240","fileName":"611225106.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) < 0:\n            return max(nums)\n        else:\n            return sum(set(num for num in nums if num >= 0))","author":"sishenzhimu","submissionId":"611225106"},[]]},{"1241":[{"id":"1241","fileName":"611225110.txt","sourceCode":"from typing import *\n\n\nclass Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0:\n            return max(nums)\n        s = set(nums)\n        return sum(si for si in s if si >= 0)\n","author":"PyIsBestLang","submissionId":"611225110"},[]]},{"1245":[{"id":"1245","fileName":"611225166.txt","sourceCode":"from typing import List\n\n\nclass Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0:\n            return max(nums)\n        return sum(num for num in set(nums) if num > 0)","author":"细菌小子","submissionId":"611225166"},[]]},{"1246":[{"id":"1246","fileName":"611225266.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = sorted(set(nums), reverse=True)\n        while len(nums) > 1 and nums[-1] < 0:\n            nums.pop()\n        return sum(nums)\n        ","author":"Admiring ShockleyZns","submissionId":"611225266"},[]]},{"1247":[{"id":"1247","fileName":"611225237.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        bool ok=false;\n        for(int val:nums)\n            {\n                s.insert(val);\n                if(val>=0) ok=true;\n            }\n        if(!ok){\n            return *(--s.end());\n        }\n        int ans=0;\n        for(int val:s)\n                if(val>0) ans+=val;\n        return ans;\n    }\n};","author":"TangJing","submissionId":"611225237"},[]]},{"1252":[{"id":"1252","fileName":"611225294.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        r  =0\n        x  =0\n        for v in nums:\n            if v in s: continue\n            s.add(v)\n            if v>=0:\n                x = 1\n                r+=v\n        if x==0: return max(s)\n        return r\n        ","author":"82年的muggle","submissionId":"611225294"},[]]},{"1254":[{"id":"1254","fileName":"611225281.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        c = Counter(nums)\n        y = [i for i, j in c.items() if i >= 0]\n        if len(y) == 0:\n            y = [i for i, j in c.items() if i < 0]\n            return max(y)\n        return sum(y)\n        ","author":"iofu728","submissionId":"611225281"},[]]},{"1257":[{"id":"1257","fileName":"611225333.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0:\n            return max(nums)\n        nums = list(set(nums))\n        return sum(x for x in nums if x > 0)","author":"沐浴阳光","submissionId":"611225333"},[]]},{"1259":[{"id":"1259","fileName":"611225354.txt","sourceCode":"class Solution {\npublic:\n    int len;\n    int maxSum(vector<int>& nums) {\n        len=nums.size();\n        sort(nums.begin(),nums.end());\n        if(nums[len-1]<=0) return nums[len-1];\n        int i,j,k;\n        int ans=0;\n        for(i=0;i<len;i++)\n        {\n            if(i&&nums[i]==nums[i-1]) continue;\n            if(nums[i]>0) ans+=nums[i];\n        }\n        return ans;\n    }\n};","author":"野望","submissionId":"611225354"},[]]},{"1261":[{"id":"1261","fileName":"611225336.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        mx = float(\"-inf\")\n        res = 0\n        s = set()\n        for i in nums:\n            if i >= 0 and i not in s:\n                s.add(i)\n            if i < 0:\n                mx = max(mx, i)\n        if s: return sum(s)\n        return mx","author":"丁飞","submissionId":"611225336"},[]]},{"1263":[{"id":"1263","fileName":"611225406.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        l = list(filter(lambda x: x > 0, set(nums)))\n        if not l:\n            return max(nums)\n        return sum(l)","author":"Sad FaradayTFr","submissionId":"611225406"},[]]},{"1265":[{"id":"1265","fileName":"611225441.txt","sourceCode":"from typing import List\n\n\nclass Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort(reverse=True)\n        ans = nums[0]\n        for i in range(1, len(nums)):\n            if nums[i] == nums[i-1]:\n                continue\n            ans += max(nums[i],0)\n        return ans\n","author":"西山对寂寥","submissionId":"611225441"},[]]},{"1266":[{"id":"1266","fileName":"611225407.txt","sourceCode":"#include<bits/stdc++.h>\n// #pragma GCC optimize(\"Ofast,no-stack-protector,fast-math\",3)\n#define cln cerr<<\"Line:   \"<<__LINE__<<\"    \"\n#define pct __builtin_popcountll\n#define ctz __builtin_ctzll\n#define mkp make_pair\n#define MST(x) memset(x,0,sizeof(x))\n#define all(x) x.begin(),x.end()\nusing namespace std;\nconstexpr int N=(1<<21)+100,_g=3,M1=1e9+7,M2=1e9+9,M=M1;\nusing ll=long long;\nnamespace fast_io{\n    char buf[N+10],*p1,*p2,c;\n#define gc (p1==p2&&(p2=(p1=buf)+fread(buf,1,N,stdin),p1==p2))?EOF:*p1++\ntemplate<typename _Tp>\n    void read(_Tp &x){\n        int f=0;for(c=gc;c<48;c=gc)f^=c=='-';\n        for(x=0;c>47;x=(x<<1)+(x<<3)+(48^c),c=gc);\n        if(f)x=-x;\n    }\ntemplate<typename _Tp,typename..._tps>\n    void read(_Tp &x,_tps&...y){read(x),read(y...);}\n    char ob[N+100],stk[505];int tp,ot;\n    void fls(){fwrite(ob,1,ot,stdout),ot=0;}\n    int cntt;\ntemplate<typename _Tp>\n    static inline void write(_Tp x,char c){\n        if(!cntt)atexit(fls),cntt=1;\n        while(x>9)stk[++tp]=48^(x%10),x/=10;\n        for(ob[ot++]=48^x;tp;ob[ot++]=stk[tp--]);\n        ob[ot++]=c;if(ot>N)fls();\n    }\n}using fast_io::read;\nusing fast_io::write;\n#define pli pair<ll,int>\n#define pii pair<int,int>\nusing ul=unsigned long long;\ntemplate<typename tp1,typename tp2>\n    void ckmx(tp1 &x,const tp2 &y){if(x<y)x=y;}\ntemplate<typename tp1,typename tp2>\n    void ckmn(tp1 &x,const tp2 &y){x>y?x=y:0;}\nvoid add(int &x,int y){(x+=y)>=M?x-=M:0;}\nvoid del(int &x,int y){(x-=y)<0?x+=M:0;}\nvoid add(int &x,ul y,int z){x=(y*z+x)%M;}\nvoid del(int &x,ul y,int z){(x-=y*z%M)<0&&(x+=M);}\nconstexpr int qp(ll a,ll x=M-2){\n    int res=1;for(;x;x>>=1,a=a*a%M)\n        (x&1)&&(res=a*res%M);return res;\n}\nconstexpr int qp(ll a,ll x,int M){\n    int res=1;for(;x;x>>=1,a=a*a%M)\n        (x&1)&&(res=a*res%M);return res;\n}\nstruct NTP{};\ntemplate<typename tp1,typename tp2,int N>\nstruct Htb{\n    static constexpr int M=1e7+19;\n    int hd[M+3],to[N],ct;\n    tp1 ed[N];tp2 w[N];\n    static int hc(ul v){\n        v^=v<<13,v^=v>>7;\n        return (v^(v<<17))%M;\n    }\n    void ins(tp1 x,tp2 y){\n        int &p=hd[hc(x)];\n        ed[++ct]=x,to[ct]=p;\n        w[p=ct]=y;\n    }\n    int count(tp1 x){\n        for(int i=hd[hc(x)];i;i=to[i])\n            if(ed[i]==x)return 1;\n        return 0;\n    }\n    pair<tp2,bool>find(tp1 x){\n        for(int i=hd[hc(x)];i;i=to[i])\n            if(ed[i]==x)return mkp(w[i],true);\n        return mkp(tp2(),false);\n    }\n    int operator[](tp1 x){\n        int &p=hd[hc(x)];\n        for(int i=p;i;i=to[i])\n            if(ed[i]==x)return i;\n        ed[++ct]=x,to[ct]=p;\n        return p=ct;\n    }\n    void clear(){while(ct)hd[hc(ed[ct--])]=0;}\n};\nnamespace MATH{\n    vector<int>jc,nv,_nv;\n    int dv2(int x){return x&1?x+M>>1:x>>1;}\n    int C(int n,int m){\n        assert(m<=n);\n        return 1ll*jc[n]*nv[m]%M*nv[n-m]%M;\n    }\n    int P(int n,int m){\n        return 1ll*jc[n]*nv[n-m]%M;\n    }\n    int D(int n,int m){\n        if(n<0||m<0)return 0;\n        if(!n)return 1;\n        if(!m)return 0;\n        return C(n+m-1,m-1);\n    }\n    void init(int n){\n        int x;\n        jc.resize(n+2);\n        jc[0]=jc[1]=1;\n        nv=_nv=jc;\n        for(x=2;x<=n;++x){\n            jc[x]=1ll*x*jc[x-1]%M;\n            _nv[x]=ll(M-M/x)*_nv[M%x]%M;\n            nv[x]=1ll*nv[x-1]*_nv[x]%M;\n        }\n    }\n}\nstruct DET{\n    int a[3005][3005],n;\n    int run(){\n        if(!n)return 1;\n        int x,y,z,k,res=1;\n        for(x=1;x<=n;++x){\n            for(y=x;y<=n&&!a[y][x];++y);\n            if(y>n)return 0;\n            if(y>x){\n                for(k=1;k<=n;++k)swap(a[x][k],a[y][k]);\n                res&&(res=M-res); \n            }\n            k=qp(a[x][x]);\n            res=1ll*res*a[x][x]%M;\n            for(z=1;z<=n;++z)\n                a[x][z]=1ll*a[x][z]*k%M;\n            for(y=1;y<=n;++y)\n                if(x!=y){\n                    k=a[y][x];\n                    for(z=1;z<=n;++z)\n                        del(a[y][z],a[x][z],k);\n                }\n        }\n        for(x=1;x<=n;++x)\n            res=1ll*res*a[x][x]%M;\n        return res;\n    }\n}det;\nll Gcd(ll x,ll y){\n    if(!x||!y)return x|y;\n    int k=min(ctz(x),ctz(y));\n    ll d;y>>=ctz(y);\n    while(x){\n        x>>=ctz(x),d=x-y;\n        if(x<y)y=x;\n        if(d<0)x=-d;\n        else x=d;\n    }return y<<k;\n}\nusing ll=long long;\nusing ul=unsigned long long;\nconstexpr int bceil(int n){return 1<<(std::__lg(n-1)+1);}\ntemplate<int mod>struct NTT{\n    constexpr int dil(int x){return x>>31?x+mod:x;}\n    constexpr int mul(ul x,int y){return x*y%mod;}\n    constexpr int qpow(int a,int b,int r=1){for(;b;a=mul(a,a),b>>=1){r=b&1?mul(r,a):r;}return r;}\n    int w[N>>1],wI[N>>1];\n    void init(int n){\n        int l=bceil(n)>>1;w[0]=wI[0]=1;\n        for(int i=1;i<l;i<<=1){w[i]=qpow(_g,((mod-1)>>2)/i),wI[i]=qpow(_g,mod-1-((mod-1)>>2)/i);}\n        for(int i=1;i<l;++i){w[i]=mul(w[i&(i-1)],w[i&-i]),wI[i]=mul(wI[i&(i-1)],wI[i&-i]);}\n    }\n    void dif(int *f,int lim){\n        for(int l=lim>>1,r=lim;l;l>>=1,r>>=1)\n            for(int*j=f,*o=w;j!=f+lim;j+=r,++o)\n                for(int*k=j,x,y;k!=j+l;++k)\n                    (x=*k)>=mod&&(x-=mod),y=mul(k[l],*o),*k=x+y,k[l]=x-y+mod;\n    }\n    void dit(int *f,int lim){\n        for(int l=1,r=2;l<lim;l<<=1,r<<=1)\n            for(int*j=f,*o=wI;j!=f+lim;j+=r,++o)\n                for(int*k=j,x,y;k!=j+l;++k)\n                    x=*k,y=mod-k[l],(*k=x-y)<0&&(*k+=mod),k[l]=mul(x+y,*o);\n        for(int i=0,p=mod-(mod-1)/lim;i<lim;++i)f[i]=1ll*f[i]*p%mod;\n    }\n    void mul(int *f,int *g,int n){\n        dif(f,n),dif(g,n);\n        for(int i=0;i<n;++i)f[i]=1ll*f[i]*g[i]%M;\n        dit(f,n);\n    }\n    void mul(int *f,int n){\n        dif(f,n);int i;\n        for(i=0;i<n;++i)f[i]=1ll*f[i]*f[i]%M;\n        dit(f,n);\n    }\n};\nNTT<M>ntt;\nusing namespace MATH;\nmt19937_64 rg(random_device{}());\nusing LL=__int128_t;\nusing vt=vector<int>;\nusing vl=vector<ll>;\nusing ld=double;\nconst ll INF=1e18;\nint T,n,m,a[N],b[N];\n// int main(){\n//     ios::sync_with_stdio(false),cin.tie(0);\n//     int i,j,k,l,r,x,y,z;\n//     return 0;\n// }\nvoid rmn(){\n    int i,j,k,l,r,x,y,z;\n    return;\n}\nclass Solution {\n    public:\n        int maxSum(vector<int>& a) {\n            int r=*max_element(all(a));\n            if(r<=0)return r;\n            m=0;\n            for(int p:a)if(p>=0)b[++m]=p;\n            sort(b+1,b+m+1);\n            int i;\n            for(i=1,r=0;i<=m;++i)if(b[i]>b[i-1])r+=b[i];\n            return r;\n        }\n    };","author":"EnofTaiPeople","submissionId":"611225407"},[]]},{"1269":[{"id":"1269","fileName":"611225458.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n                Arrays.sort(nums);\n        if(nums[nums.length-1]<=0){\n            return nums[nums.length-1];\n        }\n        int res=0;\n        for(int i=nums.length-1;i>=0;i--){\n            if(nums[i]<=0){\n                break;\n            }\n            if(i==nums.length-1||nums[i]!=nums[i+1]){\n                res+=nums[i];\n            }\n        }\n        return res;\n    }\n}","author":"ReZero","submissionId":"611225458"},[{"id":"1882","similarity":0.7101449275362319,"totOverlap":49,"longestOverlap":11}]],"1882":[{"id":"1882","fileName":"611266446.txt","sourceCode":"import java.util.Arrays;\n\nclass Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int ans = 0;\n        for (int i = nums.length - 1; i >= 0; i--) {\n        \tif (i != nums.length - 1 && nums[i] < 0) {\n        \t\tbreak;\n        \t}\n        \tif (i == nums.length - 1 || nums[i] != nums[i+1]) {\n        \t\tans += nums[i];\n        \t}\n        }\n        return ans;\n    }\n}","author":"成长- 追梦","submissionId":"611266446"},[{"id":"1269","similarity":0.7101449275362319,"totOverlap":49,"longestOverlap":11}]]},{"1270":[{"id":"1270","fileName":"611225410.txt","sourceCode":"using namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<double> vd;\ntypedef vector<string> vs;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef vector<vvll> vvvll;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef vector<pll> vpll;\ntypedef vector<vpll> vvpll;\ntypedef vector<pdd> vpdd;\ntypedef vector<vd> vvd;\n#define yn(ans) printf(\"%sn\", (ans)?\"Yes\":\"No\");\n#define YN(ans) printf(\"%sn\", (ans)?\"YES\":\"NO\");\ntemplate<class T> bool chmax(T &a, T b) {\n\tif (a >= b) return false;\n\ta = b; return true;\n}\ntemplate<class T> bool chmin(T &a, T b) {\n\tif (a <= b) return false;\n\ta = b; return true;\n}\n#define FOR(i, s, e, t) for ((i) = (s); (i) < (e); (i) += (t)) \n#define REP(i, e) for (int i = 0; i < (e); ++i) \n#define REP1(i, s, e) for (int i = (s); i < (e); ++i)\n#define RREP(i, e) for (int i = (e); i >= 0; --i)\n#define RREP1(i, e, s) for (int i = (e); i >= (s); --i)\n#define all(v) v.begin(), v.end()\n#define pb push_back\n#define qb pop_back\n#define pf push_front\n#define qf pop_front\n#define maxe max_element\n#define mine min_element\nll inf = 1e18;\n#define DEBUG printf(\"%dn\", __LINE__); fflush(stdout);\ntemplate<class T> void print(vector<T> &v, bool withSize = false) {\n\tif (withSize) cout << v.size() << endl;\n\tREP(i, v.size()) cout << v[i] << \" \"; \n\tcout << endl;\n}\nmt19937_64 rng((unsigned int) chrono::steady_clock::now().time_since_epoch().count());\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for (auto c: nums) s.insert(c);\n        int ans = 0;\n        for (auto c: s) if (c >= 0) ans += c;\n        if (*s.rbegin() < 0) return *s.rbegin();\n        return ans;\n    }\n};","author":"Relaxed Visvesvaraya","submissionId":"611225410"},[]]},{"1271":[{"id":"1271","fileName":"611225485.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        d = set()\n        ans = 0\n        for i in nums:\n            if i>0 and i not in d:\n                d.add(i)\n                ans += i\n        \n        if not d:\n            return max(nums)\n        else:\n            return ans","author":"aIkNVYH3CJ","submissionId":"611225485"},[]]},{"1281":[{"id":"1281","fileName":"611225358.txt","sourceCode":"import java.util.*;\n\nclass Solution extends U {\n\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int n = nums.length;\n        if (nums[n - 1] <= 0) {\n            return nums[n - 1];\n        }\n        HashSet<Integer> set = new HashSet<>();\n        for (int i : nums) {\n            if (i > 0) {\n                set.add(i);\n            }\n        }\n        int ans = 0;\n        for (int i : set) {\n            ans += i;\n        }\n        return ans;\n    }\n\n}\n\nclass U {                                                                                                                                                                                                                WU out=new WU();class WU{private java.io.OutputStream out=System.out;WU print(byte b){try{out.write(b);}catch(Exception e){}return this;}WU print(char c){return print((byte)c);}WU print(int x){return print(String.valueOf(x));}WU print(long x){return print(String.valueOf(x));}WU print(double x){return print(String.valueOf(x));}WU print(String s){for(int i=0;i<s.length();i++)print((byte)s.codePointAt(i));return this;}void writeln(){print((byte)'n');}void println(byte b){print(b).writeln();}void println(char c){print(c).writeln();}void println(int x){print(x).writeln();}void println(long x){print(x).writeln();}void println(double x){print(x).writeln();}void println(String s){print(s).writeln();}void println(Object o){deepPrint(o,true);}private void deepPrint(Object o,boolean f){if(o==null){print(f?\"nulln\":\"null\");return;}Class<?>c=o.getClass();if(c.isArray()){if(o instanceof Object[]){Object[]t=(Object[])o;int n=t.length;boolean b=f&&n>0&&t[0]!=null;print(b?\"[n\":\"[\");for(int i=0;i<n;i++){deepPrint(t[i],false);if(i<n-1)print(b?\", n\":\", \");else if(b)writeln();}print(\"]\");}else{print(o instanceof byte[]?Arrays.toString((byte[])o):o instanceof short[]?Arrays.toString((short[])o):o instanceof int[]?Arrays.toString((int[])o):o instanceof long[]?Arrays.toString((long[])o):o instanceof char[]?Arrays.toString((char[])o):o instanceof float[]?Arrays.toString((float[])o):o instanceof double[]?Arrays.toString((double[])o):Arrays.toString((boolean[])o));}}else if(o instanceof Collection){Collection<?>t=(Collection<?>)o;print(\"[\");int i=0;for(Object v:t){deepPrint(v,false);if(i<t.size()-1)print(\", \");i++;}print(\"]\");}else if(o instanceof Map){Map<?,?>t=(Map<?,?>)o;print(!t.isEmpty()&&f?\"{n\":\"{\");int i=0;for(Map.Entry<?,?>v:t.entrySet()){deepPrint(v.getKey(),false);print(\" = \");deepPrint(v.getValue(),false);if(++i<t.size())print(f?\", n\":\", \");else if(f)writeln();}print(\"}\");}else{print(o.toString());}if(f)writeln();}}int min(int a,int b){return a>b?b:a;}int min(int...args){int ans=Integer.MAX_VALUE;for(int v:args)if(ans>v)ans=v;return ans;}long min(long a,long b){return a>b?b:a;}long min(long...args){long ans=Long.MAX_VALUE;for(long v:args)if(ans>v)ans=v;return ans;}double min(double a,double b){return a>b?b:a;}double min(double...args){double ans=Double.MAX_VALUE;for(double v:args)if(ans>v)ans=v;return ans;}int max(int a,int b){return a<b?b:a;}int max(int...args){int ans=Integer.MIN_VALUE;for(int v:args)if(ans<v)ans=v;return ans;}long max(long a,long b){return a<b?b:a;}long max(long...args){long ans=Long.MIN_VALUE;for(long v:args)if(ans<v)ans=v;return ans;}double max(double a,double b){return a<b?b:a;}double max(double...args){double ans=Double.MIN_VALUE;for(double v:args)if(ans<v)ans=v;return ans;}int abs(int a){return a<0?-a:a;}long abs(long a){return a<0?-a:a;}double abs(double a){return a<0?-a:a;}\n}","author":"lyongwolf","submissionId":"611225358"},[]]},{"1284":[{"id":"1284","fileName":"611225568.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        \"\"\"\n            负数全删，如果全为负数，剩一个最大的\n        \"\"\"\n        mx = max(nums)\n        if mx <= 0:\n            return mx \n        st = set()\n        for x in nums:\n            if x > 0:\n                st.add(x)\n        return sum(st)","author":"重生之我要上瓜","submissionId":"611225568"},[]]},{"1286":[{"id":"1286","fileName":"611225571.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        bool ok=0;\n        for(int q:nums){\n            s.insert(q);\n            if(q>=0){\n                ok=1;\n            }\n        }        \n        if(!ok){\n            int r=INT_MIN;\n            for(int q:nums){\n                r=max(r,q);\n            }\n            return r;\n        }\n        int res=0;\n        for(int q:s){\n            if(q>=0){\n                res+=q;\n            }\n        }\n        return res;\n    }\n};","author":"w285714","submissionId":"611225571"},[]]},{"1290":[{"id":"1290","fileName":"611225578.txt","sourceCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSum = function(nums) {\n    return nums.every(u=>u<0)?Math.max(...nums):[...new Set(nums.filter(u=>u>=0))].reduce((a,b)=>a+b,0);\n};","author":"wangzi","submissionId":"611225578"},[]]},{"1296":[{"id":"1296","fileName":"611225617.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        mp={}\n        res=0\n        a=0\n        nums.sort()\n        for x in nums:\n            if x>0 and x not in mp:\n                mp[x]=True\n                res+=x\n                a+=1\n        if a==0:res+=nums[-1]\n        return res","author":"郑涵予","submissionId":"611225617"},[]]},{"1297":[{"id":"1297","fileName":"611225614.txt","sourceCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSum = function(nums) {\n    nums = [...new Set(nums)].sort((a, b) => b - a)\n    let ans = nums[0]\n    for (let i = 1; i < nums.length; i += 1) {\n        if (nums[i] <= 0) break\n        ans += nums[i]\n    }\n    return ans\n};","author":"capybara","submissionId":"611225614"},[]]},{"1298":[{"id":"1298","fileName":"611225631.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort(reverse=True)\n        ans = nums[0]\n        for i in range(1, len(nums)):\n            if nums[i] != nums[i-1] and nums[i] > 0:\n                ans += nums[i]\n        return ans","author":"叶刃","submissionId":"611225631"},[]]},{"1301":[{"id":"1301","fileName":"611225630.txt","sourceCode":"use std::collections::HashSet;\n\nimpl Solution {\n    pub fn max_sum(nums: Vec<i32>) -> i32 {\n        let mut unique_nums = HashSet::new();\n        let mut sum = 0;\n        let mut max_non_positive = i32::MIN;\n        for &num in &nums {\n            if num > 0 {\n                if unique_nums.insert(num) {\n                    sum += num;\n                }\n            } else {\n                max_non_positive = max_non_positive.max(num);\n            }\n        }\n        if sum == 0 {\n            max_non_positive\n        } else {\n            sum\n        }\n    }\n}","author":"weiqizheng","submissionId":"611225630"},[]]},{"1302":[{"id":"1302","fileName":"611225634.txt","sourceCode":"#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define ull unsigned long long int\n#define db double\n#define ldb long double\n#define int128 __int128_t\n#define fr(x) freopen(x,\"r\",stdin);\n#define fw(x) freopen(x,\"w\",stdout);\n#define mst(x,a) memset(x,a,sizeof(x));\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define fi first\n#define se second\n#define IOS ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define yes std::cout << \"Yesn\"\n#define no std::cout << \"Non\"\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define rrep(i,n) for(int i=(int)(n)-1;i>=0;i--)\n#ifdef LOCAL\n#include \"leetcode.h\"\n#endif // LOCAL\ntemplate <typename T> int si(const T &x) { return x.size(); }\ntemplate <typename T, typename S> inline bool chmax(T &a, const S &b) { if (a < b) { a = b; return true; } return false; }\ntemplate <typename T, typename S> inline bool chmin(T &a, const S &b) { if (b < a) { a = b; return true; } return false; }\nconst int mod = 1000000007;\nconst int inf = 0x3f3f3f3f;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n      int n = si(nums);\n      set<int> st;\n      int t = -inf;\n      for (int x : nums) {\n        if (x > 0) st.insert(x);\n        else chmax(t, x);\n      }\n      int ans = 0;\n      for (int x : st) {\n        ans += x;\n      }\n      if (si(st) == 0) return t;\n      return ans;\n    }\n};","author":"gcasd001","submissionId":"611225634"},[]]},{"1303":[{"id":"1303","fileName":"611225659.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        x = -inf\n        \n        for num in nums:\n            if num >= 0:\n                s.add(num)\n            else:\n                x = max(x, num)\n        \n        return sum(s) if s else x\n","author":"...","submissionId":"611225659"},[]]},{"1304":[{"id":"1304","fileName":"611225645.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        set<int> s;\n        bool isOk = false;\n        for (auto i : nums) {\n            if (s.find(i) == s.end() && i > 0) {\n                isOk = true;\n                s.insert(i);\n                sum += i;\n            }\n        }\n        if (!isOk) {\n            sum = INT_MIN;\n            for (auto i : nums) sum = max(sum, i);\n        }\n        return sum;\n    }\n};","author":"漆黑之牙约修亚","submissionId":"611225645"},[]]},{"1305":[{"id":"1305","fileName":"611225663.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        st = sorted(set(nums))\n        ans = 0 \n        pre = -inf\n        for x in st:\n            if x > 0:\n                ans += x\n            elif x <= 0:\n                pre = max(pre, x)\n        return ans if ans > 0 else pre","author":"Upbeat ShamirgfO","submissionId":"611225663"},[]]},{"1306":[{"id":"1306","fileName":"611225688.txt","sourceCode":"bool visited[102];\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mx = nums[0];\n        int n = nums.size();\n        memset(visited,0,sizeof(visited));\n        int sum = 0;\n        for(int i=0;i<n;++i){\n            mx = max(mx, nums[i]);\n            if(nums[i] > 0){\n                if(!visited[nums[i]]){\n                    visited[nums[i]] = true;\n                    sum += nums[i];\n                }\n            }\n        }\n        if(mx < 0)return mx; else return sum;\n    }\n};","author":"Milesian","submissionId":"611225688"},[]]},{"1308":[{"id":"1308","fileName":"611225694.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max = -100000;\n        Set<Integer> set = new HashSet<>();\n        for(int i : nums) {\n            if(i > 0) {\n                set.add(i);\n            }\n            max = Math.max(max, i);\n        }\n        int ans = 0;\n        for(int s : set) {\n            ans += s;\n        }\n        return set.size() == 0 ? max : ans;\n    }\n}","author":"朝花夕拾","submissionId":"611225694"},[]]},{"1309":[{"id":"1309","fileName":"611225720.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        unordered_map<int,int> hash;\n        int ans=0;\n        int the_max=INT_MIN;\n        for (int i=0;i<n;i++){\n            int x=nums[i];\n            the_max=max(the_max,x);\n            if (x>0&&!hash.count(x)){\n                ans+=x;\n            }\n            hash[x]++;\n        }\n        if (ans==0) return the_max;\n        return ans;\n    }\n};","author":"Edward","submissionId":"611225720"},[]]},{"1310":[{"id":"1310","fileName":"611225706.txt","sourceCode":"#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define maxn (int)(1e6 + 10)\n#define IOS ios::sync_with_stdio(0);\n#define FFF freopen(\"out\", \"w\", stdout);\n\nclass Solution {\npublic:\n    int maxSum(vector<int> &nums) {\n        int maxx = -(1<<29);\n        for (auto x: nums) {\n            maxx = max(maxx, x);\n        }\n        if (maxx < 0) {\n            return maxx;\n        }\n        int ans =0 ;\n        set<int> st;\n        for (auto x: nums) {\n            if (x > 0 && st.find(x) == st.end()) {\n                ans += x;\n                st.insert(x);\n            }\n        }\n        return ans;\n    }\n};","author":"dydy","submissionId":"611225706"},[]]},{"175":[{"id":"175","fileName":"1575081147.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        nums.sort(reverse=True)\n        if nums[0] <= 0:\n            return nums[0]\n        \n        res = 0\n        for n in nums:\n            if n > 0:\n                res += n\n        return res\n        ","author":"lichuan199010","submissionId":"1575081147"},[{"id":"175","similarity":0.8292682926829268,"totOverlap":34,"longestOverlap":11}]],"1312":[{"id":"1312","fileName":"611225724.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        nums.sort()\n        if nums[-1] <= 0:\n            return nums[-1]\n        ans = 0\n        for x in nums:\n            if x > 0:\n                ans += x\n        return ans","author":"TonyDon","submissionId":"611225724"},[{"id":"1401","similarity":1.0,"totOverlap":40,"longestOverlap":20},{"id":"1867","similarity":1.0,"totOverlap":40,"longestOverlap":20},{"id":"1312","similarity":0.8292682926829268,"totOverlap":34,"longestOverlap":11}]],"1401":[{"id":"1401","fileName":"611226300.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        nums.sort()\n        if nums[-1] <= 0:\n            return nums[-1]\n        ans = 0\n        for i in nums:\n            if i > 0:\n                ans += i\n        return ans\n        ","author":"yyyying","submissionId":"611226300"},[{"id":"1312","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"1867":[{"id":"1867","fileName":"611251435.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        nums.sort()\n\n        if nums[-1] < 0:\n            return nums[-1]\n\n        res = 0\n        for num in nums:\n            if num > 0:\n                res += num\n        return res\n            \n            \n        ","author":"mipha","submissionId":"611251435"},[{"id":"1312","similarity":1.0,"totOverlap":40,"longestOverlap":20}]]},{"1315":[{"id":"1315","fileName":"611225764.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> mp;\n        int ans= 0;\n        int f = 0;\n        int mx = -101;\n        for(auto &x:nums){\n            mx = max(mx,x);\n            if(mp[x]||x<=0) continue;\n            mp[x] = 1;\n            ans+=x;\n            f = 1;\n        }\n        if(!f) return mx;\n        return ans;\n    }\n};","author":"ascend","submissionId":"611225764"},[]]},{"1317":[{"id":"1317","fileName":"611225774.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums=list(set(nums))\n        nums.sort()\n        res=nums[-1]\n        if nums[-1]<0:\n            return res\n        t=0\n        for x in nums:\n            if x>=0:\n                t+=x\n        return t","author":"krism","submissionId":"611225774"},[]]},{"1318":[{"id":"1318","fileName":"611225768.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(num <= 0 for num in nums):\n            return max(nums)\n        nums = [num for num in nums if num > 0]\n        return sum(set(nums))","author":"ikun","submissionId":"611225768"},[]]},{"1319":[{"id":"1319","fileName":"611225789.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        std::unordered_set<int> s;\n        for (int x : nums) {\n            if (x >= 0) {\n                s.insert(x);\n            }\n        }\n        if (s.empty()) {\n            return ranges::max(nums);\n        }\n        int ret = 0;\n        for (int x : s) {\n            ret += x;\n        }\n        return ret;\n    }\n};","author":"D_D","submissionId":"611225789"},[]]},{"1327":[{"id":"1327","fileName":"611225837.txt","sourceCode":"class Solution {\npublic:\nint maxSum(vector<int>& nums) {\n    map<int,int>help;\n    for(auto v:nums)help[v]++;\n    int res=help.rbegin()->first;\n    help.erase(res);\n    for(auto v:help){\n        if(v.first>0)res+=v.first;\n    }\n    return res;\n}\n\n};","author":"light","submissionId":"611225837"},[]]},{"1328":[{"id":"1328","fileName":"611225832.txt","sourceCode":"class Solution {\n    fun maxSum(nums: IntArray): Int {\n        val set = nums.toSet()\n        var res = 0\n        var find = false \n        set.forEach { if (it >= 0) {\n            res += it\n            find = true\n        } }\n        if (!find) return nums.max()\n        return res\n    }\n}","author":"兴禾","submissionId":"611225832"},[]]},{"1330":[{"id":"1330","fileName":"611225862.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int> m;\n        int res=INT_MIN;\n        for(auto x:nums){\n            if(!m[x]){\n                m[x]=1;\n                if(res>=0)\n                res+=max(0,x);\n                else\n                res=max(res,x);\n            }\n        }\n        return res;\n    }\n};","author":"Bold NoyceaZ0","submissionId":"611225862"},[]]},{"1331":[{"id":"1331","fileName":"611225847.txt","sourceCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSum = function (nums) {\n  let arr = [...new Set(nums)]\n\n  const filtersArr = arr.filter(v => v >= 0)\n\n  if (filtersArr.length === 0) {\n    return Math.max(...arr)\n  }\n\n  return arr.reduce((a, c) => a + Math.max(c, 0), 0)\n\n  \n};\n","author":"lihaoze","submissionId":"611225847"},[]]},{"1333":[{"id":"1333","fileName":"611225868.txt","sourceCode":"import string\nfrom sortedcontainers import SortedList\nfrom collections import defaultdict, deque, Counter\nfrom bisect import bisect_left, bisect_right\nfrom typing import List, Set, Tuple, Optional\nfrom itertools import pairwise, permutations, combinations, groupby\nfrom heapq import heappush, heappop\nfrom random import shuffle\nfrom functools import cmp_to_key, lru_cache\nfrom fractions import Fraction\nfrom math import gcd, lcm\n\n\nclass Solution:\n    def maxSum(self, a: List[int]) -> int:\n        n = len(a)\n        st = set(a)\n        st = {x for x in st if x > 0}\n        if len(st) == 0:\n            return max(a)\n        else:\n            return sum(st)","author":"Ujimatsu_Chiya","submissionId":"611225868"},[]]},{"1334":[{"id":"1334","fileName":"611225875.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        hash_table = defaultdict(int)\n        ans = 0\n\n        for num in nums:\n            if num > 0:\n                if num not in hash_table:\n                    hash_table[num] = 1\n                    ans += num\n        if not hash_table:\n            ans = max(nums)\n        return ans","author":"怳","submissionId":"611225875"},[]]},{"1337":[{"id":"1337","fileName":"611225849.txt","sourceCode":"//by 72\n#include<bits/stdc++.h>\n#define pii pair<int, int>\n#define F(i, a, b) for(int i = (a); i <= (b); i ++)\n#define Fd(i, a, b) for(int i = (a); i >= (b); i --)\nusing namespace std;\n\ntemplate <typename T1, typename T2>\nostream& operator <<(ostream& out, pair<T1, T2> p) {\n    out << '(' << p.first << \", \" << p.second << ')';\n    return out;\n}\ntemplate <typename T>\nostream& operator <<(ostream& out, vector<T> v) {\n    cout << '[';\n    if (!v.empty()) cout << v[0];\n    for (int i = 1; i < (int)v.size(); i++) cout << \",\" << v[i];\n    cout << ']';\n    return out;\n}\n\ntypedef long long ll;\nconst int mod = 998244353;\nconst int inf = 1e9;\nconst bool test = true;\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        map<int, int> mp;\n        for(auto x : a) mp[x] ++;\n        sort(a.begin(), a.end());\n        if(a.back() < 0) {\n            return a.back();\n        }\n        int res = 0;\n        for(auto [x, y] : mp) if(x >= 0) res += x;\n        return res;\n    }\n};","author":"Nanani","submissionId":"611225849"},[]]},{"1339":[{"id":"1339","fileName":"611225920.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n\n        int n = unique(nums.begin(), nums.end()) - nums.begin();\n        if (nums[n-1] <= 0) return nums[n-1];\n        int ans = 0;\n        for (int i = n-1; i >= 0; --i) {\n            if (nums[i] < 0) break;\n            ans += nums[i];\n        }\n        return ans;\n    }\n};","author":"译言丁真","submissionId":"611225920"},[]]},{"1345":[{"id":"1345","fileName":"611225962.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int[] count = new int[101];\n        int max = -100;\n\n        for(int i : nums){\n            if(i > 0){\n                count[i]++;\n            }\n\n            max = Math.max(max, i);\n        }\n\n        int res = 0;\n        \n\n        for(int i = 0; i <= 100; i++){\n            if(count[i] > 0){\n                res += i;\n            }\n        }\n\n        \n\n        return res > 0 ? res : max;\n    }\n}","author":"KAI FENG XUE","submissionId":"611225962"},[]]},{"1347":[{"id":"1347","fileName":"611225973.txt","sourceCode":"package main\n\nimport \"slices\"\n\nfunc maxSum(nums []int) int {\n\tcnt := map[int]bool{}\n\tsum := 0\n\tfor _, v := range nums {\n\t\tif v > 0 && !cnt[v] {\n\t\t\tsum += v\n\t\t\tcnt[v] = true\n\t\t}\n\t}\n\tif sum == 0 {\n\t\treturn slices.Max(nums)\n\t}\n\treturn sum\n}\n","author":"nullmoon","submissionId":"611225973"},[]]},{"1348":[{"id":"1348","fileName":"611225974.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        l=[]\n        for i in nums:\n            if i>0 and i not in l:\n                l.append(i)\n        if len(l)!=0:\n            return sum(l)\n        else:\n            return max(nums)","author":"Admiring LevvinsqZ","submissionId":"611225974"},[]]},{"1349":[{"id":"1349","fileName":"611225980.txt","sourceCode":"func maxSum(nums []int) int {\n\tmx := slices.Max(nums)\n\tif mx < 0 {\n\t\treturn mx\n\t}\n\n\tans := 0\n\tseen := map[int]bool{}\n\tfor _, x := range nums {\n\t\tif x > 0 && !seen[x] {\n\t\t\tans += x\n\t\t\tseen[x] = true\n\t\t}\n\t}\n\treturn ans\n}","author":"FallenLeaves","submissionId":"611225980"},[]]},{"1350":[{"id":"1350","fileName":"611225979.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s(nums.begin(), nums.end());\n        int ans = 0;\n        ans += *s.rbegin();\n        s.erase(--s.end());\n        while (!s.empty() && 0 < *s.rbegin()) {\n            ans += *s.rbegin();\n            s.erase(--s.end());\n        }\n        return ans;\n    }\n};","author":"Sariabell","submissionId":"611225979"},[]]},{"1351":[{"id":"1351","fileName":"611225999.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n           int n = nums.size();\n    unordered_set<int> s;\n    int ans = 0;\n    for(int i : nums) {\n        if(i >= 0) {\n            s.insert(i);\n        }\n    }\n    if(s.size() == 0) {\n        ans = 0x80000000;\n        for(int i : nums) {\n            ans = max(ans, i);\n        }\n        return ans;\n    }\n    else {\n        for(int i : s) ans += i;\n        return ans;\n    } \n    }\n};","author":"梦见月瑞希","submissionId":"611225999"},[]]},{"1352":[{"id":"1352","fileName":"611225982.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort()\n        if nums[-1] <= 0:\n            return nums[-1]\n        now = 0\n        last = -1\n        while nums and nums[-1]>0:\n            v = nums.pop()\n            if v != last:\n                now += v\n                last = v\n        return now\n        ","author":"大英权相吉姆哈克","submissionId":"611225982"},[]]},{"1353":[{"id":"1353","fileName":"611226017.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        std::sort(nums.begin(), nums.end());\n        int res = nums.back();\n        for (int i = nums.size() - 2; i >= 0; i--) {\n            if (nums[i] != nums[i + 1] && nums[i] > 0) {\n                res += nums[i];\n            }\n        }\n        return res;\n    }\n};","author":"cjy","submissionId":"611226017"},[]]},{"1354":[{"id":"1354","fileName":"611226021.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        cnt = 0\n        cnt_dic = {}\n        max_minus = -999\n        for num in nums:\n            if num < 0:\n                max_minus = max(max_minus, num)\n            elif num in cnt_dic:continue\n            else:\n                cnt +=num\n                cnt_dic[num]=1\n        if len(cnt_dic)>0:\n            return cnt\n        return max_minus\n        ","author":"海澄","submissionId":"611226021"},[]]},{"1355":[{"id":"1355","fileName":"611226013.txt","sourceCode":"func maxSum(nums []int) int {\n\tfreq := map[int]int{}\n\tfor _, x := range nums {\n\t\tfreq[x]++\n\t}\n\tkeys := []int{}\n\tfor k := range freq {\n\t\tkeys = append(keys, k)\n\t}\n\tslices.Sort(keys)\n\tans := 0\n\tans += keys[len(keys)-1]\n\tfor i := len(keys) - 2; i >= 0 && keys[i] >= 0; i-- {\n\t\tans += keys[i]\n\t}\n\treturn ans\n}","author":"逍遥生","submissionId":"611226013"},[]]},{"1356":[{"id":"1356","fileName":"611226003.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = max(nums)\n        if ans < 0:\n            return ans\n        ans = sum(set([i if i > 0 else 0 for i in nums]))\n        return ans","author":"aden1350","submissionId":"611226003"},[]]},{"1357":[{"id":"1357","fileName":"611226029.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int n=nums.size(),ans=nums.back(),pre=ans;\n        for(int i=n-2;i>=0;--i){\n            if(nums[i]<0) break;\n            if(nums[i]==pre) continue;\n            ans+=nums[i];\n            pre=nums[i];\n        }\n        return ans;\n    }\n};","author":"大愚若智","submissionId":"611226029"},[]]},{"1358":[{"id":"1358","fileName":"611226039.txt","sourceCode":"int maxSum(int* nums, int numsSize) {\n    int a[201]={0};\n    for(int i=0;i<numsSize;i++)\n    {\n        a[nums[i]+100]+=1;\n    }\n    int sum=0;\n    for(int i=101;i<=200;i++)\n    {\n        if(a[i]>0) sum+=i-100;\n    }\n    if(sum>0) return sum;\n    for(int i=100;i>=0;i--)\n    {\n        if(a[i]>0) return i-100;\n    }\n    return 0;\n        \n}","author":"Caihw","submissionId":"611226039"},[]]},{"1360":[{"id":"1360","fileName":"611226046.txt","sourceCode":"#pragma region template\n\n#include <iostream>\n#include <string>\n#include <cstring>\n#include <cstdio>\n#include <set>\n#include <map>\n#include <unordered_map>\n#include <cmath>\n#include <queue>\n#include <algorithm>\n#include <array>\n#include <functional>\n#include <cassert>\nusing namespace std;\n\n#define forn(i, n) for(int i = 0; i < (int)(n); i++)\n#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; --i)\n#define forab(i, a, b) for(int i=(a);i<(b);++i)\n#define fore(v, a) for(auto &v: a)\n#define sqr(x) ((x)*(x))\n#define clr(a, b) memset(a, b, sizeof(a))\n#define sz(a) ((int)a.size())\n#define all(a) (a).begin(),(a).end()\n#define fi first\n#define se second\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef map<int,int> mii;\ntypedef map<int,string> mis;\ntypedef map<string,int> msi;\ntemplate <class T> using max_heap = priority_queue<T>;\ntemplate <class T> using min_heap = priority_queue<T, vector<T>, greater<>>;\nconst double eps = 1e-8;\ntemplate <class T> constexpr T inf = numeric_limits<T>::max() / 2;\nint dcmp(double x) { if (x < -eps) return -1; else return x > eps;}\ntemplate <typename T> bool chmax(T &m, const T q) { return m < q ? (m = q, true) : false; }\ntemplate <typename T> bool chmin(T &m, const T q) { return m > q ? (m = q, true) : false; }\nconstexpr pii dx4[4] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};\nconstexpr pii dx8[8] = {{1, 0}, {1, 1}, {0, 1}, {-1, 1}, {-1, 0}, {-1, -1}, {0, -1}, {1, -1}};\ntemplate <class T> using vc = vector<T>;\ntemplate <class T> using vvc = vector<vc<T>>;\ntemplate <class T> using vvvc = vector<vvc<T>>;\n#define minall(v) *min_element(all(v))\n#define maxall(v) *max_element(all(v))\n#define lb(c, x) distance((c).begin(), lower_bound(all(c), (x)))\n#define ub(c, x) distance((c).begin(), upper_bound(all(c), (x)))\n#define unq(x) sort(all(x)), x.erase(unique(all(x)), x.end())\nint popcnt(unsigned int x) { return __builtin_popcount(x); }\nint popcntll(unsigned long long x) { return __builtin_popcountll(x); }\ntemplate <class T, class U> ostream& operator<<(ostream& os, const pair<T, U>& p){ return os<<\"(\"<<p.fi<<\",\"<<p.se<<\")\"; }\nvoid see0(){ cout<<endl; }\ntemplate<class H, class ...T> void see0(H && h, T && ...t) { cout<<h<<\",\"; see0(t...); }\n\n#pragma endregion template\n\n#ifdef CHEN_PC\n#include \"lc-struct.h\"\n#define see(...) {cout<<__LINE__<<\": \"<<#__VA_ARGS__<<\" = \";see0(__VA_ARGS__);}\n#define seev(a) {cout<<__LINE__<<\": \"<<#a<<\" = [\"; fore(v, a)cout<<(v)<<\",\"; cout<<\"]\"<<endl;}\n#else\n#define see(...)\n#define seev(...)\n#endif\n\nconst int N = 30010;\nconst int mod = 1000000007; // 10^9+7\n\nclass Solution {\npublic:\n\tint maxSum(vector<int>& a) {\n\t\tunq(a);\n\t\tint ans = 0;\n\t\tfore (v, a) {\n\t\t\tif (v > 0) ans += v;\n\t\t}\n\t\tif (ans == 0) {\n\t\t\tans = *max_element(all(a));\n\t\t}\n\t\treturn ans;\n\t}\n};","author":"ch365","submissionId":"611226046"},[]]},{"1362":[{"id":"1362","fileName":"611226058.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        int ans=0;\n        if(nums.size()==1) return nums[0];\n        int ma=ranges::max(nums);\n        if(ma<0) return ma;\n        for(auto &a:nums){\n            if(s.find(a)!=s.end()) continue;\n            s.insert(a);\n            if(a<=0) continue;\n            ans+=a;\n        }\n        return ans;\n    }\n};","author":"jillscat","submissionId":"611226058"},[]]},{"1363":[{"id":"1363","fileName":"611226076.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int>s;\n        int mx=-1001;\n        for(int x:nums) mx=max(mx,x);\n        int ans=0,ok=0;\n        for(int x:nums){\n            if(x>0&&!s.count(x)){\n                ans+=x;\n                ok=1;\n                s.insert(x);\n            }\n        }\n        return ok==0?mx:ans;\n    }\n};","author":"hover","submissionId":"611226076"},[]]},{"1364":[{"id":"1364","fileName":"611226052.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = Counter(nums)\n        mid = list(nums.keys())\n        mid.sort(reverse = True)\n        res = mid[0]\n        for k in mid[1:]:\n            if k>0:\n                res += k\n        return res","author":"|_・)","submissionId":"611226052"},[]]},{"1365":[{"id":"1365","fileName":"611226072.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos = set([])\n        maxv = -float('inf')\n        for num in nums:\n            if num > 0:\n                pos.add(num)\n            else:\n                maxv = max(maxv, num)\n        if len(pos) > 0:\n            return sum(pos)\n        else:\n            return maxv","author":"🍪🍪🍪","submissionId":"611226072"},[]]},{"1368":[{"id":"1368","fileName":"611226094.txt","sourceCode":"\nimport java.util.*;\n\n\n\npublic  class Solution{\n\n    public static void main(String[] args) {\n\n        Solution solution = new Solution();\n    }\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int n = nums.length;\n        if(nums[n - 1] < 0) return nums[n - 1];\n        Set<Integer> set = new HashSet<>();\n        for(int t : nums) set.add(t);\n        int ans = 0;\n        for(int t : set) {\n            if(t > 0) ans += t;\n        }\n        return ans;\n    }\n\n}\n","author":"9527","submissionId":"611226094"},[]]},{"1369":[{"id":"1369","fileName":"611226105.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for (int x : nums) {\n            s.insert(x);\n        }\n        int ans = 0;\n        do {\n            ans += (*s.rbegin());\n            s.erase(*s.rbegin());\n        } while (s.size() > 0 && (*s.rbegin()) >= 0);\n        return ans;\n    }\n};","author":"muffin","submissionId":"611226105"},[]]},{"1372":[{"id":"1372","fileName":"611226137.txt","sourceCode":"int maxSum(int* nums, int numsSize) {\n    int hash[105]={0};\n    int res=0;\n    int max=INT_MIN;\n    int flag=0;\n    for(int i=0;i<numsSize;i++)\n        if(nums[i]>=0&&!hash[nums[i]]){hash[nums[i]]=1;res+=nums[i];flag=1;}\n      else max=fmax(max,nums[i]);\n          if(flag)\nreturn res;\n    return max;\n}","author":"别看了我在打游戏","submissionId":"611226137"},[]]},{"1373":[{"id":"1373","fileName":"611226128.txt","sourceCode":"class Solution:\n    def maxSum(self, a: List[int]) -> int:\n        a = sorted(set(a))\n        n = len(a)\n        ans = a[0]\n        for i in range(n):\n            b = set()\n            s = 0\n            for j in range(i, n):\n                b.add(a[j])\n                s += a[j]\n                if len(b) == j - i + 1:\n                    ans = max(ans, s)\n                else:\n                    break\n        return ans\n        ","author":"sfiction","submissionId":"611226128"},[]]},{"1374":[{"id":"1374","fileName":"611226129.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum = 0;\n        unordered_map<int,int> umap;\n        int maxi = INT_MIN;\n        int cnt = 0;\n        for(int num : nums) {\n            maxi = max(maxi, num);\n            if(umap.count(num) || num < 0) continue;\n            umap[num] = 1;\n            sum += num;\n            cnt += 1;\n        }\n        if(cnt == 0) return maxi;\n        return sum;\n    }\n};","author":"Zeet","submissionId":"611226129"},[]]},{"1375":[{"id":"1375","fileName":"611226134.txt","sourceCode":"func maxSum(nums []int) int {\n    seen := make(map[int]bool)\n    sum := 0\n    maxV := -100\n    for _, num := range nums {\n        if num > 0 {\n            if !seen[num] {\n                seen[num] = true\n                sum += num\n            }\n        }\n        maxV = max(maxV, num)\n    }\n    if len(seen) == 0 {\n        return maxV\n    }\n\treturn sum\n}","author":"慎微","submissionId":"611226134"},[]]},{"1376":[{"id":"1376","fileName":"611226138.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        min_val = min(nums)\n        max_val = max(nums)\n        ans = max_val\n        nums_set = set(nums)\n        ans_pos = -101\n        for num in nums_set:\n            if num > 0:\n                if ans_pos < - 100:\n                    ans_pos = 0\n                ans_pos += num\n        ans = max(ans, ans_pos)\n        return ans\n        ","author":"raphael","submissionId":"611226138"},[]]},{"1377":[{"id":"1377","fileName":"611226182.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        unordered_map<int, int>mp;\n        for(auto&p: nums){\n            mp[p]++;\n        }\n        int sum = 0;\n        for(auto&p:mp){\n            if(p.first > 0) sum += p.first;\n        }\n        if(sum == 0){\n            int mx = nums[0];\n            for(auto&p: nums){\n                mx = max(mx, p);\n            }\n             return mx;\n        }\n        return sum;\n    }\n};","author":"BUG_MAKER","submissionId":"611226182"},[]]},{"1379":[{"id":"1379","fileName":"611226198.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set <int> s;\n        int ans = 0;\n        int sz = 0, mx = -1e9;\n        for(auto u : nums){\n            if(u >= 0 && s.count(u) == 0) ans += u, sz++;\n            if(u < 0) mx = max(mx, u);\n            s.insert(u);\n        }\n        if(sz == 0) ans += mx;\n        return ans;\n    }\n};","author":"Pig312","submissionId":"611226198"},[]]},{"1380":[{"id":"1380","fileName":"611226150.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        count=collections.Counter(nums)\n        ans=0\n        if max(count.keys())<0:\n            return max(count.keys())\n        for each in count.keys():\n            if each >=0:\n                ans+=each\n        return ans","author":"不要名字","submissionId":"611226150"},[]]},{"1381":[{"id":"1381","fileName":"611226208.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        std::unordered_set<int> count;\n        int res = 0;\n        for (auto num : nums) {\n            if (num > 0 && count.count(num) == 0) {\n                count.insert(num);\n                res += num;\n            }\n        }\n        return count.size() == 0 ? *std::max_element(nums.begin(), nums.end()) : res;\n    }\n};","author":"Chenchen","submissionId":"611226208"},[]]},{"1382":[{"id":"1382","fileName":"611226216.txt","sourceCode":"int maxSum(int* nums, int numsSize) {\n    int vis[105] = {0} ;\n    int ans = 0 ;\n    for(int i = 0; i < numsSize; ++ i)\n    {\n        if(nums[i] <= 0 || vis[nums[i]]) continue ;\n        vis[nums[i]] = 1 ;\n        ans += nums[i] ;\n    }\n\n    if(ans == 0)\n    {\n        ans = -1e9 ;\n        for(int i = 0; i < numsSize; ++ i)\n            if(ans < nums[i]) ans = nums[i] ;\n    }\n    return ans ;\n}","author":"半城烟沙","submissionId":"611226216"},[]]},{"1385":[{"id":"1385","fileName":"611226234.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> vals;\n        for (auto &s : nums)\n            vals.insert(s);\n        int ans = 0;\n        bool find = false;\n        for (auto &s : vals)\n            {\n                if (s >= 0)\n                {\n                    find = true;\n                    ans += s;\n                }\n            }\n        if (find) return ans;\n        else {\n            auto it = vals.rbegin();\n            return *it;\n        }\n    }\n};","author":"Sweet HaibtEqa","submissionId":"611226234"},[]]},{"1386":[{"id":"1386","fileName":"611226223.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int res = 0, pre = -1000;\n        for (int x : nums){\n            if (x <= 0){\n                continue;\n            }\n            if (x != pre){\n                res += x;\n                pre = x;\n            }\n        }\n        return res == 0 ? nums.back() : res;\n    }\n};","author":"淂帥","submissionId":"611226223"},[]]},{"1388":[{"id":"1388","fileName":"611226264.txt","sourceCode":"#define ALL(v) v.begin(), v.end()\nclass Solution {\n    public:\n        int maxSum(vector<int>& nums) {\n            sort(ALL(nums));\n            auto n = unique(ALL(nums)) - nums.begin();\n            int sum = 0;\n            for (int i = 0; i < n; ++i) {\n                if (nums[i] > 0) sum += nums[i];\n            }\n            return sum > 0 ? sum : nums[n - 1];\n        }\n    };","author":"Qiye","submissionId":"611226264"},[]]},{"1390":[{"id":"1390","fileName":"611226271.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end(), greater<int>());\n        int n = nums.size(), retVal = nums[0];\n        for (int i = 1; i < n; ++i) {\n            if (nums[i] != nums[i - 1] && nums[i] > 0) retVal += nums[i];\n        }\n        return retVal;\n    }\n};","author":"ming","submissionId":"611226271"},[]]},{"1393":[{"id":"1393","fileName":"611226282.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        unordered_set<int>se;\n        for(auto x:nums){\n            se.insert(x);\n        }\n        int ans=0;\n        vector<int>f;\n        for(auto x:se){\n            f.push_back(x);\n        }\n        ranges::sort(f,greater<>());\n        for(int i=0;i<f.size();i++){\n            if(f[i]>0){\n                ans+=f[i];\n            }\n        }\n        if(ans){\n            return ans;\n        }\n        return f[0];\n    }\n};","author":"anyiling","submissionId":"611226282"},[]]},{"1394":[{"id":"1394","fileName":"611226291.txt","sourceCode":"class Solution:\n    def maxSum(self, a: List[int]) -> int:\n        ans = -inf\n        n = len(a)\n        for i in range(n):\n            b = set()\n            for j in range(i, n):\n                b.add(a[j])\n                d = sorted(b)\n                c = 0\n                for num in d:\n                    if num >= 0:\n                        c += num\n                if d[-1] < 0:\n                    c += d[0]\n                ans = max(ans, c)\n        return ans\n                \n        ","author":"一只包zi","submissionId":"611226291"},[]]},{"1396":[{"id":"1396","fileName":"611226289.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        HashSet<Integer> s = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            if (nums[i] >= 0)s.add(nums[i]);\n        }\n        int res = 0;\n        if (s.size() == 0) return nums[nums.length - 1];\n        for (Integer it : s) {\n            res += it;\n        }\n        return res;\n    }\n}","author":"waters_man","submissionId":"611226289"},[]]},{"1399":[{"id":"1399","fileName":"611226313.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int sum=0;\n        map<int,int>xx;\n        int minnfu=-10000000000;\n        int open=0;\n        for(auto it:nums){\n            minnfu=max(minnfu,it);\n          if(xx[it]==0&&it>0){\n              open=1;\n              xx[it]=1;\n              sum+=it;\n          }          \n        }\n        if(open==0){\n            return minnfu;\n        }\n    return sum;\n    }\n};","author":"该进厂打螺丝了","submissionId":"611226313"},[]]},{"1403":[{"id":"1403","fileName":"611226305.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int result = 0;\n        HashSet<Integer> set = new HashSet<>();\n        \n        for (int x: nums) {\n            if (x > 0) {\n                set.add(x);\n            }\n        }\n        \n        if (set.size() == 0) {\n            Arrays.sort(nums);\n            return nums[nums.length - 1];\n        }\n        \n        \n        for (int x: set) {\n            result += x;\n        }\n        return result;\n    }\n}","author":"Astric","submissionId":"611226305"},[]]},{"1404":[{"id":"1404","fileName":"611226334.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n\n        unordered_set<int> cache{nums.begin(), nums.end()};\n        int ans{};\n        bool hasZero{};\n        for (auto num : cache) {\n            if (num == 0) {\n                hasZero = true;\n            }\n            if (num > 0) {\n                ans += num;\n            }\n        } \n\n        if (ans == 0 && !hasZero) {\n            return ranges::max(nums);\n        }\n\n        return ans;\n    }\n};","author":"不到2000非好汉","submissionId":"611226334"},[]]},{"1405":[{"id":"1405","fileName":"611226323.txt","sourceCode":"class Solution {\n    fun maxSum(nums: IntArray): Int {\n        if (nums.all { it < 0 }) {\n            return nums.maxOrNull()!!\n        }\n        return nums.toHashSet().filter { it > 0 }.sum()\n    }\n}","author":"HaKu","submissionId":"611226323"},[]]},{"1407":[{"id":"1407","fileName":"611226354.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ns = set()\n        ans = 0\n        mxneg = -inf\n        flag = False\n        for num in nums:\n            if num >= 0:\n                if num in ns:\n                    continue\n                ns.add(num)\n                ans += num\n                flag = True\n            else:\n                if num > mxneg: mxneg = num\n        return ans if flag else mxneg","author":"刘蛋蛋","submissionId":"611226354"},[]]},{"1409":[{"id":"1409","fileName":"611226327.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        vector<int> used(201,0);\n        int ans=0,ma=-100;\n        for(int i:nums){\n            ma=max(ma,i);\n            if(used[i+100]==1) continue;\n            used[i+100]=1;\n            if(i>0) ans+=i;\n        }\n        if(ma<0) return ma;\n        return ans;\n    }\n};","author":"捕鼠王汤姆","submissionId":"611226327"},[]]},{"1410":[{"id":"1410","fileName":"611226353.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int> cnt;\n        for(int i = 0;i < nums.size();i ++)\n            {\n                cnt[nums[i]] ++;\n            }\n        sort(nums.begin(),nums.end());\n        bool flag = false;\n        int res = 0;\n        for(auto x : cnt)\n            {\n                if(x.first > 0)\n                {\n                    res += x.first;\n                    flag = true;\n                }\n            }\n\n        if(!flag)\n        {\n            res += nums.back();\n        }\n        \n        return res;\n    }\n};","author":"chhh31","submissionId":"611226353"},[]]},{"1413":[{"id":"1413","fileName":"611226380.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        up0 = []\n        down0 = float(-inf)\n        ans = 0 \n        for x in nums:\n            if x not in up0 and x > 0:\n                ans += x\n                up0.append(x)\n            else:\n                down0 = max(x, down0) \n        return ans if ans != 0 else down0\n                ","author":"SwissRoll","submissionId":"611226380"},[]]},{"1414":[{"id":"1414","fileName":"611226429.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(v < 0 for v in nums):\n            return max(nums)\n        s = set()\n        ans = 0\n        for v in nums:\n            if v > 0 and v not in s:\n                ans += v\n                s.add(v)\n        return ans","author":"OverclockedIvan","submissionId":"611226429"},[]]},{"1415":[{"id":"1415","fileName":"611226381.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        sort(nums.begin(), nums.end());\n        int m = unique(nums.begin(), nums.end()) - nums.begin();\n\n        int ans = nums[m - 1];\n        for (int i = m - 2; i >= 0 && nums[i] > 0; --i)\n            ans += nums[i];\n        return ans;\n    }\n};","author":"Cactus","submissionId":"611226381"},[]]},{"1416":[{"id":"1416","fileName":"611226410.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = set()\n        ans = 0\n        for i in nums:\n            if i not in s:\n                s.add(i)\n                if i > 0:\n                    ans+=i\n        if max(nums) < 0:\n            return max(nums)\n        else:\n            return ans\n        \n        ","author":"Clared","submissionId":"611226410"},[]]},{"1418":[{"id":"1418","fileName":"611226367.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        # 正数每一个选一个即可\n        c = Counter(nums)\n        ans = 0\n        for val in c.keys():\n            if val > 0:\n                ans += val\n        if ans == 0:\n            # 没有正数\n            return max(nums)\n        return ans\n            \n        ","author":"谨岌洽","submissionId":"611226367"},[]]},{"1419":[{"id":"1419","fileName":"611226428.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        dict_num = {}\n        ans = 0\n        for i in range(n):\n            if nums[i] >= 0 and nums[i] not in dict_num:\n                dict_num[nums[i]] = 1\n                ans += nums[i]\n\n        if len(dict_num) == 0:\n            return max(nums)\n\n        return ans","author":"skdky","submissionId":"611226428"},[]]},{"1423":[{"id":"1423","fileName":"611226456.txt","sourceCode":"func maxSum(nums []int) int {\n    ans := 0\n\n    cnt := map[int]int {}\n    for i := range nums {\n        if nums[i] >= 0 {\n            cnt[nums[i]] += 1\n            if cnt[nums[i]] == 1 {\n                ans += nums[i]\n            }\n        }\n    }\n\n    if len(cnt) == 0 {\n        ans = -1000\n        for i := range nums {\n            ans = max(ans,nums[i])\n        }\n    }\n    \n    return ans\n}","author":"归来还当保安","submissionId":"611226456"},[]]},{"1425":[{"id":"1425","fileName":"611226475.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int i = 0;\n        set<int> fuck;\n        int mx = -1e9;\n        int findok = 0;\n        for(int x: nums) mx = max(mx, x);\n        for(int x: nums) if(x > 0 && !fuck.count(x)) i += x, fuck.insert(x), findok=1;\n        if(!findok)\n        {\n            return mx;\n        }\n        return i;\n    }\n};","author":"Boring Kepler7FY","submissionId":"611226475"},[]]},{"1426":[{"id":"1426","fileName":"611226505.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> al;\n        int a,b,c,d,e,f,g;\n        a=nums.size();\n        c=-100000;\n        b=0;\n        for(auto &i:nums)\n            {\n                if(i>0)\n                {\n                    if(al.count(i)==0)\n                            b+=i;\n                    al.insert(i);\n                }\n                c=max(c,i);\n            }\n        if(al.empty())\n                return c;\n        return b;\n    }\n};","author":"Wilbert","submissionId":"611226505"},[]]},{"1427":[{"id":"1427","fileName":"611226480.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int mx = ranges::max(a);\n        if (mx <= 0) return mx;\n        \n        unordered_set<int> s;\n        int ans = 0;\n        for (int &x : a) {\n            if (x > 0 && !s.contains(x)) {\n                ans += x;\n                s.insert(x);\n            }\n        }\n        return ans;\n    }\n};","author":"神秘人3hd","submissionId":"611226480"},[]]},{"1428":[{"id":"1428","fileName":"611226473.txt","sourceCode":"class Solution {\n    public int maxSum(int[] a) {\n        int n = a.length;\n        Set<Integer> set = new HashSet<>();\n        for(int x : a) {\n            if(x > 0) {\n                set.add(x);\n            }\n        }\n        int res = 0;\n\n        if(set.size() == 0) {\n            res = Integer.MIN_VALUE;\n            for(int x : a) {\n                res = Math.max(res, x);\n            }\n            return res;\n        }\n        for(int x : set) {\n            res += x;\n        }\n        return res;\n    }\n}","author":"KaiShen","submissionId":"611226473"},[]]},{"1429":[{"id":"1429","fileName":"611226487.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = sorted(set(nums),reverse=1)\n        \n        if s[0]<0:\n            return s[0]\n        else:\n            ans = 0\n            for i in s:\n                ans = max(ans,ans+i)\n            return ans","author":"乾杯 []~（￣▽￣）~*","submissionId":"611226487"},[]]},{"1430":[{"id":"1430","fileName":"611226500.txt","sourceCode":"func maxSum(nums []int) int {\n    res:=0\n    mp:=make(map[int]int)\n    maxn:=-1000\n    for _,v:=range nums{\n        if v>maxn{\n            maxn=v\n        }\n        if _,ok:=mp[v];!ok && v>0{\n            res+=v\n            mp[v]++\n        }\n    }\n    if maxn<0{\n        return maxn\n    }\n    return res\n}","author":"cpkqxpgg","submissionId":"611226500"},[]]},{"1431":[{"id":"1431","fileName":"611226493.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: list[int]) -> int:\n        if max(nums) <= 0:\n            return max(nums)\n        \n        res = 0\n        dic = dict()\n        for num in nums:\n            if num <= 0:\n                continue\n            if num in dic:\n                continue\n            dic[num] = 0\n            res += num\n        return res","author":"SseVven","submissionId":"611226493"},[]]},{"1432":[{"id":"1432","fileName":"611226520.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int ans = 0;\n        int cnt = 0;\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0 ; i < nums.length ; i++){\n            if (nums[i] >= 0 && !set.contains(nums[i])){\n                ans += nums[i];\n                set.add(nums[i]);\n                cnt++;\n            }\n        }\n        if (cnt == 0) return nums[nums.length - 1];\n        return ans;\n    }\n}","author":"酷到没脾气","submissionId":"611226520"},[{"id":"1659","similarity":0.7325581395348837,"totOverlap":63,"longestOverlap":21}]],"1659":[{"id":"1659","fileName":"611228800.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int ans = 0;\n        Set<Integer> set = new HashSet<>();\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]>0&&!set.contains(nums[i])){\n                ans+=nums[i];\n                set.add(nums[i]);\n            }\n        }\n        if(ans==0){\n            ans = Integer.MIN_VALUE;\n            for(int i=0;i<nums.length;i++){\n                ans = Math.max(ans,nums[i]);\n            }\n        }\n        return ans;\n    }\n}","author":"空白","submissionId":"611228800"},[{"id":"1432","similarity":0.7325581395348837,"totOverlap":63,"longestOverlap":21}]]},{"1434":[{"id":"1434","fileName":"611226535.txt","sourceCode":"func maxSum(nums []int) int {\n    mark := [201]bool{}\n    for _, num := range nums {\n        mark[num + 100] = true\n    }\n    sum := 0\n    met := false\n    for i := 101; i <= 200; i++ {\n        if mark[i] {\n            met = true\n            sum += i - 100\n        }\n    }\n    if met {\n        return sum\n    }\n    return slices.Max(nums)\n}","author":"二本吊车尾","submissionId":"611226535"},[]]},{"1435":[{"id":"1435","fileName":"611226511.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        st=list(set(nums))\n        st.sort()\n        if st[-1]<=0:\n            return st[-1]\n        n=len(st)\n        for i in range(n):\n            if st[i]>0:\n                return sum(st[i:])\n        ","author":"书语","submissionId":"611226511"},[]]},{"1440":[{"id":"1440","fileName":"611226571.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size(),ans=ranges::max(nums);\n        unordered_set<int> s;\n        s.insert(ans);\n        for(int i=0;i<n;i++){\n            if(nums[i]>0&&!s.count(nums[i])) ans+=nums[i];\n            s.insert(nums[i]);\n        }\n        return ans;\n    }\n};","author":"zero","submissionId":"611226571"},[]]},{"1442":[{"id":"1442","fileName":"611226567.txt","sourceCode":"#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint maxSum(int* nums, int numsSize) {\n    int n = numsSize;\n    for (int i = 1;i < n;i++) {\n        int j = i;\n        while(j > 0) {\n            if (nums[j] < nums[j - 1]) {\n                int tmp = nums[j];\n                nums[j] = nums[j - 1];\n                nums[j - 1] = tmp;\n            } else break;\n            j--;\n        }\n    }\n    int ans = 0;\n    for (int i = 0;i < n;i++) {\n        if (i > 0 && nums[i] == nums[i - 1]) continue;\n        if (nums[i] > 0) ans += nums[i];\n    }\n    if (nums[n - 1] < 0) ans = nums[n - 1];\n    return ans;\n}","author":"河城白露","submissionId":"611226567"},[]]},{"1443":[{"id":"1443","fileName":"611226566.txt","sourceCode":"#include <bits/stdc++.h>\nusing namespace std;\n\n// #define int long long\n#define x first\n#define y second\n#define pb push_back\n#define eb emplace_back\n#define v vector\n#define printv(a, x) for (int i = x; i < a.size(); i ++ ) \n                      cout << a[i] << \" n\"[i == (int)a.size() - 1]\n#define printvv(a, x) for (int i = x; i < a.size(); i ++ ) \n                      for (int j = x; j < a[i].size(); j ++ ) \n                        cout << a[i][j] << \" n\"[j == (int)a[i].size() - 1]\n#define all(x) (x).begin(), (x).end()\n#define readv(a, n, x) for (int i = x; i < n + x; i ++ ) \n                          cin >> a[i]\n#define readvv(a, n, m, x) for (int i = x; i < n + x; i ++ ) \n                            for (int j = x; j < m + x; j ++ ) \n                              cin >> a[i][j]\n#define gt greater\n#define pq priority_queue\n#define umap unordered_map\n#define uset unordered_set\n#define lbound(a, l, r, x) lower_bound(a.begin() + l, a.begin() + r + 1, x) - a.begin()\n#define ubound(a, l, r, x) upper_bound(a.begin() + l, a.begin() + r + 1, x) - a.begin()\ntemplate <typename T>\nvoid base_dbg(const std::string& key, const T& value) {\n  std::cerr << key << \" = \" << value;\n}\ntemplate <typename... Args>\nvoid dbg_args(const std::string& keys, Args... args) {\n  size_t pos{ 0 }; ((base_dbg(keys.substr(pos, keys.find(',', pos) - pos), args),\n                     pos = keys.find(',', pos) + 1), ...);\n}\n#define dbg(...) { \n    std::cerr << \"\"; \n    dbg_args(#__VA_ARGS__, __VA_ARGS__); \n    std::cerr << 'n'; \n}\ntemplate <typename T>\nvoid base_print(const T& value) {\n  std::cout << value << ' ';\n}\ntemplate <typename... Args>\nvoid print_args(Args... args) {\n  size_t pos{ 0 }; ((base_print(args)), ...);\n}\n#define print(...) { \n    std::cout << \"\"; \n    print_args(__VA_ARGS__); \n    std::cout << 'n'; \n}\n\ntypedef long long i64;\ntypedef unsigned long long u64;\ntypedef __int128 i128;\ntypedef pair<int, int> pII;\ntypedef tuple<int, int, int> pIII;\n\nstd::mt19937 rnd(std::chrono::steady_clock().now().time_since_epoch().count());\n\nconst int N = 2e5 + 10, M = 1e6 + 10, mod7 = 1e9 + 7, mod9 = 998244353,\n          inf = 2e9, base = 131;\nint t, n, m, q, k, p;\nint dx[] = {0, 0, 1, -1}, dy[] = {1, -1, 0, 0};\n\nstruct PII {\n  int x, y, z;\n  bool operator< (const PII &tmp) const {\n    return x < tmp.x;\n  }\n};\n\nclass Solution {\npublic:\n  int maxSum(vector<int>& a) {\n    uset<int> s;\n    int n = a.size();\n    for (int i = 0; i < n; i ++ )\n      s.insert(a[i]);\n    int sum = 0, cnt = 0;\n    for (auto x : s)\n      if (x > 0) sum += x, cnt ++;\n    if (cnt == 0) {\n      int mx = -inf;\n      for (auto x : s) mx = max(mx, x);\n      sum += mx;\n    }\n    return sum;\n  }\n};","author":"一枕眠秋雨","submissionId":"611226566"},[]]},{"1444":[{"id":"1444","fileName":"611226573.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, int> h;\n        int m = INT_MIN, ans = 0;\n        for (auto &num : nums) {\n            if (num > m) m = num;\n            if (num > 0 && h[num] == 0) {\n                h[num]++;\n                ans += num;\n            }\n        }\n        if (m <= 0) return m;\n        return ans;\n    }\n};","author":"陌旭c","submissionId":"611226573"},[]]},{"1446":[{"id":"1446","fileName":"611226604.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = a.size();\n\n        int sum = 0;\n        int mx = INT_MIN;\n        unordered_set<int> st;\n        for (int i = 0; i < n; i++) {\n            if (a[i] > 0) {\n                if (!st.count(a[i])) {\n                    st.insert(a[i]);\n                    sum += a[i];    \n                }\n            } else {\n                mx = max(mx, a[i]);\n            }\n        }\n        if (st.size()) {\n            return sum;\n        }\n        return mx;\n    }\n};","author":"另一个我","submissionId":"611226604"},[]]},{"1450":[{"id":"1450","fileName":"611226602.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        cnt = set()\n        ans = 0\n        if max(nums) < 0:\n            return max(nums)\n        for v in nums:\n            if v >= 0 and v not in cnt:\n                ans += v\n            cnt.add(v)\n        return ans","author":"Vibrant FermatrS1","submissionId":"611226602"},[{"id":"1470","similarity":1.0,"totOverlap":40,"longestOverlap":20}]],"1470":[{"id":"1470","fileName":"611226718.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        cnt = set()\n        ans = 0\n        if max(nums) < 0:\n            return max(nums)\n        for v in nums:\n            if v >= 0 and v not in cnt:\n                ans += v\n            cnt.add(v)\n        return ans","author":"我想要看你笑","submissionId":"611226718"},[{"id":"1450","similarity":1.0,"totOverlap":40,"longestOverlap":20}]]},{"244":[{"id":"244","fileName":"1575081680.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int a = *max_element(nums.begin(), nums.end());\n        if(a < 0) return a;\n        map<int,int> m;\n        int ans = 0;\n        for(int& i : nums){\n            if(m[i] == 0 && i >= 0){\n                m[i]++;\n                ans += i;\n            }\n        }\n        return ans;\n    }\n};","author":"Ankur karn","submissionId":"1575081680"},[{"id":"244","similarity":0.71875,"totOverlap":46,"longestOverlap":6}]],"1451":[{"id":"1451","fileName":"611226609.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int> mp;\n        int sum=0;\n        sort(nums.begin(),nums.end());\n        if(nums.back()<=0)\n            return nums.back();\n        for(auto num:nums)\n            {\n                if(mp[num]==0&&num>0)\n                {\n                    mp[num]=1;\n                    sum+=num;\n                }\n            }\n        return sum;\n    }\n};","author":"胡冻僵","submissionId":"611226609"},[{"id":"1538","similarity":0.8333333333333334,"totOverlap":55,"longestOverlap":21},{"id":"1451","similarity":0.71875,"totOverlap":46,"longestOverlap":6}]],"1538":[{"id":"1538","fileName":"611227222.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int, int> mp;\n        int ans = 0;\n        sort(nums.begin(), nums.end());\n        if(nums.back() <= 0) {\n            return nums.back();\n        }\n        for(int i : nums) {\n            if(!mp[i] && i > 0) {\n                mp[i] = 1;\n                ans += i;\n            }\n        }\n        return ans;\n    }\n};","author":"snowy2002","submissionId":"611227222"},[{"id":"1451","similarity":0.8333333333333334,"totOverlap":55,"longestOverlap":21}]]},{"1453":[{"id":"1453","fileName":"611226629.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        hp = [-x for x in nums]\n        heapify(hp)\n        if hp[0] >= 0:\n            return -hp[0]\n        ans = 0\n        st = set()\n        while hp and hp[0] < 0:\n            v = -heappop(hp)\n            if v in st:\n                continue\n            st.add(v)\n            ans += v\n        return ans","author":"stargazy","submissionId":"611226629"},[]]},{"1456":[{"id":"1456","fileName":"611226645.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean[] cnt = new boolean[101];\n        int ret = 0;\n        int min = -101;\n        for (int i = 0; i < nums.length; i++) {\n            if (nums[i] <= 0) {\n                min = Math.max(min, nums[i]);\n            } else {\n                if (!cnt[nums[i]]) {\n                    ret += nums[i];\n                    cnt[nums[i]] = true;\n                }\n            }\n        }\n        if (ret == 0) {\n            ret = min;\n        }\n        return ret;\n    }\n}","author":"elarov","submissionId":"611226645"},[]]},{"1457":[{"id":"1457","fileName":"611226648.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        unordered_set<int> visited;\n        for (int x : nums) {\n            if (x > 0 && !visited.contains(x)) ans += x;\n            visited.insert(x);\n        }\n        return ans == 0 ? ranges::max(nums) : ans;\n    }\n};","author":"沅筱","submissionId":"611226648"},[]]},{"1458":[{"id":"1458","fileName":"611226653.txt","sourceCode":"int max(int a , int b) {\n    if(a > b) return a ;\n    return b ;\n}\nint maxSum(int* nums, int n) {\n    int cnt[210] ;\n    for(int i = 0 ; i < 210 ; i ++) cnt[i] = 0 ;\n    int ans = 0 ; \n    int c = 1 , mx = -200 ; \n    for(int i = 0 ; i < n ; i ++) {\n        if(cnt[nums[i] + 101] == 0 && nums[i] > 0) ans += nums[i] , c ++;\n        mx = max(mx , nums[i]) ; \n        cnt[nums[i] + 101] ++ ; \n    }\n    if(mx < 0) return mx ; \n    return ans ; \n}","author":"罚时大师月色","submissionId":"611226653"},[]]},{"1459":[{"id":"1459","fileName":"611226657.txt","sourceCode":"use std::collections::HashSet;\n\nimpl Solution {\n    pub fn max_sum(v: Vec<i32>) -> i32 {\n        let s: HashSet<i32> = v.iter().filter(|x| **x > 0).copied().collect();\n\n        if s.is_empty() {\n            *v.iter().max().unwrap()\n        } else {\n            s.into_iter().sum()\n        }\n    }\n}","author":"Somnia1337x","submissionId":"611226657"},[]]},{"1460":[{"id":"1460","fileName":"611226669.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int[] cnt = new int[201];\n        int mn = 1000 , mx = -1000 , tot = 0;\n        int res = 0;\n        for(int x : nums){\n            cnt[x + 100]++;\n            mn = Math.min(mn , x);\n            mx = Math.max(mx , x);\n            \n        }\n        if(mx < 0) return mx;\n        for(int i = 100 ; i < 201 ; i++){\n            if(cnt[i] > 0){\n                tot+= i -100;\n            }\n        }\n        return tot;\n        \n    }\n}","author":"spalatendooo","submissionId":"611226669"},[]]},{"1461":[{"id":"1461","fileName":"611226674.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums=sorted(set(nums))\n        x=bisect_left(nums,0)\n        if x<len(nums):return sum(nums[x:])\n        else:return nums[-1]","author":"Hyperalgebra","submissionId":"611226674"},[]]},{"1462":[{"id":"1462","fileName":"611226668.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int v[205];\n        int mx = nums[0], ok = 0;\n        memset(v, 0, sizeof(v));\n        int sum = 0;\n        for (auto x : nums) {\n            if (x>=0 && !v[x]) {\n                sum += x;\n                v[x] = 1;\n                ok = 1;\n            }\n            mx = max(mx, x);\n        }\n        if (!ok) return mx;\n        return sum;\n    }\n};","author":"啊啊啊啊","submissionId":"611226668"},[]]},{"1464":[{"id":"1464","fileName":"611226687.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        const int INF=1e9;\n        int i,num,ans;\n        unordered_map<int,int>a;\n        num=-INF; ans=0;\n        for(i=0;i<nums.size();i++)\n            {\n                if(nums[i]>0 && a[nums[i]]==0)\n                {\n                    ans=ans+nums[i];\n                    a[nums[i]]=1;\n                }\n                num=max(num,nums[i]);\n            }\n        if(ans!=0)return ans;\n        else return num;\n    }\n};","author":"er🌪","submissionId":"611226687"},[]]},{"1466":[{"id":"1466","fileName":"611226698.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = sorted(set(nums))\n        n = len(nums)\n        ret = nums[0]\n        for i in range(n):\n            for j in range(i + 1, n + 1):\n                ret = max(ret, sum(nums[i:j]))\n        return ret\n        ","author":"梁震甲","submissionId":"611226698"},[]]},{"1467":[{"id":"1467","fileName":"611226711.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int, int> occ;\n        for (auto x : nums) {\n            occ[x]++;\n        }\n\n        if (occ.rbegin()->first > 0) {\n            int r = 0;\n            \n            for (auto& pr : occ) {\n                if (pr.first > 0) {\n                    r += pr.first;\n                }\n            }\n\n            return r;\n        } else {\n            return occ.rbegin()->first;\n        }\n    }\n};","author":"Haocheng","submissionId":"611226711"},[]]},{"1469":[{"id":"1469","fileName":"611226715.txt","sourceCode":"int maxSum(int* nums, int numsSize) {\n    int* hash = calloc(1000, sizeof(int));\n    int sum = 0;\n    int cnt = 0;\n    for(int i = 0 ; i < numsSize; i++) {\n        if(!hash[nums[i] + 100] && nums[i] >= 0){\n            sum+=nums[i];\n            cnt++;\n            hash[nums[i] + 100] = 1;\n        }\n    }\n    if(cnt) return sum;\n    int maxer = -1000;\n    for(int i = 0; i < numsSize; i++) maxer = fmax(maxer, nums[i]);\n    return maxer;\n}","author":"lviy","submissionId":"611226715"},[]]},{"1472":[{"id":"1472","fileName":"611226731.txt","sourceCode":"class Solution {\n        public int maxSum(int[] nums) {\n            int n = nums.length;\n            Arrays.sort(nums);\n            int ans = 0;\n            for (int i = n - 1; i >= 0; i--) {\n                if (nums[i] <= 0) {\n                    break;\n                }\n                if (i < n - 1 && nums[i] == nums[i + 1]) {\n                    continue;\n                }\n                ans+=nums[i];\n            }\n\n            if (ans == 0) {\n                ans = nums[n - 1];\n            }\n\n            return ans;\n        }\n    }","author":"啦啦啦","submissionId":"611226731"},[]]},{"1473":[{"id":"1473","fileName":"611226733.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return nums[0]\n        mp = defaultdict(int)\n        choose = False\n        res = 0\n        for num in nums:\n            if num not in mp:\n                mp[num] += 1\n                if num >= 0:\n                    choose = True\n                    res += num\n        if choose == False:\n            return max(nums)\n        return res","author":"wither","submissionId":"611226733"},[]]},{"1474":[{"id":"1474","fileName":"611226702.txt","sourceCode":"function maxSum(nums: number[]): number {\n  const m = new Set<number>();\n  const k = Math.max(...nums);\n  let r = 0;\n\n  for (const v of nums) {\n    if (v > 0) {\n      m.add(v);\n    }\n  }\n\n  for (const v of m) {\n    r += v;\n  }\n\n  return m.size > 0 ? r : k;\n}\n","author":"Noah","submissionId":"611226702"},[]]},{"1475":[{"id":"1475","fileName":"611226734.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int[] cnt = new int[201];\n        int res = 0;\n        for(int num: nums){\n            if(num > 0 && cnt[num+100] == 0){\n                res += num;\n            }\n            cnt[num+100] = 1;\n        }\n        if(res == 0){\n            res = nums[0];\n            for(int num: nums){\n                res = Math.max(res, num);\n            }\n        }\n        return res;\n    }\n}","author":"Jishen Yin","submissionId":"611226734"},[]]},{"1479":[{"id":"1479","fileName":"611226740.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort()\n        if max(nums)<0:\n            return nums[-1]\n        tot=0\n        cnt=Counter(nums)\n        for k,v in cnt.items():\n            if k>0:\n                tot+=k\n        return tot","author":"Demon3","submissionId":"611226740"},[]]},{"1481":[{"id":"1481","fileName":"611226791.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        int max = -INT_MAX;\n        map<int, bool> haxi;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums[i] > 0 && !haxi[nums[i]]) {\n                haxi[nums[i]] = true;\n                ans += nums[i];\n            }\n            max = ::max(nums[i], max);\n        }\n        if (max <= 0)\n            return max;\n        return ans;\n    }\n};","author":"Elaina","submissionId":"611226791"},[]]},{"1483":[{"id":"1483","fileName":"611226796.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map <int,int> M;\n        int ans = 0, n = nums.size(), cnt=0;\n        for (int i=0;i<n;i++){\n            if (nums[i]<=0) continue;\n            else{\n                if (M[nums[i]]) continue;\n                else M[nums[i]]++, ans+=nums[i], cnt++;\n            }\n        }\n        if (cnt==0){\n            int Max = nums[0];\n            for (int i=0;i<n;i++) Max = max(nums[i], Max);\n            return Max;\n        }\n        return ans;\n    }\n};","author":"SYForever","submissionId":"611226796"},[]]},{"1485":[{"id":"1485","fileName":"611226794.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& ns) {\n        int n=ns.size();\n        int sum=0;\n        map<int,int> mp;\n        for(int i=0;i<n;i++){\n            int v=ns[i];\n            mp[v]++;\n        }\n        int tag=0;\n        int mi=-INT_MAX;\n        for(auto t : mp){\n            if(t.first>=0){\n                sum+=t.first;\n                tag=1;\n            }\n            if(t.first<0){\n                mi=max(t.first,mi);\n            }\n        }\n        if(tag==0){\n            sum+=mi;\n        }\n        return sum;\n    }\n};","author":"youk","submissionId":"611226794"},[]]},{"1486":[{"id":"1486","fileName":"611226818.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        map<int,int>mp;\n        int n=a.size();\n        int ans=0;\n        int maxn=-101,m=0;\n        for(int i=0;i<n;i++){\n            if(mp[a[i]]==0&&a[i]>0)\n                ans+=a[i];\n            mp[a[i]]++;\n            if(a[i]<0)\n                m++;\n            maxn=max(a[i],maxn);\n        }\n        if(m==n)\n            return maxn;\n        return ans;\n    }\n};","author":"仲舟","submissionId":"611226818"},[]]},{"1489":[{"id":"1489","fileName":"611226845.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> hash;\n        bool flag = true;\n\n        for (auto x : nums) {\n            if (x >= 0) {\n                hash.insert(x);\n                flag = false;\n            }\n        }\n        int res = 0;\n        for (auto it : hash) {\n            res += it;\n        }\n\n        if (flag) {\n            res = -100;\n            for (int x : nums) res = max(res, x);\n        }\n        return res;\n    }\n};","author":"手写","submissionId":"611226845"},[]]},{"1490":[{"id":"1490","fileName":"611226849.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res = 0\n        mx = -inf\n        vis = set()\n        for val in nums:\n            mx = max(mx, val)\n            if val > 0 and val not in vis:\n                vis.add(val)\n                res += val\n        return mx if res == 0 else res\n            \n        ","author":"目目","submissionId":"611226849"},[]]},{"1491":[{"id":"1491","fileName":"611226867.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = list(set(nums))\n        s.sort()\n        ans = 0\n        ans += s[-1]\n        for i in range(len(s)-2,-1,-1):\n            if s[i]>0:\n                ans+=s[i]\n        return ans\n        ","author":"taoria","submissionId":"611226867"},[]]},{"1492":[{"id":"1492","fileName":"611226860.txt","sourceCode":"#define VOL 202\nint maxSum(int* nums, int numsSize) {\n    int bucket[VOL] = {0};\n    bool isPos = false;\n    for(int i = 0;i < numsSize; i++){\n        bucket[nums[i] + 100]++;\n        if(nums[i] >= 0) isPos = true;\n    }\n    int sum = 0;\n    if(isPos){\n        for(int i = 100; i < VOL; i++){\n            if(bucket[i]) sum += i - 100;\n        }\n    }\n    else{\n        int maxNeg = INT_MIN;\n        for(int i = 0;i < VOL; i++){\n            if(bucket[i]) maxNeg = fmax(maxNeg, i - 100);\n        }\n        sum += maxNeg;\n    }\n    return sum;\n}","author":"MuJue","submissionId":"611226860"},[]]},{"1493":[{"id":"1493","fileName":"611226852.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        elems = set()\n        for num in nums:\n            if num > 0 and num not in elems:\n                elems.add(num)\n\n        if len(elems) == 0:\n            return max(nums)\n        return sum(elems)\n        ","author":"brilliant_o","submissionId":"611226852"},[]]},{"1495":[{"id":"1495","fileName":"611226873.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        a=set()\n        for i,c in enumerate(nums):\n            if c>=0:\n                a.add(c)\n\n        return sum(a) if max(nums)>=0 else max(nums)","author":"天大小菜","submissionId":"611226873"},[]]},{"1496":[{"id":"1496","fileName":"611226886.txt","sourceCode":"public class Solution {\n    public int MaxSum(int[] nums) {\n        if (nums.Length == 1) return nums[0];\n        Array.Sort(nums);\n        int t = -100000, ans = 0;\n        for (int i = 0; i < nums.Length; ++i)\n        {\n            if (nums[i] > 0 && nums[i] != t)\n            {\n                ans += nums[i];\n                t = nums[i];\n            }\n        }\n        return ans == 0 ? nums[nums.Length - 1] : ans;\n    }\n}","author":"dyx0727","submissionId":"611226886"},[]]},{"1497":[{"id":"1497","fileName":"611226921.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort(reverse=True)\n        used = set()\n        ans = 0\n        for x in nums:\n            if x < 0:\n                if len(used) > 0:\n                    break\n                else:\n                    ans += x\n                    break\n            if not x in used:\n                ans += x\n                used.add(x)\n        return ans\n        ","author":"XIAO TUO","submissionId":"611226921"},[]]},{"1499":[{"id":"1499","fileName":"611226947.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int sum = 0;\n        Arrays.sort(nums);\n        if (nums[nums.length - 1] <= 0) {\n            return nums[nums.length - 1];\n        }\n        for (int tmp : nums) {\n            if (!set.contains(tmp) && tmp > 0) {\n                set.add(tmp);\n                sum += tmp;\n            }\n        }\n        return sum;       \n    }\n}","author":"皇家码德里","submissionId":"611226947"},[]]},{"1500":[{"id":"1500","fileName":"611226965.txt","sourceCode":"func maxSum(nums []int) int {\n\ttheMap := map[int]bool{}\n\tfor _, v := range nums {\n\t\ttheMap[v] = true\n\t}\n\tarr := []int{}\n\tfor k := range theMap {\n\t\tarr = append(arr, k)\n\t}\n\n\tsort.Ints(arr)\n\ttheRes := arr[len(arr)-1]\n\tfor i := len(arr) - 2; i >= 0; i-- {\n\t\tif arr[i] < 0 {\n\t\t\tbreak\n\t\t}\n\t\ttheRes += arr[i]\n\t}\n\treturn theRes\n}","author":"cyldsyp1","submissionId":"611226965"},[]]},{"1501":[{"id":"1501","fileName":"611226975.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        unordered_set<int> st;\n        int ans=0;\n        int cnt=0;\n        for(int x:a){\n            if(!st.count(x)){\n                if(x>0){\n                    ans+=x;\n                    cnt++;\n                }\n                st.insert(x);\n            }\n        }\n        if(cnt==0)return *max_element(a.begin(),a.end());\n        return ans;\n    }\n};","author":"Romantic I3assiw5k","submissionId":"611226975"},[]]},{"1502":[{"id":"1502","fileName":"611227000.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int n=nums.length;\n        if(n==1) return nums[0];\n        if(nums[n-1]<=0) return nums[n-1];\n        Set<Integer> set=new HashSet();\n        int res=0;\n        for(int i=0;i<n;i++){\n            if(nums[i]<0) continue;\n            set.add(nums[i]);\n        }\n\n        for(int v:set){\n            res+=v;\n        }\n\n        return res;\n    }\n}","author":"luojh","submissionId":"611227000"},[]]},{"1503":[{"id":"1503","fileName":"611226994.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        add = set()\n        sub = set()\n        for num in nums:\n            if num >= 0:\n                add.add(num)\n            else:\n                sub.add(num)\n        if len(add) > 0:\n            return sum([each for each in add])\n        else:\n            sub = [each for each in sub]\n            sub.sort()\n            return sub[-1]","author":"liuyang","submissionId":"611226994"},[]]},{"1504":[{"id":"1504","fileName":"611226976.txt","sourceCode":"class Solution {\npublic:\n    int v[110];\n    int maxSum(vector<int>& nums) {\n        int ret=0;\n        int m=-200;\n        for(auto &c:nums)\n           m=max(m,c);\n    \n        \n        for(auto &c:nums)\n            if(c>=0&&v[c]==0){\n                v[c]=1;\n                ret+=c;\n            }\n\n        \n        \n        return  m<0?m:ret;\n        \n    }\n};","author":"冲","submissionId":"611226976"},[]]},{"1505":[{"id":"1505","fileName":"611227042.txt","sourceCode":"class Solution {\npublic:\n  int maxSum(vector<int> &a) {\n    set<int> b{a.begin(), a.end()};\n    int ans = 0;\n    for (int i = 1; i <= 100; ++i) {\n      if (b.find(i) != b.end()) {\n        ans += i;\n      }\n    }\n    if (!ans) {\n      ans = *b.rbegin();\n    }\n    return ans;\n  }\n};\n","author":"lnkkerst","submissionId":"611227042"},[]]},{"1506":[{"id":"1506","fileName":"611226981.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> S;\n        int ans=0;\n        bool f=false;\n        for(auto i:nums){\n            if(S.count(i))\n                continue;\n            S.insert(i);\n            if(i>0)\n                ans+=i,f=true;\n        }\n        if(!f){\n            return *max_element(nums.begin(),nums.end());\n        }\n        return ans;\n    }\n};","author":"Max.D.","submissionId":"611226981"},[]]},{"1507":[{"id":"1507","fileName":"611227011.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n\n        hash = Counter(nums)\n        keys = sorted(list(hash.keys()))\n        res = keys[-1]\n        for i in keys[:-1]:\n            if i > 0:\n                res += i\n        return res\n        ","author":"盛骓","submissionId":"611227011"},[]]},{"1512":[{"id":"1512","fileName":"611227068.txt","sourceCode":"import java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\n\nclass Solution {\n    public int maxSum(int[] nums) {\n        int res = Integer.MIN_VALUE;\n        Set<Integer> set = new HashSet<>();\n        for (int i : nums) {\n            if (i <= 0) {\n                continue;\n            }\n            if (!set.contains(i)) {\n                if(res==Integer.MIN_VALUE){\n                    res=0;\n                }\n                set.add(i);\n                res += i;\n            }\n        }\n        if (res == Integer.MIN_VALUE) {\n            res = Arrays.stream(nums).max().getAsInt();\n        }\n        return res;\n    }\n}","author":"acvv_Nickdd","submissionId":"611227068"},[]]},{"1513":[{"id":"1513","fileName":"611227071.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int ans = 0;\n        int i = 0;\n        int n = nums.length;\n        while (i < n && nums[i] <= 0) i++;\n        if (i == n) return nums[n - 1];\n        for (; i < n; i++) {\n            if (i > 0 && nums[i] == nums[i - 1]) continue;\n            ans += nums[i];\n        }\n        return ans;\n    }\n}","author":"藏","submissionId":"611227071"},[]]},{"1515":[{"id":"1515","fileName":"611227077.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int n = nums.length;\n        HashSet<Integer> set = new HashSet<>();\n        int res = nums[n-1];\n        set.add(nums[n-1]);\n        for(int i=0;i<n-1;++i){\n            if(nums[i]<0){\n                continue;\n            }\n            if(set.contains(nums[i])){\n                continue;\n            }\n            set.add(nums[i]);\n            res += nums[i];\n        }\n        return res;\n    }\n}","author":"youyouyou","submissionId":"611227077"},[]]},{"1517":[{"id":"1517","fileName":"611227078.txt","sourceCode":"func maxSum(nums []int) int {\n\ta := slices.Max(nums)\n\tif a < 0 {\n\t\treturn a\n\t}\n\ts := 0\n\tvar m map[int]bool = make(map[int]bool)\n\tfor _, v := range nums {\n\t\tif v >= 0 {\n\t\t\tif !m[v] {\n\t\t\t\ts += v\n\t\t\t\tm[v] = true\n\t\t\t}\n\t\t}\n\t}\n\treturn s\n}\n","author":"手塚国光","submissionId":"611227078"},[]]},{"1518":[{"id":"1518","fileName":"611227082.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = a.size();\n        int ans = 0;\n        map<int, int> mp;\n        for (int i : a) {\n            if (i > 0 && mp[i] == 0) {\n                mp[i] = 1;\n                ans += i;\n            }\n        }\n        if (ans == 0) {\n            ans = -1e9;\n            for (int i : a) {\n                ans = max(ans, i);\n            }\n        }\n        return ans;\n    }\n};","author":"William","submissionId":"611227082"},[{"id":"1582","similarity":0.7037037037037037,"totOverlap":57,"longestOverlap":13}]],"1582":[{"id":"1582","fileName":"611227665.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n            int n=nums.size();\n    int ans=nums[0];\n    for(int x : nums){\n        ans=max(ans,x);\n    }\n    int t=0;\n        bool ok=false;\n    map<int,int>mp;\n    for(int x : nums){\n        if(x >= 0 && mp[x]==0){\n            ok=true;\n            mp[x]=1;\n            t+=x;\n        }\n    }\n        if(ok){\n    ans=max(ans,t);\n        }\n        return ans;\n    }\n};","author":"Zhouzw","submissionId":"611227665"},[{"id":"1518","similarity":0.7037037037037037,"totOverlap":57,"longestOverlap":13}]]},{"1519":[{"id":"1519","fileName":"611227093.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        sort(nums.begin(), nums.end());\n        int ans = nums[n - 1];\n        if (nums[n - 1] <= 0) {\n            return nums[n - 1];\n        }\n        for (int i = n - 2; i >= 0; i--) {\n            if (nums[i] > 0 && nums[i] != nums[i + 1]) {\n                ans += nums[i];\n            }\n        }\n        return ans;\n    }\n};","author":"pumpkin","submissionId":"611227093"},[]]},{"1522":[{"id":"1522","fileName":"611227118.txt","sourceCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSum = function(nums) {\n        const set = new Set();\n    let rt = 0;\n    let max = -Infinity;\n    let flag = true;\n    for (const num of nums) {\n        max = Math.max(max, num);\n        if (set.has(num) || num <= 0) continue;\n        flag = false;\n        set.add(num);\n        rt += num;\n    }\n    if (flag) return max;\n    return rt;\n};","author":"peepeepoopoo","submissionId":"611227118"},[]]},{"1523":[{"id":"1523","fileName":"611227105.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        unordered_set<int> us;\n\n        int ans = 0;\n        int max_v = INT_MIN;\n        int cnt = 0;\n        for(int num : nums) {\n            if (num > 0) {\n                if (!us.count(num)) {\n                    ans += num;\n                    us.insert(num);\n                }\n            }\n\n            max_v = max(max_v, num);\n        }\n\n        return ans > 0 ? ans : max_v;\n    }\n};","author":"Hunter","submissionId":"611227105"},[]]},{"1526":[{"id":"1526","fileName":"611227152.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        std::sort(a.begin(), a.end());\n        a.erase(std::unique(a.begin(), a.end()), a.end());\n        std::reverse(a.begin(), a.end());\n\n        while(a.size() > 1 && a.back() < 0) {\n            a.pop_back();\n        }\n\n        return std::accumulate(a.begin(), a.end(), 0);\n    }\n};","author":"spj","submissionId":"611227152"},[]]},{"1527":[{"id":"1527","fileName":"611227127.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,int>mp;\n        int ans=0;\n        sort(nums.begin(),nums.end());\n        int n=nums.size();\n        for(auto a:nums){\n            if(a>0){\n                if(mp[a]){\n                    \n                }else{\n                    ans+=a;\n                }\n                mp[a]=1;\n            }\n        }\n        if(ans>0){\n            \n        }else{\n            for(auto a:nums){\n                if(a<=0){\n                    ans=a;\n                }\n            }\n        }\n        return ans;\n    }\n};","author":"ۣۖิۣۖิۣۣۖۖ⃟刘","submissionId":"611227127"},[]]},{"1529":[{"id":"1529","fileName":"611227131.txt","sourceCode":"public class Solution {\n    public int MaxSum(int[] nums) {\n        int sum = 0;\n        HashSet<int> seen = new();\n        foreach(var n in nums)\n        {\n            if(n >0 && seen.Add(n)) sum+=n;\n        }\n        if(sum == 0)\n        {\n            Array.Sort(nums);\n            sum = nums[^1];\n        }\n        return sum;\n    }\n}","author":"小麦Komugi","submissionId":"611227131"},[]]},{"1530":[{"id":"1530","fileName":"611227168.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        memo=Counter(nums)\n        arr=(memo.keys())\n        pos=[]\n        neg=[]\n        for v in arr:\n            if v>=0:pos.append(v)\n            else:neg.append(v)\n        if not pos:return max(neg)\n        return sum(pos)","author":"Optimistic SutherlandOg9","submissionId":"611227168"},[]]},{"1531":[{"id":"1531","fileName":"611227185.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int ans = 0;\n        int maxF = Integer.MIN_VALUE;\n        Set<Integer> set = new HashSet<>();\n        boolean iszero = true;\n        for(int num:nums){\n            if(num<0){\n                maxF = Math.max(maxF,num);\n                continue;\n            } \n            if(set.contains(num)) continue;\n            set.add(num);\n            ans+=num;\n            iszero = false;\n        }\n        if(!iszero) return ans;\n        return maxF;\n        \n    }\n}","author":"无名","submissionId":"611227185"},[]]},{"1535":[{"id":"1535","fileName":"611227180.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = -inf\n        st = set()\n        for x in nums:\n            if x <= 0:\n                ans = max(ans, x)\n                continue\n            st.add(x)\n        return sum(st) if st else ans","author":"远空","submissionId":"611227180"},[]]},{"1539":[{"id":"1539","fileName":"611227267.txt","sourceCode":"#include <bits/stdc++.h>\n#define debug(a) cout<<#a<<\"=\"<<a<<\"n\"\n#define EPS 1e-8\n#define IOS ios::sync_with_stdio(0),cin.tie(0)\n#define all(v) v.begin(),v.end()\nusing namespace std;\nusing i64 = long long;\nusing ull = unsigned long long;\nusing pi = pair<int,int>;\nusing pl = pair<long long,long long>;\nstatic constexpr int ALPHABET_SIZE = 26;\nstatic constexpr i64 N = 1000000 + 5;\nstatic constexpr int MOD = 998244353;\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        //最大子序列\n        sort(\n            all(nums)\n        );\n        int sum = 0, n = nums.size();\n        set<int> s;\n        for (int i = n - 1; i >= 0; i--) {\n            if (nums[i] <= 0) {\n                if (sum == 0) {\n                    sum += nums[i];\n                }\n                break;\n            } else {\n                if (!s.contains(nums[i])) {\n                    sum += nums[i];\n                    s.insert(nums[i]);\n                } \n            }\n        }\n        return sum;\n    }\n};","author":"千早爱音","submissionId":"611227267"},[]]},{"1541":[{"id":"1541","fileName":"611227211.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int temp=nums[nums.size()-1];\n        int res=0;\n        res=temp;\n        if(temp<=0)\n            return temp;\n        for(int i=nums.size()-2;i>=0;i--)\n            {\n                if(nums[i]==nums[i+1])\n                    continue;\n                else{\n                    if(nums[i]>=0)\n                        res+=nums[i];\n                    else{\n                        break;\n                    }\n                }\n            }\n        return res;\n        \n    }\n};","author":"Patronum","submissionId":"611227211"},[]]},{"1543":[{"id":"1543","fileName":"611227271.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int> &nums)\n    {\n        int neg = 0;\n        int ans = 0;\n        unordered_map<int,int> m1;\n        for(int i = 0;i < nums.size();i++){\n            if(nums[i] >= 0 && !m1.count(nums[i])){\n                ans += nums[i];\n                m1[nums[i]] = 1;\n            }\n            if(nums[i] < 0){\n                neg++;\n            }\n        }\n        if(neg == nums.size()){\n            int s1 = INT32_MIN;\n            for (int i = 0; i < nums.size(); i++)\n            {\n                s1 = max(s1, nums[i]);\n            }\n            ans = s1;\n        }\n        return ans;\n    }\n};","author":"yhwputin","submissionId":"611227271"},[]]},{"1544":[{"id":"1544","fileName":"611227270.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean[] visited = new boolean[101];\n        int ans = 0;\n        int mx = -101;\n        int cnt = 0;\n        for (int x : nums) {\n            if (x >= 0) {\n                if (!visited[x]) {\n                    ans += x;\n                    cnt++;\n                    visited[x] = true;\n                }\n\n            } else {\n                mx = Math.max(mx, x);\n            }\n        }\n\n        return cnt == 0 ? mx : ans;\n    }\n}","author":"Nanmor","submissionId":"611227270"},[]]},{"1546":[{"id":"1546","fileName":"611227282.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        if (ranges::max(nums) <= 0) return ranges::max(nums);\n\n        ranges::sort(nums);\n        nums.erase(ranges::unique(nums).begin(), nums.end());\n        return accumulate(ranges::lower_bound(nums, 0), nums.end(), 0);\n    }\n};","author":"zzz","submissionId":"611227282"},[]]},{"1548":[{"id":"1548","fileName":"611227329.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max=Integer.MIN_VALUE;\n        int sum=0;\n        int cnt=0;\n        boolean[] e = new boolean[101];\n        for(int num:nums){\n            max=Math.max(max,num);\n            if(num>=0&&!e[num]){\n                e[num]=true;\n                sum+=num;\n                cnt++;\n            }\n        }\n        if(cnt==0)return max;\n        else return sum;\n    }\n}","author":"辛世纪","submissionId":"611227329"},[]]},{"1549":[{"id":"1549","fileName":"611227251.txt","sourceCode":"\n#ifdef USACO_LOCAL_JUDGE\n#include <bits/stdc++.h>\n\n#include \"base.h\"\nusing namespace std;\n#endif\n\nint debug = 1;\n#define MyPrintf(...)               \n  do {                              \n    if (debug) printf(__VA_ARGS__); \n  } while (0)\n\n#define MyDebug(...) fprintf(stderr, __VA_ARGS__);\n\ntypedef long long ll;\nclass Solution {\n public:\n  int maxSum(vector<int>& nums) {\n    sort(nums.begin(), nums.end());\n    if (nums.back() <= 0) {\n      return nums.back();\n    }\n\n    int n = nums.size();\n    int pre = INT_MAX;\n    int ans = 0;\n    for (int i = n - 1; i >= 0; i--) {\n      int v = nums[i];\n      if (v == pre) continue;\n      pre = v;\n      if (v <= 0) break;\n      ans += v;\n    }\n    return ans;\n  }\n};\n\n#ifdef USACO_LOCAL_JUDGE\n\nint main() {  //\n  return 0;\n}\n\n#endif","author":"tiankonguse-天空柚子","submissionId":"611227251"},[]]},{"1551":[{"id":"1551","fileName":"611227280.txt","sourceCode":"#include <bits/stdc++.h>\nusing namespace std;\n#define all(a) a.begin(), a.end()\nvoid print() { cout << 'n'; }\ntemplate <typename T, typename...Args>\nvoid print(T t, Args...args) { cout << t << ' '; print(args...); }\nusing ll = long long;\nconst int N = 1e5 + 5;\n\nint dir[4][2] = {\n    {1, 0}, {0, 1}, {-1, 0}, {0, -1}\n};\n\ntemplate <typename T> bool chmax(T &x, T y) { if (y > x) { x = y; return true; } return false; }\ntemplate <typename T> bool chmin(T &x, T y) { if (y < x) { x = y; return true; } return false; }\n\ntemplate <typename T = int>\nvector<T> readVector(int n) {\n    vector<T> a(n);\n    for(T &x: a) cin >> x;\n    return a;\n} \n\nclass Solution {\npublic:\n\tint maxSum(vector<int>& a) {\n\t\tif (ranges::max(a) < 0) {\n\t\t\treturn ranges::max(a);\n\t\t}\n\t\tvector<int> st(101);\n\t\tint ans = 0;\n\t\tfor (int x: a) {\n\t\t\tif (x > 0 && !st[x]) {\n\t\t\t\tst[x] = 1;\n\t\t\t\tans += x;\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n};","author":"hhhhyf","submissionId":"611227280"},[]]},{"1554":[{"id":"1554","fileName":"611227345.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        rec, ans = [0] * 201, 0\n        for num in nums:\n            if num < 0 or rec[num] != 0:\n                continue\n            else:\n                ans += num\n                rec[num] += 1\n        if ans == 0:\n            if rec[0] != 0:\n                return 0\n            else:\n                return max(nums)\n        return ans","author":"海狗","submissionId":"611227345"},[]]},{"1556":[{"id":"1556","fileName":"611227370.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        if(nums.back() < 0){\n            return nums.back();\n        }\n        int idx = 0;\n        \n        while(idx < nums.size() && nums[idx] < 0){\n            ++idx;\n        }\n        int ans = 0;\n        unordered_set<int> se;\n        for(; idx < nums.size(); ++idx){\n            if(se.count(nums[idx]))\n                continue;\n            else{\n                ans += nums[idx];\n                se.insert(nums[idx]);\n            }\n        }\n        return ans;\n    }\n};","author":"歌者","submissionId":"611227370"},[]]},{"1557":[{"id":"1557","fileName":"611227371.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res=0,low=-101;\n        bool f[105];\n        memset(f,false,sizeof(f));\n        for(int& num:nums){\n            if(num<=0)low=max(low,num);\n            if(num<=0||f[num])continue;\n            f[num]=true;\n            res+=num;\n        }\n        return res?res:low;\n    }\n};","author":"贺茂建角身神","submissionId":"611227371"},[]]},{"1558":[{"id":"1558","fileName":"611227392.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> s = new HashSet<>();\n        int r = 0;\n        boolean f = false;\n        for(int num:nums){\n            if(num<0||s.contains(num)){\n                continue;\n            }\n            s.add(num);\n            r+=num;\n            f=true;\n        }\n        if(!f){\n            r = Arrays.stream(nums).max().getAsInt();\n        }\n        return r;\n    }\n}","author":"秋雨田风","submissionId":"611227392"},[]]},{"1560":[{"id":"1560","fileName":"611227331.txt","sourceCode":"import java.util.*;\nimport java.util.function.*;\n\nclass Solution {\n    public int maxSum(int[] nums) {\n        \n        HashSet<Integer> numSet = new HashSet<Integer>();\n        int sum = 0;\n        int count = 0;\n\n        for (int num : nums) {\n            if (num <= 0) continue;\n            if (numSet.contains(num)) continue;\n            sum += num;\n            count++;\n            numSet.add(num);\n        }\n\n        if (count == 0) {\n            sum = Arrays.stream(nums).max().getAsInt();   \n        }\n        return sum;\n    }\n}\n\n\n// class Test{\n//     public static void main(String[] args) {\n//         Solution solution = new Solution();\n//         solution.xorQueries(new int[]{1,3,4,8},new int[][]{{0,1},{1,2},{0,3},{3,3}});\n//     }\n// }","author":"355515","submissionId":"611227331"},[]]},{"1564":[{"id":"1564","fileName":"611227433.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        map<int, int> a;\n        int mx = -1e9;\n        for (int x : nums)\n            a[x] = x, mx = max(mx, x);\n        int ans = 0;\n        for (auto [x, y] : a) {\n            ans += x > 0 ? x : 0;\n        }\n        if (mx < 0)\n            return mx;\n        return ans;\n    }\n};","author":"Violet","submissionId":"611227433"},[]]},{"1566":[{"id":"1566","fileName":"611227435.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort()\n        i = 0\n        n = len(nums)\n        ans = 0\n        while i < n:\n            st = i\n            i += 1\n            while i < n and nums[st] == nums[i]:\n                i += 1\n            if nums[st] >= 0: ans += nums[st]\n            elif i == n and nums[st] < 0: ans += nums[st]\n        return ans","author":"sdl","submissionId":"611227435"},[]]},{"1568":[{"id":"1568","fileName":"611227427.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxi = 0;\n        int size = nums.size();\n        int maxneg = -101;\n        unordered_map<int,int> mp;\n        bool pos = false;\n        for(int i=0;i<size;++i){\n            if(nums[i] < 0){\n                maxneg = max(maxneg,nums[i]);\n                continue;\n            }\n            pos = true;\n            if(mp.find(nums[i]) == mp.end()){\n                mp[nums[i]] = 0;\n                maxi += nums[i];\n            }    \n        }\n        return pos ? maxi : maxneg;\n    }\n};","author":"Sparky","submissionId":"611227427"},[]]},{"1569":[{"id":"1569","fileName":"611227521.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int n = a.size();\n        std::set<int> st;\n        for (int i = 0; i < n; i++) {\n            st.insert(a[i]);\n        }\n        int ans = 0, lst = -2e9, t = 0;\n        for (int i : st) {\n            if (i < 0) {\n                lst = std::max(lst, i);\n                continue;\n            }\n            t += 1;\n            ans += i;\n        }\n        if (t) {\n            return ans;\n        } else {\n            return lst;\n        }\n    }\n};","author":"纯金是单质","submissionId":"611227521"},[]]},{"1571":[{"id":"1571","fileName":"611227485.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int n=nums.size();\n        \n        if(nums.size()==1)return nums[0];\n        map<int,bool>m;\n        int ans=nums[n-1];\n        m[ans]=true;\n        for(int i=0;i<n-1;i++){\n            if(nums[i]<0)continue;\n            if(m[nums[i]]==false){\n                m[nums[i]]=true;\n                ans+=nums[i];\n            }\n        }\n        return ans;\n    }\n};","author":"Infallible FeynmanBTV","submissionId":"611227485"},[]]},{"1572":[{"id":"1572","fileName":"611227535.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        ranges::sort(nums);\n        int res = 0, t;\n        set<int> st;\n        for(auto x : nums){\n            st.insert(x);\n        }\n        for(auto x : st){\n            if(x > 0){\n                res += x;\n            }else{\n                t = x;\n            }\n        }\n        if(res == 0){\n            res = t;\n        }\n        return res;\n    }\n};","author":"13579","submissionId":"611227535"},[]]},{"1573":[{"id":"1573","fileName":"611227517.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int ans = *max_element(nums.begin(), nums.end()), sum = 0;\n        for (int& num : nums) {\n            if (num <= 0) continue;\n            if (st.count(num)) continue;\n            sum += num;\n            st.insert(num);\n        }\n        if (sum > 0) ans = max(ans, sum);\n        return ans;\n    }\n};","author":"Cranky Hermann8Yl","submissionId":"611227517"},[]]},{"1574":[{"id":"1574","fileName":"611227586.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        if(*max_element(nums.begin(), nums.end()) < 0){\n            return *max_element(nums.begin(), nums.end());\n        }\n        int res = 0; \n        std::vector<int> cnt(101);\n        for(int i = 0; i < nums.size(); i ++){\n            if(nums[i] >= 0 && !cnt[nums[i]]) res += nums[i], cnt[nums[i]] = 1;\n        }\n        \n        return res;\n    }\n};","author":"WUHUQIFEI123","submissionId":"611227586"},[]]},{"1575":[{"id":"1575","fileName":"611227543.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        record = [False for _ in range(201)]\n        N = len(nums)\n        for i in range(N):\n            record[nums[i] + 100] = True\n        ans = 0\n        for i in range(200, 100, -1):\n            if record[i]:\n                ans += (i - 100)\n        if ans != 0: return ans\n        for i in range(100, -1, -1):\n            if record[i]:\n                return i - 100","author":"稽函数","submissionId":"611227543"},[]]},{"1576":[{"id":"1576","fileName":"611227588.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool flag = 0;\n        int n = nums.size();\n        int ans = 0;\n        int map[1000]{};\n        for(int i=0;i<n;++i){\n            if(!map[nums[i]+100]){\n                map[nums[i]+100] = 1;\n                if(nums[i]>=0){\n                    ans += nums[i];\n                    flag = 1;\n                }\n            }\n        }\n        if(!flag){\n            sort(nums.begin(),nums.end());\n            ans = nums[n-1];\n        }\n        return ans;\n    }\n};","author":"eleven-mile","submissionId":"611227588"},[]]},{"1577":[{"id":"1577","fileName":"611227615.txt","sourceCode":"public class Solution {\n        public int MaxSum(int[] nums)\n        {\n            int max = nums.Max();\n            bool[] vis = new bool[Math.Max(1, max + 1)];\n            int ans = 0;\n            for (int i = 0; i < nums.Length; i++)\n            {\n                if (nums[i] >= 0 && !vis[nums[i]])\n                {\n                    vis[nums[i]] = true;\n                    ans += nums[i];\n                }\n            }\n            if (vis.Any(s => s))\n            {\n                return ans;\n            }\n            return nums.Where(s => s <= 0).Max();\n        }\n}","author":"nine","submissionId":"611227615"},[]]},{"1579":[{"id":"1579","fileName":"611227606.txt","sourceCode":"class Solution:\n    def maxSum(self, a: List[int]) -> int:\n        ret = max(a)\n        a = [i for i in a if i > 0]\n        n = len(a)\n        for i in range(n):\n            for j in range(i+1, n+1):\n                ret = max(ret, sum(set(a[i:j])))\n        return ret","author":"summerdaway","submissionId":"611227606"},[]]},{"1583":[{"id":"1583","fileName":"611227630.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans1 = 0\n        ans2 = -inf\n        flg = False\n        arr = [0] * 101\n        for a in nums:\n            if a <= 0:\n                ans2 = max(ans2, a)\n            elif arr[a] == 0:\n                flg = True\n                ans1 += a\n                arr[a] = 1\n        return ans1 if flg else ans2","author":"ali","submissionId":"611227630"},[]]},{"1586":[{"id":"1586","fileName":"611227721.txt","sourceCode":"func maxSum(nums []int) int {\n\tans := math.MinInt32\n\tmp:=make(map[int]int)\n\tfor _,v:=range nums{\n\t\tif v>0{\n\t\t\tmp[v]++\n\t\t} \n\t\tans=max(ans,v)\n\t}\n\tif len(mp)>0{\n\t\tans=0\n\t\tfor k,_:=range mp{\n\t\t\tans+=k\n\t\t}\n\t}\n\treturn ans\n}","author":"北歌","submissionId":"611227721"},[]]},{"1587":[{"id":"1587","fileName":"611227756.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mp[201] = {0};\n        int ans;\n\n        for (int &x : nums) {\n            mp[x + 100]++;\n        }\n\n        ans = 0;\n        for (int i = 100; i <= 200; i++) {\n            if (mp[i] == 0) continue;\n            ans += i - 100;\n        }\n\n        if (ans == 0) {\n            for (int i = 100; i >= 0; i--) {\n                if (mp[i] >= 1) {\n                    return i - 100;\n                }\n            }\n        } \n        \n        return ans;\n    }\n};","author":"๑古月ღ","submissionId":"611227756"},[]]},{"1588":[{"id":"1588","fileName":"611227749.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<int>a;\n        for(auto x:nums){\n            if(x>0) a.push_back(x);\n        }\n        int n=a.size(),res=0;\n        if(!n){\n            res=-10000;\n            for(auto x:nums){\n                res=max(res,x);\n            }\n            return res;\n        }\n        for(int i=0;i<n;++i){\n            vector<int>cnt(101);\n            int ans=0;\n            for(int j=i;j<n;++j){\n                cnt[a[j]]++;\n                if(cnt[a[j]]==1) ans+=a[j];\n                res=max(res,ans);\n            }\n        }\n        return res;\n    }\n};","author":"Glow.","submissionId":"611227749"},[]]},{"1590":[{"id":"1590","fileName":"611227793.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=nums[0];\n        vector<int> visit(101);\n        if(nums[0]>=0){\n            visit[nums[0]]++;\n        }\n        bool d=ans>=0;\n        for(auto num:nums){\n            if(num>=0&&visit[num]==0){\n                if(!d){\n                    ans=0;\n                    d=true;\n                }\n                ans+=num;\n                visit[num]++;\n            }else if(num<0){\n                ans=max(ans,num);\n            }\n        }\n        return ans;\n    }\n};","author":"apocalypse","submissionId":"611227793"},[]]},{"1592":[{"id":"1592","fileName":"611227800.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        st = set()\n        ans, mx = 0, -inf\n        for x in nums:\n            if x <= 0:\n                mx = max(mx, x)\n                continue\n            if x not in st:\n                ans += x\n                st.add(x)\n        return ans if ans != 0 else mx","author":"江上闲人","submissionId":"611227800"},[]]},{"1594":[{"id":"1594","fileName":"611227829.txt","sourceCode":"#include<bits/stdc++.h>\nusing namespace std;\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        s.insert(nums.begin(), nums.end());\n        int sum = 0;\n        bool isP = false;\n        for(auto i : s) {\n            if(i >= 0) {\n                sum += i;\n                isP = true;\n            }\n        }\n        sort(nums.begin(), nums.end());\n        if(isP == false) {\n            return nums[nums.size() - 1];\n        }\n        return sum;\n    }\n};","author":"逆熵","submissionId":"611227829"},[]]},{"1595":[{"id":"1595","fileName":"611227813.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums)\n    {\n        unordered_map<int, int> Hash;\n        sort(nums.begin(),nums.end(),greater<int>());\n        int sum=0;\n        for (auto x: nums)\n        {\n            ++Hash[x];\n            if (Hash[x]==1&&x>=0)\n                sum+=x;\n        }\n        if (sum==0) sum+=nums[0];\n        return sum;\n    }\n};","author":"Aurora°","submissionId":"611227813"},[]]},{"1596":[{"id":"1596","fileName":"611227820.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        pos_nums = [num for num in nums if num >= 0]\n        neg_nums = [num for num in nums if num < 0]\n\n        if len(pos_nums) > 0:\n            return sum(pos_nums)\n        else:\n            return max(neg_nums)","author":"一起学算法","submissionId":"611227820"},[]]},{"1597":[{"id":"1597","fileName":"611227844.txt","sourceCode":"class Solution {\n        public int maxSum(int[] nums) {\n        int n = nums.length;\n        if (n == 1) return nums[0];\n\n        Set<Integer> set = new HashSet<>();\n\n        for (int num : nums) {\n            set.add(num);\n        }\n\n        int res = 0;\n        for (int e : set.stream().toList()) {\n            if (e > 0) {\n                res += e;\n            }\n        }\n\n        if (res == 0) {\n            Arrays.sort(nums);\n            return  nums[n-1];\n        }\n        \n        return res;\n    }\n\n}","author":"Eliauk","submissionId":"611227844"},[]]},{"1598":[{"id":"1598","fileName":"611227830.txt","sourceCode":"\nclass Solution {\n    public int maxSum(int[] nums) {\n        int ans = 0;\n        Set<Integer> set = new HashSet<>();\n        Arrays.sort(nums);\n        if (nums[nums.length - 1] < 0) {\n            return nums[nums.length - 1];\n        }\n        for (int i = 0; i < nums.length; i++) {\n            if (set.contains(nums[i]) || nums[i] < 0) continue;\n            set.add(nums[i]);\n            ans += nums[i];\n        }\n        return ans;\n    }\n}\n","author":"一只小蜗牛呀","submissionId":"611227830"},[]]},{"1599":[{"id":"1599","fileName":"611227837.txt","sourceCode":"\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\nclass Solution {\n    class Trie {\n        class Node {\n            Node[] nexts;\n            int count;\n            int depth;\n            boolean end;\n\n            public Node() {\n                nexts = new Node[26];\n                count = 0;\n                depth = 0;\n                end = false;\n            }\n        }\n\n        Node root;\n        TreeMap<Integer, Integer> map;\n        int k;\n\n        public Trie(int k) {\n            this.root = new Node();\n            this.map = new TreeMap<>(); //key 深度  value数量  确保node.count>=k\n            this.k = k;\n        }\n\n        public void insert(String word) {\n            Node node = root;\n            int depth = node.depth;\n            for (int i = 0; i < word.length(); i++) {\n                int c = (word.charAt(i) - 'a');\n                if (node.nexts[c] == null) {\n                    node.nexts[c] = new Node();\n                }\n                node = node.nexts[c];\n                node.count++;\n                node.depth = (++depth);\n                if (node.count >= k) {\n                    map.put(depth, map.getOrDefault(depth, 0) + 1);\n                }\n            }\n            node.end = true;\n        }\n\n        public int romove(String word) {\n            Node node = root;\n            for (int i = 0; i < word.length(); i++) {\n                int c = (word.charAt(i) - 'a');\n                node = node.nexts[c];\n                if (node.count >= k) { //存在于map中\n                    map.put(node.depth, map.get(node.depth) - 1);\n                    if (map.get(node.depth) == 0) map.remove(node.depth);\n                }\n                node.count--;\n            }\n            if (map.size() == 0) return 0;\n            return map.lastKey();\n        }\n\n    }\n\n    public int maxSum(int[] nums) {\n        TreeSet<Integer> set = new TreeSet<>();\n        for (int num : nums) {\n            set.add(num);\n        }\n        int ans = 0;\n        for (int num : set) {\n            if (num >= 0) {\n                ans += num;\n            }\n        }\n        if (set.last() < 0) {\n            ans = set.last();\n        }\n        return ans;\n    }\n}","author":"时间的音符","submissionId":"611227837"},[]]},{"1600":[{"id":"1600","fileName":"611227896.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        if(nums[nums.size()-1]<=0){\n            return nums[nums.size()-1];\n        }\n        int ans=0;\n        ans+=nums[0]>0?nums[0]:0;\n        for(int i=1;i<nums.size();++i){\n            if(nums[i]>0&&nums[i]!=nums[i-1]){\n                ans+=nums[i];\n            }\n        }\n        \n        return ans;\n    }\n};","author":"无敌java大王","submissionId":"611227896"},[]]},{"1602":[{"id":"1602","fileName":"611227926.txt","sourceCode":"#include <algorithm>\n#include <array>\n#include <cassert>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <random>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<ll> VL;\ntypedef vector<VL> VVL;\ntypedef vector<string> VS;\ntypedef vector<vector<string>> VVS;\ntypedef vector<bool> VB;\ntypedef vector<vector<bool>> VVB;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\ntemplate <class T>\nusing pq = priority_queue<T>;\ntemplate <class T>\nusing pqg = priority_queue<T, vector<T>, greater<T>>;\n\nconst int INF = 0x3f3f3f3f, MOD = 1e9 + 7, MOD1 = 998'244'353;\nconst ll INFL = 0x3f3f3f3f'3f3f3f3f;\nconst double eps = 1e-8;\nconst int dir[8][2] = {\n    {0, 1}, {0, -1}, {1, 0}, {-1, 0}, {1, 1}, {1, -1}, {-1, 1}, {-1, -1},\n};\nmt19937_64 _m_gen64;\n\nconst ull Pr = 131, Pr1 = 13331;\n\n#define For(i, a, b) for (int i = int(a); i < int(b); ++i)\n#define Rof(i, a, b) for (int i = int(b) - 1; i >= int(a); --i)\n#define For1(i, a, b) for (int i = int(a); i <= int(b); ++i)\n#define Rof1(i, a, b) for (int i = int(b); i >= int(a); --i)\n#define ForE(i, j) for (int i = h[j]; i != -1; i = ne[i])\n\n#define f1 first\n#define f2 second\n#define pb push_back\n#define has(a, x) (a.find(x) != a.end())\n#define nemp(a) (!a.empty())\n#define all(a) (a).begin(), (a).end()\n#define all1(a, len) (a + 1), (a + 1 + len)\n#define SZ(a) int((a).size())\n#define NL cout << 'n';\n\ntemplate <class T>\nbool ckmin(T &a, const T &b) {\n  return b < a ? a = b, 1 : 0;\n}\ntemplate <class T>\nbool ckmax(T &a, const T &b) {\n  return a < b ? a = b, 1 : 0;\n}\n\ntemplate <class T>\nostream &operator<<(ostream &os, const vector<T> &a) {\n  int n = int(a.size()) - 1;\n  for (int i = 1; i <= n; ++i) {\n    os << a[i] << \" n\"[i == n];\n  }\n  return os;\n}\n\ntemplate <class T>\nistream &operator>>(istream &is, vector<T> &a) {\n  int n = int(a.size()) - 1;\n  for (int i = 1; i <= n; ++i) {\n    is >> a[i];\n  }\n  return is;\n}\n\n#ifdef _DEBUG\n#include \"debug.h\"\n#else\n#define dbg(x...)\n#define dbgi(x)\n#define dbgln()\n#define dbgr(x...)\n#endif\n\n// For LeetCode\n#define LN ListNode\n#define LNP ListNode *\n#define TN TreeNode\n#define TNP TreeNode *\n\n#ifdef _DEBUG\nstruct ListNode {\n  int val;\n  ListNode *next;\n  ListNode() : val(0), next(nullptr) {}\n  ListNode(int val) : val(val), next(nullptr) {}\n  ListNode(int val, ListNode *next) : val(val), next(next) {}\n};\n\nstruct TreeNode {\n  int val;\n  TreeNode *left;\n  TreeNode *right;\n  TreeNode() : val(0), left(nullptr), right(nullptr) {}\n  TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n  TreeNode(int x, TreeNode *left, TreeNode *right)\n      : val(x), left(left), right(right) {}\n};\n\nvoid PrePrintLCTree(TNP root) {\n  if (!root) return;\n  dbgi(root->val);\n  PrePrintLCTree(root->left);\n  PrePrintLCTree(root->right);\n}\n\nclass LCCodec {\n public:\n  // Encodes a tree to a single string.\n  string serialize(TreeNode *root) {\n    if (!root) return \"\";\n\n    vector<TNP> a;\n    a.pb(root);\n    string ans;\n\n    while (nemp(a)) {\n      vector<TNP> b;\n\n      string tmp;\n      for (auto x : a) {\n        if (nemp(ans)) {\n          ans += ',';\n        }\n\n        if (x)\n          ans += to_string(x->val);\n        else\n          ans += \"null\";\n      }\n\n      bool ok{false};\n      for (auto x : a) {\n        if (x) {\n          b.pb(x->left);\n          b.pb(x->right);\n\n          if (x->left || x->right) {\n            ok = true;\n          }\n        }\n      }\n\n      if (ok)\n        a = std::move(b);\n      else\n        a = {};\n    }\n\n    return ans;\n  }\n\n  // Decodes your encoded data to tree.\n  TreeNode *deserialize(string data) {\n    vector<TNP> a;\n    int n = SZ(data);\n    vector<string> b;\n\n    if (!n) return nullptr;\n\n    string t;\n    for (auto x : data) {\n      if (x == ',') {\n        b.pb(t);\n        t = \"\";\n      } else\n        t += x;\n    }\n    b.pb(t);\n\n    for (auto x : b) {\n      if (x == \"null\")\n        a.pb(nullptr);\n      else\n        a.pb(new TN(stoi(x)));\n    }\n\n    int m = SZ(a);\n    int i = 0, j = 1;\n\n    while (i < m) {\n      while (i < m && !a[i]) ++i;\n      if (i >= n) break;\n\n      if (j < m) a[i]->left = a[j++];\n      if (j < m) a[i]->right = a[j++];\n      ++i;\n    }\n\n    return a[0];\n  }\n};\n\nLNP CreateList(VI &a) {\n  LN *du{new LN(0)}, *cur{}, *pre{du};\n\n  for (auto x : a) {\n    cur = new LN(x);\n    pre->next = cur;\n    pre = cur;\n  }\n\n  auto res = du->next;\n  delete du;\n  return res;\n}\n\nvoid PrintList(LNP head) {\n  while (head) {\n    dbgi(head->val);\n    head = head->next;\n  }\n  dbgln();\n}\n\n#endif\n// End of LeetCode\nclass Solution {\n public:\n  int maxSum(vector<int> &a) {\n    set<int> s;\n\n    for (auto x : a) {\n      if (s.contains(x)) continue;\n      if (x >= 0) s.insert(x);\n    }\n\n    if (s.empty()) {\n      return *max_element(all(a));\n    } else {\n      return accumulate(all(s), 0LL);\n    }\n  }\n};\n#ifdef _DEBUG\n\nint main(void) {\n  freopen(\"input.txt\", \"r\", stdin);\n  std::ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  _m_gen64.seed(Pr);\n\n  Solution a;\n  int n;\n  while (cin >> n) {\n    VI ve(n);\n    for (auto &x : ve) cin >> x;\n    int res = a.maxSum(ve);\n    dbg(res);\n  }\n\n  return 0;\n}\n\n#endif","author":"太阳骑士","submissionId":"611227926"},[]]},{"1603":[{"id":"1603","fileName":"611227901.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort()\n        if nums[-1] <= 0:\n            return nums[-1]\n        ans = 0\n        exist = []\n        for i,v in enumerate(nums):\n            if v>0 and v not in exist:\n                ans += v\n                exist.append(v)\n        return ans","author":"widespeed","submissionId":"611227901"},[]]},{"1604":[{"id":"1604","fileName":"611227933.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> hash(nums.begin(), nums.end());\n        int the_max = INT_MIN/2;\n        int the_sum = 0;\n        bool add = false;\n        for(auto& it:hash){\n            if(it >= 0){\n                the_sum += it;\n                add = true;\n            }\n            the_max = max(the_max, it);\n        }\n        return add ? the_sum : the_max;\n    }\n};","author":"潜龙","submissionId":"611227933"},[]]},{"1545":[{"id":"1545","fileName":"611227312.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> se;\n        for (int a : nums) {\n            se.insert(a);\n        }\n        if (*se.rbegin() < 0) {\n            return *se.rbegin();\n        }\n        int rtn = 0;\n        for (auto it = se.begin(); it != se.end(); ++it) {\n            rtn += max(0, *it);\n        }\n        return rtn;\n    }\n};","author":"jushuai_lfx","submissionId":"611227312"},[{"id":"1545","similarity":0.7878787878787878,"totOverlap":52,"longestOverlap":18}]],"1605":[{"id":"1605","fileName":"611227927.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums)\n    {\n        int i;\n        int n = nums.size();\n        int ans = 0;\n        set<int, greater<>> s;\n        //sort(nums.rbegin(), nums.rend());\n        for (auto& it : nums) {\n            s.emplace(it);\n        }\n        auto start = s.begin();\n        ans += *s.begin();\n        start++;\n        for (auto it = start; it != s.end(); it++) {\n            if (*it <= 0) {\n                break;\n            }\n            ans += *it;\n        }\n        return ans;\n    }\n};","author":"圣手书生","submissionId":"611227927"},[{"id":"1647","similarity":0.7051282051282052,"totOverlap":55,"longestOverlap":8},{"id":"1647","similarity":0.7878787878787878,"totOverlap":52,"longestOverlap":18}]],"1647":[{"id":"1647","fileName":"611228651.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        set<int> s;\n        for(auto &i : a) {\n            s.insert(i);\n        }\n        if(*s.rbegin() < 0) {\n            return *s.rbegin();\n        }\n        int res = 0;\n        for(auto it = s.rbegin(); it != s.rend(); it++) {\n            if(*it < 0) {\n                break;\n            }\n            res += *it;\n        }\n        return res;\n    }\n};","author":"后青春期的YXY","submissionId":"611228651"},[{"id":"1605","similarity":0.7051282051282052,"totOverlap":55,"longestOverlap":8}]]},{"1607":[{"id":"1607","fileName":"611228035.txt","sourceCode":"func maxSum(nums []int) int {\n\tans := 0\n\tcur := -101\n\trecord := make(map[int]bool)\n\tfor _, num := range nums {\n\t\trecord[num] = true\n\t}\n\tfor key, value := range record {\n\t\tif value && key > 0 {\n\t\t\tans += key\n\t\t}\n\t\tcur = max(cur, key)\n\t}\n\tif cur < 0{\n\t\tans = cur\n\t}\n\treturn ans\n}\n","author":"something  for   nothing","submissionId":"611228035"},[]]},{"1609":[{"id":"1609","fileName":"611228038.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        cnt = Counter(nums)\n        v = sorted(cnt.keys(), reverse=True)\n        \n        if v[0] <=0:\n            return v[0]\n        ans = 0    \n        for c in v:\n            if c > 0:\n                ans += c \n            else:\n                break\n        return ans","author":"flower","submissionId":"611228038"},[]]},{"1613":[{"id":"1613","fileName":"611228069.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size(), ans=INT_MIN;\n        int neg=0;\n        for(int i:nums){\n            ans=max(ans, i);\n        }\n        if(ans<=0){\n            return ans;\n        }\n        ans=INT_MIN;\n        for(int i=0;i<n;++i){\n            unordered_set<int> used;\n            int sm=0;\n            for(int j=i;j<n;++j){\n                int v=nums[j];\n                if(v>0&&used.count(v)==0){\n                    used.insert(v);\n                    sm+=v;\n                }\n                ans=max(ans, sm);\n            }\n        }\n        return ans;\n    }\n};","author":"无名棋脚","submissionId":"611228069"},[]]},{"1614":[{"id":"1614","fileName":"611228087.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums)\n    {\n        set<int> s;\n        for (auto x : nums)\n            s.insert(x);\n        priority_queue<int> q;\n        for (auto x : s)\n            q.push(x);\n        if (q.top() < 0)\n            return q.top();\n        int ans = 0;\n        while(!q.empty())\n        {\n            int tp = q.top();\n            q.pop();\n            if (tp >= 0)\n                ans += tp;\n            else\n                break;\n        }\n        return ans;\n    }\n};","author":"walk-alone","submissionId":"611228087"},[]]},{"1615":[{"id":"1615","fileName":"611228094.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        dic=set()\n        ans=0\n        count=0\n        for i in nums:\n            if i not in dic and i>0:\n                ans+=i\n                dic.add(i)\n                count+=1\n        if count>0:\n            return ans\n        else:\n            return max(nums)","author":"无名氏","submissionId":"611228094"},[]]},{"1616":[{"id":"1616","fileName":"611228079.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        cnt = Counter(nums)\n        a = sorted(cnt.keys(), reverse=True)\n        if a[0]<=0:\n            return a[0]\n        s = sum(k for k in a if k>0)\n        return s","author":"ANG_GAO","submissionId":"611228079"},[]]},{"1617":[{"id":"1617","fileName":"611228033.txt","sourceCode":"class Solution {\n    fun maxSum(nums: IntArray): Int {\n        // 删除任意数量的元素，不能为 空\n        // 选出 子数组（连续、非空 的元素序列） <- 子序列\n        //     元素 互不相同 hashset\n        //     最大元素和\n        // 选正数 > 0? 同时 max?\n        // 1 <= nums.length <= 100\n        // -100 <= nums[i] <= 100\n        // 暴力 \n\n        val set = HashSet<Int>()\n        var res = 0\n        // 1 <= nums.length <= 100\n        var max = Int.MIN_VALUE\n        for (num in nums) {\n            if (num > 0 && num !in set) {\n                res += num\n                set += num\n            }\n            max = max(max, num)\n        }\n        return if (res == 0) max else res\n    }\n}","author":"Loving Merkle","submissionId":"611228033"},[]]},{"1618":[{"id":"1618","fileName":"611228097.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        if (n == 1)\n        {\n            return nums[0];\n        }\n\n        auto maxIter = max_element(nums.begin(), nums.end());\n        if (*maxIter < 0)\n        {\n            return *maxIter;\n        }\n\n        set<int> uniqueNumsSet;\n        int sum = 0;\n        for (int &num : nums)\n        {\n            if (num > 0 && uniqueNumsSet.count(num) == 0)\n            {\n                uniqueNumsSet.insert(num);\n                sum += num;\n            }\n        }\n\n        return sum;\n    }\n};","author":"Vulpix","submissionId":"611228097"},[]]},{"1620":[{"id":"1620","fileName":"611228106.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n        int max = Integer.MIN_VALUE,sum = 0;\n        HashSet<Integer> hs = new HashSet<>();\n        for(int i=0;i<n;i++) {\n            hs.add(nums[i]);\n        }\n        boolean flag = false;\n        for(Integer v:hs) {\n            if(v>0) {\n                sum+=v;\n                flag = true;\n            } else {\n                max = Math.max(max,v);\n            }\n        }\n        return flag?sum:max;\n    }\n}","author":"Knarf","submissionId":"611228106"},[]]},{"1622":[{"id":"1622","fileName":"611228157.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if all(x <= 0 for x in nums):\n            return max(nums)\n        t = []\n        for x in nums:\n            if x > 0:\n                t.append(x)\n        s = set(t)\n        return sum(s)","author":"瞌睡菇","submissionId":"611228157"},[]]},{"1623":[{"id":"1623","fileName":"611228167.txt","sourceCode":"\nclass Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        boolean minusFlag = true;\n        boolean[] has = new boolean[101];\n        for(int i=0;i<nums.length;i++) {\n            if(nums[i]>=0) {\n                minusFlag = false;\n                has[nums[i]] = true;\n            }\n        }\n        if(minusFlag) {\n            // 全是负数的话，返回最大的\n            return nums[nums.length-1];\n        }\n        int ret = 0;\n        for(int i=0;i<has.length;i++) {\n            if(has[i]) {\n                ret += i;\n            }\n        }\n        return ret;\n    }\n}\n","author":"抽烟喝酒打麻将","submissionId":"611228167"},[]]},{"1624":[{"id":"1624","fileName":"611228226.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        // nums.erase(unique(nums.begin(), nums.end()));\n        unordered_set<int> s;\n        int ans = 0, mx = INT_MIN;\n        for(int &n:nums){\n            if(s.contains(n)){\n                continue;\n            }\n            s.insert(n);\n            if(n > 0){\n                ans += n;\n            }\n            mx = max(n, mx);\n        }\n        return ans > 0 ? ans : mx;\n    }\n};","author":"阿白","submissionId":"611228226"},[]]},{"1627":[{"id":"1627","fileName":"611228266.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int, int> mp;\n        int ans = 0;\n        int flag = 0, ma = -1000;\n        for(int num: nums) {\n            mp[num]++;\n            if(mp[num] == 1 && num > 0) {\n                ans += num;\n            }\n\n            if(num > 0) {\n                flag = 1;\n            }\n            ma = max(ma, num);\n        }\n\n        if(!flag) {\n            return ma;\n        }\n        return ans;\n    }\n};","author":"TA很酷","submissionId":"611228266"},[{"id":"1847","similarity":1.0,"totOverlap":68,"longestOverlap":34},{"id":"1865","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":20}]],"1847":[{"id":"1847","fileName":"611244399.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int, int> mp;\n        int ans = 0;\n        int flag = 0, rs = -1000;\n        for (int e : nums) {\n            mp[e]++;\n            if (mp[e] == 1 && e > 0) {\n                ans += e;\n            }\n            if (e > 0) {\n                flag = 1;\n            }\n            rs = max(rs, e);\n        }\n        if (!flag) {\n            return rs;\n        }\n        return ans;\n    }\n};","author":"SuperDY","submissionId":"611244399"},[{"id":"1627","similarity":1.0,"totOverlap":68,"longestOverlap":34}]],"1865":[{"id":"1865","fileName":"611253121.txt","sourceCode":"class Solution {\npublic:\n    map<int, int> mp;\n    int maxSum(vector<int>& nums) {\n        int ans = 0, flag = 0, ma = -2000;\n        for (int num : nums) {\n            mp[num]++;\n            if (mp[num] == 1 && num > 0) {\n                ans += num;\n            }\n            if (num > 0) {\n                flag = 1;\n            }\n            ma = max(ma, num);\n        }\n        if (!flag) {\n            return ma;\n        }\n        return ans;\n    }\n};","author":"很晚才睡","submissionId":"611253121"},[{"id":"1627","similarity":0.7272727272727273,"totOverlap":48,"longestOverlap":20}]]},{"1628":[{"id":"1628","fileName":"611228271.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        st = set(nums)\n        ans, mx_num = 0, -inf\n        for num in st:\n            if num > 0:\n                ans += num\n            mx_num = max(mx_num, num)\n        return mx_num if mx_num < 0 else ans\n                \n        ","author":"milan","submissionId":"611228271"},[]]},{"1629":[{"id":"1629","fileName":"611228274.txt","sourceCode":"func maxSum(nums []int) (res int) {\n    mx := -100\n    var st [100]bool\n    for _, num := range nums {\n        if num > 0 {\n            st[num-1] = true\n        }\n        mx = max(mx, num)\n    }\n    for i := 0; i < 100; i++ {\n        if st[i] {\n            res += i+1\n        }\n    }\n    if mx < 0 {\n        return mx\n    }\n    return\n}","author":"zhangliangpeng","submissionId":"611228274"},[]]},{"1630":[{"id":"1630","fileName":"611228309.txt","sourceCode":"int maxSum(int* nums, int numsSize) {\n    int hash[101]={0,};\n    int ans=0;\n    int state=0;\n    for(int i=0;i<numsSize;i++){\n        if(nums[i]<0){\n            continue;\n        }\n        if(hash[nums[i]]){\n            continue;\n        }   \n        ans+=nums[i];\n        hash[nums[i]]=1;\n        state=1;\n    }\n    if(state){\n        return ans; \n    }\n    ans=nums[0];\n    for(int i=1;i<numsSize;i++){\n        ans=fmax(ans,nums[i]);\n    }\n    return ans;\n}","author":"迷路的小朋友","submissionId":"611228309"},[]]},{"1631":[{"id":"1631","fileName":"611228322.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        cnt=Counter(nums)\n        ans=0\n        count=0\n        nmx=-inf\n        for x in cnt:\n            if x>0:\n                ans+=x\n                count+=1\n            else:\n                nmx=max(nmx,x)\n        return ans if count>=1 else nmx","author":"Alx","submissionId":"611228322"},[]]},{"1632":[{"id":"1632","fileName":"611228284.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        int mx = ranges::max(a);\n        if (mx <= 0) return mx;\n        int vis[101] = {0};\n        int ans = 0;\n        for (int x : a)\n            if(x > 0 && !vis[x]) {\n                ans += x;\n                vis[x] = 1;\n            }\n        return ans;\n    }\n};","author":"维虵命","submissionId":"611228284"},[]]},{"1634":[{"id":"1634","fileName":"611228360.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> s;\n        for (auto num : nums) {\n            s.insert(num);\n        }\n        int sum = INT_MIN;\n        for (auto num : s) {\n            if (num <= 0) {\n                sum = max(sum, num);\n            }\n            else {\n                sum = max(0, sum);\n                sum += num;\n            }\n        }\n        return sum;\n    }\n};","author":"原","submissionId":"611228360"},[]]},{"1635":[{"id":"1635","fileName":"611228333.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<int> v;\n        int mx = -1000;\n        for(auto a : nums) {\n            if(a>0) v.push_back(a);\n            if(a>mx) mx = a;\n        }\n        if(v.size()==0) return mx;\n        int n = v.size();\n        int ans = -1000;\n        for(int i=0; i<n; i++) {\n            set<int> st;\n            int sum = 0;\n            for(int j=i; j<n; j++) {\n                if(st.find(v[j])!=st.end()) {\n                    continue;\n                } else {\n                    sum += v[j];\n                    st.insert(v[j]);\n                }\n            }\n            ans = max(ans, sum);\n        }\n        return ans;\n    }\n};","author":"元春灵秀","submissionId":"611228333"},[]]},{"1636":[{"id":"1636","fileName":"611228352.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n                int[] v=new int[201];\n        int re=0;\n        int f=0;\n        int p=-200;\n        for (int a:nums){\n            if(v[a+100]==0&&a>=0){\n                re+=a;\n                f=1;\n                v[a+100]++;\n            }else if(a<0){\n                p=Math.max(p,a);\n            }\n        }\n        return f==1?re:p;\n    }\n}","author":"Recursing MeitnerIJ2","submissionId":"611228352"},[]]},{"1640":[{"id":"1640","fileName":"611228463.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        int n = nums.size();\n        int sum = 0;\n        bool flag = false;\n        for (int i = 0; i < n; i++) {\n            if (nums[i] > 0) {\n                flag = true;\n                break;\n            }\n        }\n        if (flag) {\n            for (int i = 0; i < n; i++) {\n                if (nums[i] > 0 && s.find(nums[i]) == s.end()) {\n                    sum += nums[i];\n                    s.insert(nums[i]);\n                }\n            }\n        } else {\n            int maxNum = nums[0];\n            for (int i = 1; i < n; i++) {\n                if (nums[i] > maxNum) {\n                    maxNum = nums[i];\n                }\n            }\n            sum = maxNum;\n        }\n        return sum;\n    }\n};","author":"八达鸟","submissionId":"611228463"},[]]},{"1642":[{"id":"1642","fileName":"611228514.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        pos=[i for i in nums if i>0]\n        pos=list(set(pos))\n        if len(pos)==0:\n            return max(nums)\n        return sum(pos)","author":"wyf","submissionId":"611228514"},[]]},{"1643":[{"id":"1643","fileName":"611228646.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        l = set()\n        pad = -101\n        for i in range(len(nums)):\n            if nums[i]>=0:\n                l.add(nums[i])\n            else:\n                pad = max(nums[i], pad)\n        return sum(l) if len(l) > 0 else pad\n        ","author":"srrrrr","submissionId":"611228646"},[]]},{"1644":[{"id":"1644","fileName":"611228523.txt","sourceCode":"func maxSum(nums []int) int {\n    res := 0\n    tmp := make(map[int]int)\n    for _, c := range nums {\n        if c < 0 {\n            continue\n        }\n        tmp[c] = 1\n    }\n    sort.Ints(nums)\n    if len(tmp) == 0 {\n        return nums[len(nums)-1]\n    }\n    for k, _ := range tmp {\n        res += k\n    }\n    return res\n}","author":"IPRintf","submissionId":"611228523"},[]]},{"1648":[{"id":"1648","fileName":"611228578.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        mn = min(nums)\n        mx = max(nums)\n        if mx <= 0:\n            return mx\n\n        return sum([num for num in nums if num > 0])","author":"白夜暗星","submissionId":"611228578"},[]]},{"1649":[{"id":"1649","fileName":"611228680.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        r={}\n        re=0\n        for i in nums:\n            if i not in r and i>0:\n                r[i]=1\n                re+=i\n        if len(r)==0:\n            re = max(nums)\n        return re","author":"kimoji","submissionId":"611228680"},[]]},{"1650":[{"id":"1650","fileName":"611228682.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = sorted(list(set(nums)), reverse=True)\n        n = len(nums)\n        if nums[0] <= 0:\n            return nums[0]\n            \n        ans = 0\n        for i in range(n):\n            if nums[i] > 0:\n                ans += nums[i]\n\n        return ans","author":"硕风点点","submissionId":"611228682"},[]]},{"1651":[{"id":"1651","fileName":"611228668.txt","sourceCode":"impl Solution {\n    pub fn max_sum(mut nums: Vec<i32>) -> i32 {\n        nums.sort_unstable();\n        nums.dedup();\n        if nums.len() < 2 {\n            return nums[0];\n        }\n        if nums[nums.len() - 2] < 0 {\n            return nums[nums.len() - 1];\n        }\n        nums.iter().filter(|&&x| x >= 0).sum()\n    }\n}","author":"夏侯","submissionId":"611228668"},[]]},{"1652":[{"id":"1652","fileName":"611228705.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n\n        boolean flag = true;\n        int maxX = Integer.MIN_VALUE;\n        for (int x : nums) {\n            if (x > 0) {\n                flag = false;\n            }\n            maxX = Math.max(maxX, x);\n        }\n\n        if (flag) {\n            return maxX;\n        }\n        \n        int ans = 0;\n        Set<Integer> s = new HashSet<>();\n        for (int x : nums) {\n            if (x > 0 && !s.contains(x)) {\n                s.add(x);\n                ans += x;\n            }\n        }\n        return ans;\n    }\n}","author":"Yoke","submissionId":"611228705"},[]]},{"1653":[{"id":"1653","fileName":"611228695.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int ans = Integer.MIN_VALUE;\n        for (int i = 0; i < nums.length; i++) {\n            HashMap<Integer,Integer> hash = new HashMap<>();\n            int path = nums[i];\n            hash.put(nums[i],1);\n            ans = Math.max(ans, path);\n            for (int j = i+1; j < nums.length; j++) {\n                if (hash.containsKey(nums[j]) || nums[j] < 0) {\n                    continue;\n                }\n                path += nums[j];\n                ans = Math.max(ans, path);\n                hash.put(nums[j],1);\n            }\n        }\n\n        return ans;\n    }\n}","author":"fms231","submissionId":"611228695"},[]]},{"1654":[{"id":"1654","fileName":"611228708.txt","sourceCode":"func maxSum(nums []int) (ans int) {\n\thas := make(map[int]bool)\n    cnt := 0\n    maxV := nums[0]\n\tfor _, v := range nums {\n        maxV = max(maxV, v)\n\t\tif v <= 0 {\n\t\t\tcontinue\n\t\t}\n\t\tif !has[v] {\n            cnt++\n\t\t\tans += v\n\t\t\thas[v] = true\n\t\t}\n\t}\n    if cnt == 0 {\n        ans = maxV\n    }\n\treturn\n}","author":"Elated HugleydP","submissionId":"611228708"},[]]},{"1656":[{"id":"1656","fileName":"611228746.txt","sourceCode":"class Solution {\npublic:\n\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int> ump;\n        int ans = 0,n = nums.size();\n        int mx = INT_MIN;\n        for(int i=0;i<n;++i){\n            mx = max(mx,nums[i]);\n            if(nums[i]>=0){\n                if(ump.count(nums[i]))continue;\n                ans += nums[i];\n                ump[nums[i]] = 1;\n            }  \n        }\n        return mx<0 ? mx : ans;\n        \n    }\n};","author":"JoyHuan","submissionId":"611228746"},[]]},{"1657":[{"id":"1657","fileName":"611228768.txt","sourceCode":"class Solution {\npublic:\n  int maxSum(vector<int> &nums) {\n    int ret{INT_MIN};\n    unordered_map<int, int> mp;\n    for (int num : nums) {\n      ++mp[num];\n      if (mp[num] > 1) {\n        continue;\n      }\n      if (ret == INT_MIN) {\n        ret = num;\n      } else {\n        ret = max(ret, max(ret + num, num));\n      }\n    }\n    return ret;\n  }\n};","author":"TwinklerG","submissionId":"611228768"},[]]},{"1658":[{"id":"1658","fileName":"611228772.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans=0\n        hash=dict()\n        if max(nums)<=0:\n            return max(nums)\n        for num in nums:\n            if num>0 and num not in hash:\n                ans+=num\n                hash[num]=1\n        return ans","author":"Clover","submissionId":"611228772"},[]]},{"1660":[{"id":"1660","fileName":"611228794.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n=len(nums)\n        res=max(nums)\n        nums=[v for v in nums if v>=0]\n        if nums==[]:\n            return res\n        nums.sort()\n        nums=nums[::-1]\n        s=set()\n        ss=0\n        for v in nums:\n            if v not in s:\n                ss+=v\n                s.add(v)\n        return ss","author":"nnl","submissionId":"611228794"},[]]},{"1661":[{"id":"1661","fileName":"611228820.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean[] set = new boolean[101];\n        int maxNum = nums[0];\n        for(int x:nums){\n            maxNum = Math.max(maxNum,x);\n            if(x > 0 && x <= 100){\n                set[x] = true;\n            }\n        }\n        if(maxNum <= 0){\n            return maxNum;\n        }\n        int sum = 0;\n        for(int i = 0;i <= 100;i++){\n            if(set[i]){\n                sum+=i;\n            }\n        }\n        return sum;\n    }\n}","author":"水","submissionId":"611228820"},[]]},{"1663":[{"id":"1663","fileName":"611228823.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        int mx=-1e9;\n        set<int>st;\n        int ans=0;\n        for(auto&x:nums){\n            mx=max(mx,x);\n            if(x<0||st.count(x))continue;\n            ans+=x;\n            st.emplace(x);\n        }\n        if(st.empty())ans=mx;\n        return ans;\n    }\n};","author":"烯落","submissionId":"611228823"},[]]},{"1664":[{"id":"1664","fileName":"611228840.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n        boolean positive = false;\n        for(int i = 0; i < n;i ++){\n            if(nums[i] >= 0){\n                positive = true;\n                break;\n            }\n        }\n        if(positive){\n            int cnt = 0;\n            boolean[] flag = new boolean[101];\n            for(int i = 0; i < n; i ++){\n                if(nums[i] >= 0 && !flag[nums[i]]){\n                    nums[cnt ++] = nums[i];\n                    flag[nums[i]] = true;\n                }\n            }\n            int sum = 0;\n            for(int i = 0; i < cnt;i ++){\n                sum += nums[i];\n            }\n            return sum;\n            \n        }\n        else{\n            int maxi = -101;\n            for(int i = 0; i < n; i ++){\n                maxi = Math.max(maxi, nums[i]);\n            }\n            return maxi;\n        }\n    }\n}","author":"熹熹想吃草莓","submissionId":"611228840"},[]]},{"1666":[{"id":"1666","fileName":"611228844.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = max(nums)\n        cur = set()\n        for num in nums:\n            if num > 0:\n                cur.add(num)\n        if sum(cur) > 0:\n            ans = sum(cur)\n        return ans","author":"Charming Jones0uZ","submissionId":"611228844"},[]]},{"1668":[{"id":"1668","fileName":"611228854.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        arr = []\n        minv = -101\n        mp = defaultdict(int)\n        for num in nums:\n            if num>=0 and mp[num]==0:\n                arr.append(num)\n                mp[num]+=1\n            else:\n                minv = max(minv,num)\n        if len(arr)==0:\n            return minv\n        \n        return sum(arr)","author":"Elasxible","submissionId":"611228854"},[]]},{"1669":[{"id":"1669","fileName":"611228857.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,int> mp;\n        int ans=0;\n        int ct=0, mx=INT_MIN;\n        for(int x : nums){\n            ++mp[x];\n            mx = max(mx, x);\n            if(mp[x]==1 & x>0){\n                ans += x;\n                ++ct;\n            }\n        }\n        if(ct==0){\n            ans = mx;\n        }\n        return ans;\n    }\n};","author":"junw59","submissionId":"611228857"},[]]},{"1670":[{"id":"1670","fileName":"611228888.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        neg = []\n        s = set()\n        for num in nums:\n            if num < 0:\n                neg.append(num)\n            else:\n                s.add(num)\n        if len(s) > 0:\n            return sum(s)\n        neg.sort()\n        return neg[-1]\n        ","author":"悖谬","submissionId":"611228888"},[]]},{"1673":[{"id":"1673","fileName":"611228948.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> nums_set;\n        for (int i = 0; i < nums.size(); i++) {\n            nums_set.insert(nums[i]);\n        }\n        int ans = 0;\n        int maxN = INT_MIN;\n        for (auto it = nums_set.begin(); it != nums_set.end(); ++it) {\n            maxN = max(maxN, *it);\n            if (*it >= 0) {\n                ans += *it;\n            }\n        }\n        return maxN < 0 ? maxN : ans;\n    }\n};","author":"lovely","submissionId":"611228948"},[]]},{"1674":[{"id":"1674","fileName":"611228909.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n=list(set(nums))\n        res=0\n        for i in range(len(n)):\n            if res+n[i]>res:\n                res+=n[i]\n        return res if res>0 else max(nums)","author":"凕雨","submissionId":"611228909"},[]]},{"1675":[{"id":"1675","fileName":"611228979.txt","sourceCode":"class Solution {\n    public int maxSum(int[] a) {\n        int n = a.length;\n        int inf = 0x3ffffff;\n        int ans = -inf;\n        for(int i = 0;i < n;i++) {\n            ans = Math.max(ans,a[i]);\n        }\n        if(ans < 0) return ans;\n        Set<Integer> set = new HashSet<>();\n        for(int i = 0;i < n;i++) {\n            if(a[i] > 0) {\n                set.add(a[i]);\n            }\n        }\n        int s = 0;\n        for(int x : set) {\n            s += x;\n        }\n        return Math.max(ans,s);\n\t}\n\n}","author":"一堵墙一扇窗","submissionId":"611228979"},[]]},{"1676":[{"id":"1676","fileName":"611228953.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        st = list(set(nums))\n        mn_ = -inf\n        cnt0 = 0\n        s = 0\n        for x in st:\n            if x < 0 and x > mn_:\n                mn_ = x\n            if x == 0:\n                cnt0 += 1\n            elif x > 0:\n                s += x\n\n        if s == 0 and cnt0 == 0:\n            return mn_\n        elif s == 0 and cnt0 > 0:\n            return 0\n        else:\n            return s","author":"Qeesun","submissionId":"611228953"},[]]},{"1679":[{"id":"1679","fileName":"611229038.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        vis = set()\n        ans = 0\n        for num in nums:\n            if not num in vis and num >= 0:\n                ans += num\n                vis.add(num)\n      \n        if not vis:\n            return max(nums)\n\n        return ans\n                \n            ","author":"0907","submissionId":"611229038"},[]]},{"1680":[{"id":"1680","fileName":"611229037.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        bool n[101]{};\n        int ans = 0;\n        for(const int& val: nums){\n            if(val > 0 && !n[val]){\n                ans += val;\n                n[val] = true;\n            }\n        }\n        if(ans == 0) ans = ranges::max(nums);\n        return ans;\n    }\n};","author":"板鸭鸭R某","submissionId":"611229037"},[]]},{"1681":[{"id":"1681","fileName":"611229051.txt","sourceCode":"function maxSum(nums: number[]): number {\n    const arr = Array.from(new Set(nums)).sort((a, b) => b - a);\n    let sum = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] < 0) break;\n        sum += arr[i];\n    }\n    return sum;\n}\n","author":"30°Nのdestiny","submissionId":"611229051"},[]]},{"1682":[{"id":"1682","fileName":"611229039.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n\n        ans = -inf\n        for length in range(1, n + 1):\n            for i in range(0, n - length + 1):\n                tmp = list(set(nums[i:i+length]))\n                cur = 0\n                all_neg = True\n                for num in tmp:\n                    if num > 0:\n                        cur += num\n                        all_neg = False\n\n                if all_neg:\n                    ans = max(ans, max(tmp))\n                else:\n                    ans = max(ans, cur)\n                \n        return ans\n        ","author":"明子","submissionId":"611229039"},[]]},{"1683":[{"id":"1683","fileName":"611229108.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int, int> hash;\n        int cnt = 0, mi = -INT_MAX;\n        for (int num :nums) if (num>=0)hash[num]++;else{ cnt++;mi = max(mi, num);}\n        int res = 0;\n        if (cnt == nums.size()) {\n            return mi;\n        }\n        for (auto [num, _] : hash) res += num;\n        return res;\n    }\n};","author":"Frakkland","submissionId":"611229108"},[]]},{"1684":[{"id":"1684","fileName":"611229061.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        if (nums.size() == 1) return nums[0];\n\n        set<int> st;\n        int maxNeg = INT_MIN, hasPositive = 0;\n\n        for (int p : nums) {\n            if (p >= 1) {\n                st.insert(p);\n                hasPositive = 1;\n            } else {\n                maxNeg = max(maxNeg, p);\n            }\n        }\n\n        if (!hasPositive) st.insert(maxNeg); // 如果没有正数，加入最大的负数\n\n        int sum = 0;\n        for (int p : st) sum += p;\n        \n        return sum;\n    }\n};\n","author":"Antares","submissionId":"611229061"},[]]},{"1685":[{"id":"1685","fileName":"611229060.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<bool> arr(100+1, false);\n        int res=0;\n        int maxnum=-200;\n        for(auto num : nums){\n            if(num>0) arr[num]=true;\n            else maxnum = max(maxnum, num);\n        }\n        for(int i = 0; i < arr.size(); i++){\n            if(arr[i]==true) res += i;\n        }\n        if(res==0) return maxnum;\n        return res;\n    }\n};","author":"helenjing","submissionId":"611229060"},[]]},{"1687":[{"id":"1687","fileName":"611229183.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mx = INT_MAX;\n        int cnt = 0;\n        map<int,int> mp;\n        for(int num : nums){\n            if(++mp[num] > 1){\n                cnt++;\n                mx = num;\n            }\n            if(cnt == 0)mx = min(mx,num);\n        }\n        int s = 0;\n        for(auto [a,b] : mp){\n                if(a >= 0)\n                s += a;\n        }\n        if(s == 0){\n            s = -111;\n            for(int num : nums){\n                s = max(num,s);\n            }\n        }\n        return s;\n    }\n};","author":"千数","submissionId":"611229183"},[]]},{"1689":[{"id":"1689","fileName":"611229189.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        sum = -1000\n        s = set()\n        for item in nums:\n            s.add(item)\n        tmp = 0\n        for item in s:\n            if item > 0:\n                tmp += item\n            else:\n                sum = max(sum,item)\n        if tmp:\n            sum = max(sum,tmp)\n        return sum","author":"伏波落木","submissionId":"611229189"},[]]},{"1691":[{"id":"1691","fileName":"611229188.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(std::vector<int>& nums) {\n        std::ranges::sort(nums);\n        nums.erase(std::unique(nums.begin(),nums.end()),nums.end());\n        int sum=0;\n        for(auto&e:nums){\n            if (e>0)sum+=e;\n        }\n        return sum==0?nums.back():sum;\n    }\n};","author":"Master Ender","submissionId":"611229188"},[]]},{"1692":[{"id":"1692","fileName":"611229406.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet();\n        for (int i = 0; i < nums.length; ++ i) {\n            set.add(nums[i]);\n        }\n        int ans1 = -0x3fffff;\n        int ans2 = -0x3fffff;\n        for (Integer v : set) {\n            if (v < 0) ans1 = Math.max(ans1, v);\n            else {\n                if (ans2 == -0x3fffff) {\n                    ans2 = 0;\n                }\n                ans2 += v;\n            }\n        }\n\n        return Math.max(ans1, ans2);\n    }\n}","author":"造假不好","submissionId":"611229406"},[]]},{"1693":[{"id":"1693","fileName":"611229332.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        auto end = unique(nums.begin(), nums.end());\n        int ans = 0, mx = nums[0], add = 0;\n        for(auto i = nums.begin(); i != end; ++i){\n            mx = max(mx, *i);\n            if(*i < 0) continue;\n            ++add;\n            ans += *i;\n        }\n        if(add == 0) return mx;\n        return ans;\n    }\n};","author":"IN0vation","submissionId":"611229332"},[]]},{"1696":[{"id":"1696","fileName":"611229436.txt","sourceCode":"func maxSum(nums []int) int {\n\tans := 0\n\texist := make(map[int]bool)\n\tmaxNum := math.MinInt\n\tfor _, num := range nums {\n\t\tif num > 0 && !exist[num] {\n\t\t\tans += num\n\t\t\texist[num] = true\n\t\t}\n\t\tmaxNum = max(maxNum, num)\n\t}\n\tif maxNum < 0 {\n\t\treturn maxNum\n\t}\n\treturn ans\n}","author":"Leon","submissionId":"611229436"},[]]},{"1697":[{"id":"1697","fileName":"611229572.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int ans = 0;\n        unordered_map<int,int> m;\n        int minv = INT_MIN;\n        for(auto i:nums) {\n            if(i>=0)m[i]++;\n            else minv = max(minv, i);\n        }\n        if(!m.empty()) {\n            for(auto [k,v]:m)ans+=k;\n        } else {\n            ans = minv;\n        }\n        return ans;\n    }\n};","author":"vinson","submissionId":"611229572"},[]]},{"1699":[{"id":"1699","fileName":"611229382.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int i,j,ij,n=nums.size(),k=0,ans = nums[0];\n        set<int> st;\n        for(i=0;i<n;++i){\n            ans = max(ans, nums[i]);\n            if (nums[i]>0) st.insert(nums[i]);\n        }\n        if (st.size()>0){\n            auto it = st.begin();\n            while(it!=st.end()){\n                k=k+*it;++it;\n            }\n            ans = max(ans, k);\n        }\n\n        return ans;\n    }\n};","author":"算法笔试","submissionId":"611229382"},[]]},{"1703":[{"id":"1703","fileName":"611229587.txt","sourceCode":"from typing import List\n\n\nclass Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        remain = set()\n        nums.sort()\n        for i in range(len(nums)):\n            if nums[i] > 0:\n                remain.add(nums[i])\n        sm = sum(remain)\n        if sm > 0:\n            return sm\n        return nums[-1]\n\n","author":"Jarvan","submissionId":"611229587"},[]]},{"1704":[{"id":"1704","fileName":"611229609.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        unordered_map<int,int>mp;\n        int n = nums.size();\n        int ans=  nums[n-1];\n        int tot = 0,flag=0;\n        for(int i=0;i<n;i++){\n            if(nums[i]>=0&&mp[nums[i]]==0){\n                flag =1;\n                tot+=nums[i];\n                mp[nums[i]]+=1;\n            }\n        }\n        if(flag)return tot;\n        return nums[n-1];\n    }\n};","author":"Fanciorange","submissionId":"611229609"},[]]},{"1705":[{"id":"1705","fileName":"611229605.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        if (nums.length == 1) return nums[0];\n        Arrays.sort(nums);\n        int ans = nums[0] > 0 ? nums[0] : 0;\n        int max = Integer.MIN_VALUE;\n        for (int i = 1; i < nums.length; i++) {\n            if (nums[i] >= 0 && nums[i] != nums[i - 1]) ans += nums[i];\n            max = Math.max(max, nums[i]);\n        }\n        return max < 0 ? max : ans;\n\t}\n}","author":"Holden","submissionId":"611229605"},[]]},{"1706":[{"id":"1706","fileName":"611229635.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        #枚举\n        s=set()\n        ans=0\n        flag=0\n        for num in nums:\n            if num not in s:\n                if num>=0:\n                    ans+=num\n                    flag=1\n                s.add(num)\n        if flag==0:\n            return max(list(s))\n                \n        return ans\n        \n        ","author":"炼红心","submissionId":"611229635"},[]]},{"1708":[{"id":"1708","fileName":"611229619.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        std::unordered_set<int> M;\n        int n = nums.size();\n        int res = nums[n - 1];\n        M.insert(nums[n - 1]);\n        \n        \n        for (int i = nums.size() - 2; i >=0 ;-- i) {\n            if (M.count(nums[i]) == 0) {\n                res = std::max(res, res + nums[i]);\n                M.insert(nums[i]);\n            }\n        }\n        return res;\n        \n    }\n};","author":"是个小号","submissionId":"611229619"},[]]},{"1709":[{"id":"1709","fileName":"611229725.txt","sourceCode":"func maxSum(nums []int) (ans int) {\n    st := map[int]struct{}{}\n    for _, x := range nums {\n        st[x] = struct{}{}\n    }\n\n    mx, empty := math.MinInt, true\n    for x := range st {\n        if x < 0 {\n            mx = max(mx, x)\n        } else {\n            empty = false\n            ans += x\n        }\n    }\n\n    if empty {\n        return mx\n    }\n\n    return\n}","author":"tyrantzhao","submissionId":"611229725"},[]]},{"1712":[{"id":"1712","fileName":"611229719.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        boolean[] exists = new boolean[101];\n        int result = 0, max = -100;\n        for (int i : nums) {\n            if (i >= 0 && !exists[i]) {\n                result += i;\n                exists[i] = true;\n            }\n            max = Math.max(max, i);\n        }\n        if (result == 0 && !exists[0]) {\n            result = max;\n        }\n        return result;\n    }\n}","author":"Sylze","submissionId":"611229719"},[]]},{"1714":[{"id":"1714","fileName":"611229784.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> used = new HashSet<>();\n        int sum=0, max=nums[0];\n        for(int i=0; i<nums.length; i++){\n            if(nums[i]>0 && !used.contains(nums[i])){\n                sum += nums[i];\n                used.add(nums[i]);\n            }\n            if(nums[i]>max) max=nums[i];\n        }\n        return max<0 ? max : sum;\n    }\n}","author":"Naughty DijkstraMYR","submissionId":"611229784"},[]]},{"1716":[{"id":"1716","fileName":"611229803.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0;\n        int ok = 0;\n        int g;\n        set<int> s(nums.begin(), nums.end());\n        for (auto x : s){\n            g = x;\n            if (x > 0){\n                ok = 1;\n                ans += x;\n            }\n        }\n        if (!ok){\n            ans = g;\n        }\n        return ans;\n    }\n};","author":"lart1n","submissionId":"611229803"},[]]},{"1717":[{"id":"1717","fileName":"611229818.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxneg = -0x3f3f3f3f;\n        bool hasZeroPostive = false;\n        for(auto num:nums){\n            if(num<0){\n                maxneg = max(num,maxneg);\n            }\n            else{\n                hasZeroPostive = true;\n                break;\n            }\n        }\n        int res = 0;\n        unordered_set<int>hash;\n        if(hasZeroPostive){\n            for(auto num:nums){\n                if(num>=0&&hash.find(num)==hash.end()){\n                    hash.insert(num);\n                    res+=num;\n                }\n            }\n            return res;\n        }\n        else{\n            return maxneg;\n        }\n    }\n};","author":"zsc","submissionId":"611229818"},[]]},{"1718":[{"id":"1718","fileName":"611229806.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        t = {}\n        for n in nums:\n            if n not in t and n > 0:\n                t[n] = 1\n        if not t:\n            return max(nums)\n        return sum(list(t.keys()))\n                \n                \n        ","author":"芦荟","submissionId":"611229806"},[]]},{"1719":[{"id":"1719","fileName":"611229860.txt","sourceCode":"class Solution\n{\npublic:\n    int maxSum(vector<int> const &nums)\n    {\n        bool vis[128];\n        memset(vis, 0, sizeof(vis));\n        int sm = 0;\n        for (int const num : nums)\n        {\n            if (num <= 0 || vis[num]) continue;\n            vis[num] = true;\n            sm += num;\n        }\n        return sm ? sm : *max_element(nums.cbegin(), nums.cend());\n    }\n};","author":"heartunderblade","submissionId":"611229860"},[]]},{"1720":[{"id":"1720","fileName":"611229914.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        arr = sorted(set(nums))\n        print(arr)\n        if arr[-1] < 0:\n            return arr[-1]\n        i = bisect.bisect(arr, 0)\n        return sum(arr[i:])","author":"BlueZ","submissionId":"611229914"},[]]},{"1721":[{"id":"1721","fileName":"611229713.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int sum = *max_element(nums.begin(), nums.end());\n\n        auto f = [&](int i, int j) -> int {\n            unordered_set<int> visited;\n            int res = 0, cnt = 0;\n            for (int k = i; k <= j; k++) {\n                if (visited.count(nums[k]))\n                    continue;\n                if (nums[k] < 0)\n                    continue;\n                ++cnt;\n                visited.insert(nums[k]);\n                res += nums[k];\n            }\n            if (cnt > 0)\n                return res;\n            return INT_MIN;\n        };\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                sum = max(sum, f(i, j));\n            }\n        }\n        return sum;\n    }\n};","author":"umiGen","submissionId":"611229713"},[]]},{"1722":[{"id":"1722","fileName":"611229848.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        ranges::sort(nums);\n        unordered_set<int> is;\n        int ans = 0;\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            if (!is.empty() && nums[i] <= 0) break;\n            if (is.find(nums[i]) == is.end()) {\n                ans += nums[i];\n                is.insert(nums[i]);\n            }\n        }\n        return ans;\n    }\n};","author":"LICDAK","submissionId":"611229848"},[]]},{"1723":[{"id":"1723","fileName":"611229969.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> vs;int s=0,ma=-101;\n        bool f=false;\n        for(int x:nums){\n        \tma=max(ma,x);if(x>0&&!vs.count(x)){\n        \t\ts+=x;f=true;vs.insert(x);\n        \t}\n        }if(f)return s;\n        return ma;\n    }\n};","author":"forgo","submissionId":"611229969"},[]]},{"1724":[{"id":"1724","fileName":"611230063.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        bool check = false;\n        int ts = 0;\n        int n = nums.size();\n        for(int i=0;i<n;++i){\n            if(st.count(nums[i])) continue;\n            if(nums[i]>=0){\n                st.insert(nums[i]);\n                ts += nums[i];\n                check = true;\n            }\n        }\n        return check?ts:*max_element(nums.begin(), nums.end());\n    }\n};","author":"烈焰的冰玫瑰","submissionId":"611230063"},[]]},{"1725":[{"id":"1725","fileName":"611230068.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int v : nums) {\n            if (v > 0) set.add(v);\n        }\n        if (set.isEmpty()) return Arrays.stream(nums).max().orElseThrow();\n        int ans = 0;\n        for (Integer v : set) {\n            ans += v;\n        }\n        return ans;\n    }\n}","author":"ning1ing","submissionId":"611230068"},[]]},{"1726":[{"id":"1726","fileName":"611230027.txt","sourceCode":"/*\n    \n*/\nfunc maxSum(nums []int) int {\n    if slices.Max(nums) < 0 {\n        mx := slices.Max(nums)\n        for _, c := range nums {\n            if c > mx {\n                mx = c\n            }\n        }\n        return mx\n    } \n    rec := make(map[int]bool)\n    ans := 0\n    for _, c := range nums {\n        \n        if c > 0 && rec[c] == false {\n            ans += c\n            rec[c] = true\n        }\n    }\n\n    return ans\n}","author":"Serendipity","submissionId":"611230027"},[]]},{"1727":[{"id":"1727","fileName":"611230097.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> s;\n        int maxNeg = INT_MIN;\n        int ans = 0;\n        bool has_pos = false;\n        for(const int n:nums){\n            if(s.find(n) == s.end()){\n                if(n<0){\n                    maxNeg = max(maxNeg,n);\n                }else{\n                    has_pos = true;\n                    ans += n;\n                    s.insert(n);\n                }\n            }\n        }\n        if(has_pos)return ans;\n        else return maxNeg;\n    }\n};","author":"Yhc8Lx5g9O","submissionId":"611230097"},[]]},{"1729":[{"id":"1729","fileName":"611230077.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        set<int>st;\n        int sum=0;\n        for(auto&x:nums){\n            st.insert(x);\n        }\n        for(auto&x:st){\n            if(x>0) sum+=x;\n        }\n        int mx=INT_MIN;\n        if(sum==0){\n            for(int i=0;i<n;i++){\n            if(nums[i]<=0) mx=max(mx,nums[i]);\n        }\n            return mx;\n        }\n        \n        return sum;\n    }\n};","author":"迷鹿","submissionId":"611230077"},[]]},{"1731":[{"id":"1731","fileName":"611230152.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int sum = 0;\n        if(nums[nums.length - 1] < 0)\n        {\n            sum  = nums[nums.length - 1];\n            return sum;\n        }\n        \n        for(int i = 0;i < nums.length;i++){\n            if(nums[i] < 0){\n                continue;\n            }\n            if(i > 0 && nums[i] == nums[i-1]){\n                continue;\n            }\n            sum += nums[i];\n        }\n        return sum;\n    }\n}","author":"香菜是魔鬼","submissionId":"611230152"},[]]},{"1732":[{"id":"1732","fileName":"611230226.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int ans = nums[nums.length - 1];\n\n        for (int ptr = (nums.length - 2); ptr >= 0; ptr--) {\n            if (nums[ptr] <= 0) {\n                break;\n            }\n            if (nums[ptr] == nums[ptr + 1]) {\n                continue;\n            }\n            ans += nums[ptr];\n        }\n\n        return ans;\n    }\n}","author":"随缘","submissionId":"611230226"},[]]},{"1736":[{"id":"1736","fileName":"611230429.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_map<int,bool> mp;\n        int ans=0,maxa=-200;\n        for(int a:nums){\n            maxa=max(a,maxa);\n            if(a<=0||mp[a])continue;\n            mp[a]=true;\n            ans+=a;\n        }\n        if(ans==0)return maxa;\n        return ans;\n    }\n};","author":"Ch7k","submissionId":"611230429"},[]]},{"1737":[{"id":"1737","fileName":"611230617.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> s = new HashSet<>();\n        int max = Integer.MIN_VALUE, sum = 0;\n        for (int num : nums) {\n            max = Math.max(max, num);\n            if (!s.contains(num) && num > 0) {\n                s.add(num);\n                sum += num;\n            }\n        }\n        return max <= 0 ? max : sum;\n    }\n}","author":"TrackNNN","submissionId":"611230617"},[]]},{"1738":[{"id":"1738","fileName":"611230310.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = 0\n        frq = defaultdict(int)\n        for num in nums:\n            frq[num] += 1\n            if frq[num] != 1:\n                continue\n            else:\n                ans += max(num, 0)\n    \n        return ans if max(nums) >= 0 else max(nums)\n        ","author":"lafYY","submissionId":"611230310"},[]]},{"1739":[{"id":"1739","fileName":"611230677.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = sorted(nums,reverse = True)\n        s = set([])\n        res = 0 \n        if nums[0] <= 0 :\n            return nums[0]\n        for v in nums :\n            if v not in s and v > 0 :\n                res +=v \n                s.add(v)\n        return res \n        ","author":"spx","submissionId":"611230677"},[]]},{"1741":[{"id":"1741","fileName":"611230681.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        auto it = unique(nums.begin(), nums.end());\n        int sum = 0;\n        for(auto i = it - 1; i >= nums.begin(); i--){\n            if(i != it - 1 && *i < 0) break;\n            sum += *i;\n        }\n        return sum;\n    }\n};","author":"Ged_Relay","submissionId":"611230681"},[]]},{"1742":[{"id":"1742","fileName":"611230762.txt","sourceCode":"const int INF = 0x3f3f3f3f;\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int ans = -INF;\n        map<int,bool> mp;\n        int res = -INF;\n        for(int i = 0;i<n;i++){\n            ans = max(ans,nums[i]);\n            if(!mp[nums[i]]){\n                mp[nums[i]] = true;\n                if(nums[i]>=0){\n                    if(res == -INF)res = nums[i];\n                    else res+=nums[i];\n                }\n            }\n        }\n        ans = max(ans,res);\n        return ans;\n    }\n\n};","author":"loliconsk","submissionId":"611230762"},[]]},{"1744":[{"id":"1744","fileName":"611230573.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        ans = 0\n        vis = set()\n        f = False\n        m = -inf\n        for x in nums:\n            if x in vis:\n                continue\n            if x >= 0:\n                ans += x\n                f = True\n            vis.add(x)\n            m = max(m,x)\n        if not f:\n            return m\n        else:\n            return ans","author":"__yyn__","submissionId":"611230573"},[]]},{"1745":[{"id":"1745","fileName":"611231051.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        sort(nums.begin(), nums.end(), greater<int>());\n        set<int> st;\n        int sum = 0;\n        for(int i = 0; i < n; i++) {\n            if(st.count(nums[i])) {\n                continue;\n            }\n            if(i == 0 or nums[i] > 0) {\n                sum += nums[i];\n                st.insert(nums[i]);\n            }\n        }\n        return sum;\n    }\n};","author":"shi_logic","submissionId":"611231051"},[]]},{"1746":[{"id":"1746","fileName":"611231081.txt","sourceCode":"class Solution {\npublic:\n    unordered_map<int, int> umap;\n    int max_num;\n    int sum;\n    int maxSum(vector<int>& nums) {\n        max_num = nums[0];\n        for(int num : nums){\n            max_num = max(max_num, num);\n            if(num <= 0) continue;\n            if(umap[num] == 0){\n                umap[num] ++;\n                sum += num;\n            }\n        }\n        if(max_num <= 0) return max_num;\n        else return sum;\n    }\n};","author":"Nifty NobelkDu","submissionId":"611231081"},[]]},{"1747":[{"id":"1747","fileName":"611230651.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& a) {\n        vector<int> nums;\n        map<int, int> mp;\n        for(auto x : a) if(x > 0 && mp[x] == 0) {\n            nums.push_back(x);\n            mp[x] ++;\n        } \n        if(nums.size() == 0) {\n           return *max_element(a.begin(), a.end()); \n        }\n        // int n = nums.size();\n        // int res = -1e9;\n        // for(int len = 1; len <= n; len ++) {\n        //     for(int i = 0; i + len -1 < n; i ++) {\n        //         int j = i + len - 1;\n        //         set<int> s;\n        //         for(int k = i; k <= j; k ++) {\n        //             s.insert(nums[k]);\n        //         }\n                \n        //         if(s.size() == j - i + 1) {\n        //             int t = 0;\n        //             for(auto x : s) t += x;\n        //             if(t > res) res = t;\n        //         }\n        //         // cout << len << ' ' << i << ' ' << j << ' '  << endl;\n        //     }\n        // }\n        return accumulate(nums.begin(), nums.end(), 0);\n    }\n};","author":"zouyu","submissionId":"611230651"},[]]},{"1748":[{"id":"1748","fileName":"611230887.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nnums = [x for x in nums if x > 0]\n        if not nnums:\n            return sorted(nums)[-1]\n        cnt = Counter(nnums)\n        ans = 0\n        for k,v in cnt.items():\n            ans+=k\n        return ans","author":"ycq","submissionId":"611230887"},[]]},{"1749":[{"id":"1749","fileName":"611231200.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        Set<Integer> set1 = new TreeSet<>();\n        int n = nums.length;\n        int cnt = 0;\n        for(int i = 0; i<n;i++) {\n            if(nums[i] > 0) {\n                set.add(nums[i]);\n            }\n            else set1.add(nums[i]);\n        }\n        int ans = 0;\n        if(!set.isEmpty()) {\n            for(Integer it: set) {\n                ans+=it;\n            }\n        }\n        else ans = set1.stream().max(Integer::compareTo).get();\n        return ans;\n    }\n}","author":"文明键盘侠","submissionId":"611231200"},[]]},{"1750":[{"id":"1750","fileName":"611231107.txt","sourceCode":"class Solution {\npublic:\n    static int maxSum(const vector<int> &nums) {\n        unordered_set<int> numSet;\n        for (const int num: nums) {\n            if (num > 0) numSet.insert(num);\n        }\n        return numSet.empty() ? ranges::max(nums) : accumulate(numSet.begin(), numSet.end(), 0);\n    }\n};","author":"trdtrdsd","submissionId":"611231107"},[]]},{"1751":[{"id":"1751","fileName":"611231250.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map<int,bool> vis;\n        vector<int> q;\n        for (int i = 0;i<nums.size();i++){\n            if (vis[nums[i]] == 1){\n\n            }else{\n                vis[nums[i]] = 1;\n                q.push_back(nums[i]);\n            }\n        }        \n        sort(q.begin(),q.end());\n        int res = 0;\n        for (int i = q.size() - 1;i>=0;i--){\n            if (q[i] > 0) res += q[i];\n        }\n        if (q[q.size() - 1] < 0){\n            res = q[q.size() - 1];\n        }\n        return res;\n    }\n};","author":"羧基碱","submissionId":"611231250"},[]]},{"1752":[{"id":"1752","fileName":"611231349.txt","sourceCode":"func maxSum(nums []int) int {\n    ans := -1000005\n    for i := 0; i < len(nums); i++{\n        ans = max(ans,nums[i])\n    }\n    \n\tfor i := 0; i < len(nums); i++ {\n\t\tfor j := i; j < len(nums); j++ {\n\t\t\tmp := make(map[int]int)\n            sum := 0\n\t\t\tfor x := i; x <= j; x++ {\n                if nums[x] <= 0 {\n                    continue\n                }\n                if mp[nums[x]] != 0 {\n                    continue\n                }\n                mp[nums[x]] = 1\n                sum += nums[x]\n\t\t\t}\n            if len(mp) != 0{\n                ans = max(ans,sum)\n            }\n            \n\t\t}\n\t}\n    return ans\n}","author":"回家","submissionId":"611231349"},[]]},{"1753":[{"id":"1753","fileName":"611231094.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        f = True\n        c = set(nums)\n        ans = 0\n        for i in c:\n            if i>=0:\n                ans += i\n                f = False\n        if f: return max(nums)\n        return ans","author":"啦咘啦哆警长","submissionId":"611231094"},[]]},{"1755":[{"id":"1755","fileName":"611231318.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        \n        mx = max(nums)\n        if mx < 0:\n            return mx\n        new = set()\n        for i, x in enumerate(nums):\n            if x > 0:\n                new.add(x)\n        return sum(new)","author":"stupefy","submissionId":"611231318"},[]]},{"1756":[{"id":"1756","fileName":"611231500.txt","sourceCode":"class Solution:\n    def maxSum(self, nums) -> int:\n        ret=-110\n        SUM=0\n        see=set()\n        for i in nums:\n            ret=max(ret,i)\n            if i>0 and i not in see:\n                SUM+=i\n                see.add(i)\n        if see:\n            ret=max(ret,SUM)\n        return ret","author":"broshen","submissionId":"611231500"},[]]},{"1758":[{"id":"1758","fileName":"611231586.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int res =0;\n        unordered_set<int> s;\n        int max_num = INT_MIN;\n        for(int i=0;i<n;++i)\n            {\n                max_num = max(max_num,nums[i]);\n                if(s.find(nums[i])==s.end()&&nums[i]>0)\n                {\n                    s.insert(nums[i]);\n                    res+=nums[i];\n                }\n            }\n        return max_num<0?max_num:res;\n    }\n};","author":"倚海观澜","submissionId":"611231586"},[]]},{"1759":[{"id":"1759","fileName":"611231339.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int get_max = ranges::max(nums);\n        if (get_max < 0) {\n            // cout << \"?\" << endl;\n            return get_max;\n        }\n        int ln = nums.size();\n        int sum = 0;\n        for (int len = 1; len <= ln; ++len) {\n            for (int i = 0; i + len - 1 < ln; ++i) {\n                int j = i + len - 1;\n                vector<int> hash(202, 0);\n                int t_sum = 0;\n                int from;\n                for (from = i; from <= j; ++from) {\n                    ++hash[nums[from] + 100];\n                    if (hash[nums[from] + 100] > 1 || nums[from] < 0) {\n                        continue;\n                    } else {\n                        t_sum += nums[from];\n                    }\n                }\n                if (from == j + 1) {\n                    sum = max(sum, t_sum);\n                }\n            }\n        }\n        return sum;\n    }\n};","author":"签到题高手_mmm","submissionId":"611231339"},[]]},{"1762":[{"id":"1762","fileName":"611231593.txt","sourceCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSum = function(nums) {\n    let n = nums.length\n    nums.sort((a, b) => a - b)\n    if(nums[n - 1] <= 0) {\n        return nums[n - 1]\n    }\n    let sum = 0\n    let map = new Map()\n    for(let end = n - 1; end >= 0; end--) {\n        if(nums[end] <= 0) {\n            break\n        }\n        \n        if(map.has(nums[end])) {\n            continue\n        }\n\n        map.set(nums[end], true)\n        sum += nums[end]\n    }\n\n    return sum\n};","author":"Xuelong","submissionId":"611231593"},[]]},{"1763":[{"id":"1763","fileName":"611231453.txt","sourceCode":"    class Solution {\n        public int maxSum(int[] nums) {\n            Set<Integer> set = new HashSet<>();\n            for (int num : nums) {\n                set.add(num);\n            }\n            Integer[] nowNums = new Integer[set.size()];\n            set.toArray(nowNums);\n            Arrays.sort(nowNums);\n\n            if (nowNums[nowNums.length - 1] <= 0) {\n                return nowNums[nowNums.length - 1];\n            } else {\n                int ans = 0;\n                for (int i = nowNums.length - 1; i >= 0; i--) {\n                    if (nowNums[i] < 0) {\n                        break;\n                    } else {\n                        ans += nowNums[i];\n                    }\n                }\n                return ans;\n            }\n        }\n    }","author":"Sherlocked","submissionId":"611231453"},[]]},{"1764":[{"id":"1764","fileName":"611231828.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        flag = False\n        for x in nums:\n            if x > 0:\n                flag = True\n        if flag == False:\n            return max(nums)\n        ans = 0\n        s = 0\n        for i in range(n):\n            st = set()\n            for j in range(i,n):\n                if nums[j] not in st and  nums[j] >= 0:\n                    st.add(nums[j])\n                    s += nums[j]\n                else:\n                    continue\n            ans = max(ans,s)\n            s = 0\n        return ans","author":"心，月","submissionId":"611231828"},[]]},{"1765":[{"id":"1765","fileName":"611231705.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0, ans_val = nums[0];\n        unordered_set<int> S;\n        for (int i = 0; i < nums.size(); ++i) {\n            ans_val = max(ans_val, nums[i]);\n            if (nums[i] > 0 && (S.count(nums[i]) == 0)) {\n                S.insert(nums[i]);\n                ans += nums[i];\n            }\n        }\n        return ans == 0 ? ans_val : ans;\n    }\n};","author":"","submissionId":"611231705"},[]]},{"1766":[{"id":"1766","fileName":"611231859.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int size = nums.size();\n\n        int ans = 0;\n\n        for (int i = 0; i < size; i ++) {\n            unordered_set<int> mySet;\n            int currentSum = 0;\n            for (int j = i; j < size; j ++) {\n                if (mySet.count(nums[j]) || nums[j] <= 0) {\n                    continue;\n                } else {\n                    currentSum += nums[j];\n                    mySet.insert(nums[j]);\n                }\n                ans = max(ans, currentSum);\n            }\n        }\n        \n        int maxEle = *max_element(nums.begin(), nums.end());\n        if (ans <= 0) {\n            ans = maxEle;\n        }\n        \n        return ans;\n    }\n};","author":"paulyu12","submissionId":"611231859"},[]]},{"1771":[{"id":"1771","fileName":"611232520.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        vs=set()\n        ma=float('-inf')\n        s=0\n        for x in nums:\n            ma=max(ma,x)\n            if x>0 and x not in vs:\n                vs.add(x)\n                s+=x \n        return s if vs else ma ","author":"情初","submissionId":"611232520"},[]]},{"1772":[{"id":"1772","fileName":"611232362.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        int res=0,count=-9999;\n        set<int> si;\n        for(int it:nums){\n            si.insert(it);\n        }\n        for(auto it = si.rbegin(); it != si.rend(); ++it){\n            res+=*it;\n            count=max(count,res);\n        }\n        return count;\n    }\n};","author":"小天才一休","submissionId":"611232362"},[]]},{"1773":[{"id":"1773","fileName":"611232371.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int c[202]={0};\n        for(auto x: nums){\n            c[x+100] = 1;\n        }\n        int f = 0, s = 0;\n        for(int i = 201; i >=0; --i){\n            if(c[i]){\n                int x = i - 100;\n                if(x <= 0 && f) break;\n                f = 1;\n                s += x;\n            }\n        }\n        return s;\n    }\n};","author":"zhangwenyao","submissionId":"611232371"},[]]},{"1774":[{"id":"1774","fileName":"611232655.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = sorted(set(nums), reverse=True)\n        ans, s = -inf, 0\n        for x in nums:\n            s += x\n            ans = max(ans, s)\n        return ans","author":"FatalError","submissionId":"611232655"},[]]},{"1777":[{"id":"1777","fileName":"611232768.txt","sourceCode":"class Solution {\npublic:\nint maxSum(vector<int>& a) {\n  int n = a.size(), posi = 0, neg = 0, zero = 0, mx = INT_MIN;\n  unordered_set<int> s;\n  for (int i = 0; i < n; ++i) {\n    if (a[i] > 0) {\n      if (s.count(a[i])) {\n        continue;\n      }\n      posi += a[i];\n      s.insert(a[i]);\n    } else if (a[i] < 0) {\n      neg += a[i];\n      mx = max(mx, a[i]);\n    } else {\n      ++zero;\n    }\n  }\n  if (posi) {\n    return posi;\n  } else if (zero) {\n    return 0;\n  } else {\n    return mx;\n  }\n}\n};","author":"兜大宝","submissionId":"611232768"},[]]},{"1779":[{"id":"1779","fileName":"611232834.txt","sourceCode":"from typing import List\n\n\nclass Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        if max(nums) <= 0:\n            return max(nums)\n        res = 0\n        cur = set()\n        for num in nums:\n            if num not in cur:\n                res += max(0, num)\n                cur.add(num)\n        return res\n","author":"Lewis.Finch","submissionId":"611232834"},[]]},{"1780":[{"id":"1780","fileName":"611233184.txt","sourceCode":"func maxSum(nums []int) int {\n    mp := make(map[int]int, 0)\n    sum, maxNega := 0, math.MinInt64\n    for i, v := range nums {\n        if v <= 0 {\n            maxNega = max(maxNega, v)\n            continue\n        }\n        \n        if _, ok := mp[v]; !ok {\n            mp[v] = i\n            sum += v\n        }\n    }\n    \n    if sum == 0 {\n        return maxNega\n    }\n    return sum\n}","author":"无名客","submissionId":"611233184"},[]]},{"1784":[{"id":"1784","fileName":"611233288.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max=nums[0],n=nums.length;\n        for(int i:nums)\n            max=Math.max(max,i);\n        if(max<=0) return max;\n        HashMap<Integer,Integer> hash=new HashMap<>();\n        for(int i:nums){\n            if(i>0) hash.put(i,1);\n        }\n        int ans=0;\n        for(int i:hash.keySet())\n            ans+=i;\n        return ans;\n    }\n}","author":"黄彬","submissionId":"611233288"},[]]},{"1785":[{"id":"1785","fileName":"611233472.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n        int mx = Integer.MIN_VALUE;\n        int ans = 0;\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < n; i++) {\n            if (nums[i] >= 0 && !set.contains(nums[i])) {\n                ans += nums[i];\n                set.add(nums[i]);\n            }\n            mx = Math.max(mx, nums[i]);\n        }\n        if (mx <= 0) return mx;\n        return ans;\n    }\n}","author":"Mojo","submissionId":"611233472"},[]]},{"1786":[{"id":"1786","fileName":"611233996.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        int ans = 0;\n        int v2 = Integer.MIN_VALUE;\n        for (int right = 0; right < nums.length; right++) {\n            if (set.contains(nums[right])) {\n                continue;\n            }\n            if (nums[right] < 0) {\n                v2 = Math.max(v2, nums[right]);\n                continue;\n            }\n            set.add(nums[right]);\n            ans += nums[right];\n        }\n        return set.isEmpty() ? v2 : ans;\n    }\n}","author":"Yaron-Xiong","submissionId":"611233996"},[]]},{"1787":[{"id":"1787","fileName":"611234037.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& A) {\n        set<int> B = {A.begin(), A.end()};\n        auto res = 0;\n        auto taken = false;\n        for (auto b : B)\n            if (b >= 0)\n                res += b, taken = true;\n        if (taken) return res;\n        return *B.rbegin();\n    }\n};","author":"farmer","submissionId":"611234037"},[]]},{"1788":[{"id":"1788","fileName":"611233587.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = INT_MIN, sum = 0;\n        int mx = ranges::max(nums);\n        int n = nums.size();\n        if (mx <= 0) return mx;\n        // for (int i = 0; i < n; ++ i) {\n        //     if (nums[i] < 0) nums[i] = 0;\n        //     cout << nums[i] << ' ' ;\n        // }\n        for (int i = 0; i < n; ++ i) {\n            set<int> st;\n            sum = 0;\n            for (int j = i; j < n; ++ j) {\n                int x = nums[j];\n                if (x <= 0) continue;\n                if (!st.contains(x)) {\n                    sum += x;\n                }\n                st.insert(x);\n                ans = max(ans, sum);\n            }\n        }\n        // if (ans = INT_MIN) ans = ranges::max(nums);\n        return ans;\n    }\n};","author":"心里没点AC数","submissionId":"611233587"},[]]},{"1790":[{"id":"1790","fileName":"611234413.txt","sourceCode":"function maxSum(nums: number[]): number {\n  nums = Array.from(new Set(nums));\n  // 剔除全部负数, 得到的数组就是答案\n  // 特别地, 如果全是负数, 就直接取最大值\n  let ans = 0;\n  let max = -Infinity;\n  for (const num of nums) {\n    max = Math.max(max, num);\n    if (num > 0) {\n      ans += num;\n    }\n  }\n  return max > 0 ? ans : max;\n}\n","author":"BvVeMRGl","submissionId":"611234413"},[]]},{"1792":[{"id":"1792","fileName":"611234669.txt","sourceCode":"class Solution {\npublic:\nint maxSum(vector<int> &nums) {\n    int n = nums.size();\n    unordered_map<int, int> mp;\n    int sum = 0, mx_mn = INT_MIN;\n    for (int x:nums) {\n        if (x > 0 && !mp.count(x)) {\n            sum += x;\n        } else\n            mx_mn = max(mx_mn, x);\n        mp[x] += 1;\n    }\n    return sum == 0 ? mx_mn : sum;\n}\n};","author":"致命之足","submissionId":"611234669"},[]]},{"1793":[{"id":"1793","fileName":"611234868.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        su = 0\n        c = Counter(nums)\n        if (mx := max(c.keys())) < 0:\n            return mx\n        for k in c.keys():\n            if k < 0:\n                continue\n            su += k\n        return su","author":"kcrimson","submissionId":"611234868"},[]]},{"1795":[{"id":"1795","fileName":"611233998.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        vector<int> arr;\n        for(int i=0;i<n;i++){\n            if(nums[i]>0){\n                arr.push_back(nums[i]);\n            }\n        }\n        if(arr.size()==0){\n            return ranges::max(nums);\n        }\n        \n        unordered_map<int,int> rec;\n        sort(arr.rbegin(),arr.rend());\n        int ans=0;\n        for(int i:arr){\n            if(rec.count(i)){\n                continue;\n            }\n            ans+=i;\n            rec[i]=1;\n        }\n        // n=arr.size();\n        // int l=0,r=0;\n        // int cnt=0;\n        // int ans=0;\n        // while(r<n){\n        //     while(l<n&&rec.count(arr[r])&&rec[arr[r]]==1){\n        //         cnt-=arr[l];\n        //         rec[arr[l]]--;\n        //         l++;\n        //     }\n        //     while(r<n&&(!rec.count(arr[r])||rec[arr[r]]==0)){\n        //         //cout<<'f';\n        //         cnt+=arr[r];\n        //         rec[arr[r]]++;\n        //         r++;\n        //     }\n        //     //cout<<l<<' '<<r<<endl;\n        //     ans=max(cnt,ans);\n        // }\n        return ans;\n    }\n};","author":"Juross","submissionId":"611233998"},[]]},{"1796":[{"id":"1796","fileName":"611234933.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int res = 0;\n        unordered_map<int, int> hs;\n        int cnt = 0, minv = -100;\n        for (auto x : nums) {\n            if (x < 0) {\n                cnt ++;\n                minv = max(minv, x);\n                continue;\n            }\n            if (!hs[x]) {\n                hs[x] = 1;\n                res += x;\n            }\n        }\n        return cnt == nums.size() ? minv : res;\n    }\n};","author":"Lambda","submissionId":"611234933"},[]]},{"1797":[{"id":"1797","fileName":"611235041.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums.sort(reverse=True)\n        if nums[0] < 0:\n            return nums[0]\n        ans = 0\n        dic = defaultdict(int)\n        for x in nums:\n            if x < 0:\n                return ans\n            if dic[x] > 0:\n                continue\n            ans += x\n            dic[x] += 1\n        return ans","author":"终不负少年游","submissionId":"611235041"},[]]},{"1798":[{"id":"1798","fileName":"611234639.txt","sourceCode":"#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops\")\n#define ALL(v) v.begin(),v.end()\n#define For(i,_) for(int i=0,i##end=_;i<i##end;++i) // [0,_)\n#define FOR(i,_,__) for(int i=_,i##end=__;i<i##end;++i) // [_,__)\n#define Rep(i,_) for(int i=(_)-1;i>=0;--i) // [0,_)\n#define REP(i,_,__) for(int i=(__)-1,i##end=_;i>=i##end;--i) // [_,__)\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define V vector\n#define pb push_back\n#define pf push_front\n#define qb pop_back\n#define qf pop_front\n#define eb emplace_back\ntypedef pair<int,int> pii;\ntypedef pair<ll,int> pli;\n#define fi first\n#define se second\nconst int dir[4][2]={{-1,0},{0,1},{1,0},{0,-1}},inf=0x3f3f3f3f,mod=1e9+7;\nconst ll infl=0x3f3f3f3f3f3f3f3fll;\ntemplate<class T>inline bool ckmin(T &x,const T &y){return x>y?x=y,1:0;}\ntemplate<class T>inline bool ckmax(T &x,const T &y){return x<y?x=y,1:0;}\nint init=[](){return cin.tie(nullptr)->sync_with_stdio(false),0;}();\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>s;\n        for(int i:nums)if(i>0)s.insert(i);\n        if(s.empty())return *max_element(ALL(nums));\n        int ret=0;\n        for(int i:s)ret+=i;\n        return ret;\n    }\n};","author":"drizzlo","submissionId":"611234639"},[]]},{"1799":[{"id":"1799","fileName":"611235184.txt","sourceCode":"class Solution {\npublic:\n  int maxSum(vector<int> &nums) {\n    // 枚举左右边界，移除其中的重复元素，取最大值作为答案\n    int ans = nums[0];\n    for (int i = 0; i < nums.size(); ++i) {\n      for (int j = i; j < nums.size(); ++j) {\n        unordered_set<int> choose;\n        choose.insert(nums[i]);\n        int sum = nums[i];\n        for (int k = i + 1; k <= j; ++k) {\n          if (nums[k] < 0) continue;\n          if (choose.find(nums[k]) != choose.end()) continue;\n          sum += nums[k];\n          choose.insert(nums[k]);\n        }\n        ans = max(ans, sum);\n      }\n    }\n    return ans;\n  }\n};","author":"gaojingm","submissionId":"611235184"},[]]},{"1803":[{"id":"1803","fileName":"611235759.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        nums = list(set(nums))\n        n = len(nums)\n        ans = -inf\n        nums.sort()\n        pre = list(accumulate(nums, initial=0))\n        for i in range(1, n + 1):\n            for j in range(n - i + 1):\n                if len(set(nums[j: j + i])) == i:\n                    ans = max(ans, pre[i + j] - pre[j])\n        return ans","author":"小爱仙尊","submissionId":"611235759"},[]]},{"1804":[{"id":"1804","fileName":"611236148.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        set<int, greater<int>> st;\n        int res = 0;\n        for (auto x : nums) {\n            if (!st.contains(x)) {\n                st.insert(x);\n            }\n        }\n        bool check;\n        if (*st.begin() > 0) {\n            for (auto it = st.begin(); it != st.end(); it++) {\n                if ((*it) > 0) {\n                    res += (*it);\n                }\n            }\n        } else {\n            res = (*st.begin());\n        }\n\n        return res;\n        \n    }\n};","author":"Stupefied 6aloisK4s","submissionId":"611236148"},[]]},{"1806":[{"id":"1806","fileName":"611235263.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int n=nums.length;\n        Arrays.sort(nums);\n        if(nums[n-1]<=0)return nums[n-1];\n        int ans=0;\n        for(int i=0;i<n;i++){\n            if(nums[i]<=0)continue;\n            if(i>0&&nums[i]==nums[i-1])continue;\n            ans+=nums[i];\n        }\n        return ans;\n    }\n}","author":"鼠一鼠二的five","submissionId":"611235263"},[]]},{"1807":[{"id":"1807","fileName":"611236221.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        Arrays.sort(nums);\n        int res=nums[nums.length-1];\n        Set<Integer> set=new HashSet<>();\n        set.add(res);\n        int t=nums.length-2;\n        while(t>=0&&nums[t]>0){\n            if(set.contains(nums[t])){\n                t--;\n                continue;\n            }\n            set.add(nums[t]);\n            res+=nums[t];\n            t--;\n        }\n        return res;\n    }\n}","author":"阳光大男孩","submissionId":"611236221"},[]]},{"1808":[{"id":"1808","fileName":"611236010.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& num) {\n        int n = num.size(), P = 100, ans = 0;\n        vector<int> vt;\n        vector<int> s(310, 0);\n        vt.push_back(0);\n        sort(num.begin(), num.end());\n        bool tag = false;\n        for(int i = 0; i < n; i ++) \n            if(num[i] > 0 && s[num[i]] == 0)\n            {\n                s[num[i]] = 1;\n                ans += num[i];\n                tag = true;\n            }\n        if(!tag) ans = num[n - 1];\n        return ans;\n    }\n};","author":"肥工第一深情","submissionId":"611236010"},[]]},{"1809":[{"id":"1809","fileName":"611236162.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        if (nums.size() <= 1) return nums[0];\n        set<int> cnt(nums.begin(), nums.end());\n        int res = 0, ans = INT_MIN;\n        for (auto v : cnt) {\n            if (v > 0) res += v;\n            ans = max(ans, v);\n        }\n        if (ans < 0) return ans;\n        return res;\n    }\n};","author":"Sheen","submissionId":"611236162"},[]]},{"1810":[{"id":"1810","fileName":"611236188.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        cnt=sorted(list(set(nums)),reverse=True)\n        s=cnt[0]\n        for x in cnt[1:]:\n            if x>0:\n                s+=x\n            else:\n                break\n        return s","author":"绫小路","submissionId":"611236188"},[]]},{"1811":[{"id":"1811","fileName":"611236392.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set <int> s;\n        for(vector <int> :: iterator it = nums.begin();it!=nums.end();++it)\n            s.insert(*it);\n        int res=0;\n        if(*s.rbegin()<=0)return *s.rbegin();\n        while(!s.empty()&&(*s.rbegin()>0))\n            {\n                int tp=*s.rbegin();\n                res+=*s.rbegin();\n                s.erase(tp);\n            }\n        return res;\n    }\n};","author":"Shadowice1984","submissionId":"611236392"},[]]},{"1812":[{"id":"1812","fileName":"611236688.txt","sourceCode":"\nfunc maxSum(nums []int) int {\n\tif slices.Max(nums) <= 0 {\n\t\treturn slices.Max(nums)\n\t}\n\tans := 0\n\tcnt := map[int]int{}\n\tfor _, v := range nums {\n\t\tif v >= 0 {\n\t\t\tcnt[v] = 1\n\t\t}\n\t}\n\tfor k := range cnt {\n\t\tans += k\n\t}\n\treturn ans\n}\n","author":"djzzwx","submissionId":"611236688"},[]]},{"1813":[{"id":"1813","fileName":"611236630.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n=nums.size();\n        if(n==1)return nums[0];\n        int ans=-200;\n        int sum=0;\n        for(int i=0;i<n;i++)\n        {\n            ans=max(nums[i],ans);\n            if(nums[i]<0)nums[i]=0;\n        }\n        if(ans<0)return ans;\n        ans=0;\n        unordered_map<int,int>p;\n        for(int i=0;i<n;i++){\n            if(nums[i]==0)continue;\n            if(p.find(nums[i])!=p.end())continue;\n            sum+=nums[i];\n            p[nums[i]]++;\n            ans=max(ans,sum);\n            // cout<<ans<<endl;\n        }\n        return ans;\n        \n    }\n};","author":"ywk","submissionId":"611236630"},[]]},{"1814":[{"id":"1814","fileName":"611236769.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        ranges::sort(nums);\n        int n = nums.size();\n        int ans = nums[n - 1];\n        unordered_map<int, int> cnt;\n        int window = 0;\n        for (int i = n - 1; i >= 0 && nums[i] > 0; i--) {\n            cnt[nums[i]]++;\n            if (cnt[nums[i]] == 1) {\n                window += nums[i];\n                ans = max(ans, window);\n            }\n        }\n        return ans;\n    }\n};","author":"物联黄同学","submissionId":"611236769"},[]]},{"1815":[{"id":"1815","fileName":"611236974.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        map <int,int> mp;\n        for(auto i:nums) mp[i]++;\n        int ans=-1e9;\n        for(auto [x,y]:mp){\n            \n            if(x>0) ans+=x;\n            ans=max(ans,x);\n        }\n        return ans;\n    }\n};","author":"Lucky7","submissionId":"611236974"},[]]},{"1817":[{"id":"1817","fileName":"611237022.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<bool> st(101, false);\n        int mx = INT_MIN;\n        for(int i : nums) {\n            if(i > 0) st[i] = true;\n            mx = max(mx, i);\n        }\n        int res = 0;\n        for(int i = 1; i <= 100; i ++)\n            if(st[i]) res += i;\n        if(res == 0) return mx;\n        return res;\n    }\n};","author":"Christinaの✓","submissionId":"611237022"},[]]},{"1819":[{"id":"1819","fileName":"611237447.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int ans = 0;\n        Set<Integer> set = new HashSet<>();\n        int ma = -Integer.MAX_VALUE / 2;\n        for (int  x: nums) {\n            ma = Math.max(ma, x);\n            if (x > 0 && set.add(x)) {\n                ans += x;\n            }\n        }\n        if (set.isEmpty()) {\n            return ma;\n        }\n        return ans;\n    }\n}","author":"zzl","submissionId":"611237447"},[]]},{"1821":[{"id":"1821","fileName":"611237791.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        new_nums = dict()\n        k = 0\n        nums.sort(reverse=True)\n        for i in nums:\n            if i in new_nums:\n                continue\n            else:\n                if k == 0 and i >= 0:\n                    new_nums[i] = 0\n                    continue\n                if i < 0 and len(new_nums) == 0:\n                    return i\n                if i < 0 and len(new_nums) != 0:\n                    break\n        sum = 0\n        for m,n in new_nums.items():\n            sum += m\n        return sum","author":"Cthva十十","submissionId":"611237791"},[]]},{"1822":[{"id":"1822","fileName":"611237870.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = INT_MIN;\n        unordered_map<int, int> cnt;\n        vector<int> tmp;\n        for(int x : nums) cnt[x]++;\n        for(auto x : cnt) tmp.push_back(x.first);\n        int n = tmp.size();\n        if(n == 1) return tmp[0];\n        sort(tmp.begin(), tmp.end());\n        vector<int> dp(n, 0);\n        dp[0] = tmp[0];\n        for(int i = 1; i < n; i++){\n            dp[i] = max(dp[i-1] + tmp[i], tmp[i]);\n            ans = max(ans, dp[i]);\n        }\n        return ans;\n    }\n};","author":"xzbcc979","submissionId":"611237870"},[]]},{"1823":[{"id":"1823","fileName":"611237698.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans=0;\n        unordered_map<int,bool> mp;\n        int xMAx=INT_MIN;\n        for(int i=0;i<nums.size();i++){\n            xMAx=max(xMAx,nums[i]);\n            if(!mp[nums[i]] && nums[i]>0){\n              ans+=nums[i];\n              mp[nums[i]]=true;\n            }\n        }\n        return xMAx>0?ans:xMAx;\n    }\n};","author":"摆渡人","submissionId":"611237698"},[]]},{"1824":[{"id":"1824","fileName":"611238522.txt","sourceCode":"import java.util.HashSet;\n\nclass Solution {\n    public int maxSum(int[] nums) {\n        Set<Integer> set = new LinkedHashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            set.add(nums[i]);\n        }\n        int sum = 0;\n        boolean flag = false;\n        int max = Integer.MIN_VALUE;\n        for (Integer i : set) {\n            if (i >= 0) {\n                sum += i;\n                flag = true;\n            }\n            max = Math.max(max, i);\n        }\n        if (flag) {\n            return sum;\n        }\n        return max;\n    }\n}","author":"北海有你","submissionId":"611238522"},[]]},{"1826":[{"id":"1826","fileName":"611239959.txt","sourceCode":"map<int, bool> mp;\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n       int ans = 0, mx = nums[0];\n        bool f = false;\n        mp.clear();\n       for(auto it : nums) {\n           if(!mp[it] && it > 0) {\n               f = true;\n               ans += it;\n           }\n           mx = max(mx, it);\n           mp[it] = true;\n       }\n        return f ? ans : mx;\n    }\n};","author":"张二狗","submissionId":"611239959"},[]]},{"1827":[{"id":"1827","fileName":"611238046.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {        \n        int n = nums.length;\n        int max = -200;\n        for (int x : nums) {\n            max = Math.max(max, x);\n        }\n        int ret = 0;\n        Set<Integer> st = new HashSet<>();\n        for (int i = 0; i < n ; ++i) {\n            if (nums[i] < 0) continue;\n            if (st.add(nums[i])) {\n                ret += nums[i];\n            }\n        }\n        if (st.size() == 0) return max;\n        return ret;\n        \n    }\n}","author":"Scott","submissionId":"611238046"},[]]},{"1828":[{"id":"1828","fileName":"611239213.txt","sourceCode":"class Solution {\n    // 没考虑最大和...\n    // 不用连续是吧...什么语文题...\n    public int maxSum(int[] nums) {\n        int sum = 0, max = Integer.MIN_VALUE;\n        Set<Integer> set = new HashSet<>();\n        for (int num : nums) {\n            if (num > 0) {\n                sum += set.contains(num) ? 0 : num;\n                set.add(num);\n            } else {\n                max = Math.max(num, max);\n            }\n        }\n        return sum == 0 ? max : sum;\n    }\n}","author":"CNH5","submissionId":"611239213"},[]]},{"1830":[{"id":"1830","fileName":"611241095.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n=sorted(set(nums))\n        s=0\n        if n[-1]<=0:return n[-1]\n        for i in n:\n            if i>0:\n                s+=i\n        return s","author":"琉璃丶","submissionId":"611241095"},[]]},{"1831":[{"id":"1831","fileName":"611238814.txt","sourceCode":"from bisect import bisect_left\n\ndef bs(a, x):\n    l, r = 0, len(a) - 1\n    while l <= r:\n        m = (l + r) // 2\n        if a[m] == x:\n            return m\n        if a[m] < x:\n            l = m + 1\n        else:\n            r = m - 1\n    return -1\n\ndef st(a):\n    n = len(a)\n    s = 1\n    while s < n:\n        s *= 2\n    t = [0] * (2 * s)\n    for i in range(n):\n        t[s + i] = a[i]\n    for i in range(s - 1, 0, -1):\n        t[i] = t[2 * i] + t[2 * i + 1]\n    def q(l, r):\n        l += s; r += s; tot = 0\n        while l <= r:\n            if l & 1:\n                tot += t[l]\n                l += 1\n            if not (r & 1):\n                tot += t[r]\n                r -= 1\n            l //= 2; r //= 2\n        return tot\n    return t, q\n\nclass Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s = sum(x for x in set(nums) if x > 0)\n        return s if s else max(nums)","author":"Cranky 6agarinizJ","submissionId":"611238814"},[]]},{"1833":[{"id":"1833","fileName":"611241493.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> st;\n        int ans = 0, zeros = 0, mx = INT_MIN;\n        for(int x : nums) if(x > 0) {\n            if(!st.contains(x)) {\n                ans += x;\n                st.insert(x);\n            }\n        } else if(x == 0) {\n            zeros = true;\n        } else {\n            mx = max(mx, x);\n        }\n        return ans == 0 ? (zeros ? ans : mx) : ans;\n    }\n};","author":"OHNO","submissionId":"611241493"},[]]},{"1834":[{"id":"1834","fileName":"611241673.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int maxn = -100000;\n        vector<int> v;\n        for(int i = 0; i < nums.size(); ++i)\n        {\n            if(nums[i] > 0) v.emplace_back(nums[i]);\n            maxn = max(maxn, nums[i]);\n        }\n        if(v.size() == 0) return maxn;\n        int cursum = v[0];\n        unordered_map<int, bool> um;\n        um[cursum] = true;\n        for(int i = 1; i < v.size(); ++i)\n        {\n            if(um.find(v[i]) != um.end())\n            {\n                continue;\n            }\n            um[v[i]] = true;\n            cursum += v[i];\n            maxn = max(maxn, cursum);\n        }\n        return maxn;\n    }\n};","author":"MaloFleur","submissionId":"611241673"},[]]},{"1835":[{"id":"1835","fileName":"611241735.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int> st;\n        int ans = 0;\n        bool flag = false;\n        int ma = nums[0];\n        for(auto x: nums){\n            if(st.count(x)) continue;\n            if(x > 0 ){\n            ans += x;\n            flag = true;}\n            st.insert(x);\n            ma = max(ma, x);\n        }\n        if(!flag)return ma;\n        return ans;\n        \n    }\n};","author":"Monad","submissionId":"611241735"},[]]},{"1837":[{"id":"1837","fileName":"611240807.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int ans = 0, n = nums.size(), t = 0, k = 0;\n        unordered_map<int, int> map;\n        for (int i = 0; i < n; i++) {\n            if (nums[i] > 0) {\n                if (map.find(nums[i]) == map.end()) {\n                    ans += nums[i];\n                    map[nums[i]] = 1;\n                }\n            }\n            else if (nums[i] == 0) t++;\n            else k++;\n        }\n        if (k == n) {\n            ans = -200;\n            for (int i = 0; i < n; i++) ans = max(ans, nums[i]);\n        }\n        return ans;\n    }\n};","author":"tkw","submissionId":"611240807"},[]]},{"1838":[{"id":"1838","fileName":"611242490.txt","sourceCode":"class Solution {\n    public int maxSum(int[] a) {\n        Set<Integer> set = new HashSet<>();\n        int ans = 0;\n        if(a.length == 1){\n            return a[0];\n        }\n        int mx = -(int)1e9;\n        for(int x : a){\n            mx = Math.max(x, mx);\n            if(!set.contains(x) && x > 0) {\n                ans += x;\n                set.add(x);\n            }\n        }\n        return mx <= 0 ? mx : ans;\n    }\n}","author":"zazhi","submissionId":"611242490"},[]]},{"1840":[{"id":"1840","fileName":"611242492.txt","sourceCode":"from typing import List\n\nclass Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        positives = [num for num in nums if num > 0]\n        if not positives:\n            return max(nums)\n        return sum(set(positives))","author":"leakey_py","submissionId":"611242492"},[]]},{"1841":[{"id":"1841","fileName":"611242332.txt","sourceCode":"package main\n\nimport \"slices\"\n\n// https://space.bilibili.com/206214\nfunc maxSum(a []int) (ans int) {\n\thas := map[int]bool{}\n\tok := false\n\tfor _, v := range a {\n\t\thas[v] = true\n\t\tif v >= 0 {\n\t\t\tok = true\n\t\t}\n\t}\n\tif ok {\n\t\tfor v := range has {\n\t\t\tif v > 0 {\n\t\t\t\tans+= v\n\t\t\t}\n\t\t}\n\t\treturn\n\t}\n\treturn slices.Max(a)\n}\n","author":"灵茶山艾府","submissionId":"611242332"},[]]},{"1843":[{"id":"1843","fileName":"611243863.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        unordered_set<int> ns;\n        int maxe = nums[0];\n        int sum = 0;\n        for(auto& num: nums){\n            maxe = max(maxe, num);\n            if(num > 0){\n                if(!ns.count(num)){\n                    sum+=num;\n                    ns.insert(num);                    \n                }\n            }\n        }\n        if(ns.size() <= 0){\n            return maxe;\n        }\n        return sum;\n    }\n};","author":"birtiland","submissionId":"611243863"},[]]},{"1844":[{"id":"1844","fileName":"611242680.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        if(nums.size()==1)return nums[0];\n        unordered_set<int> st;\n        for(int num:nums)\n            {\n                st.insert(num);\n            }\n        int minnum = INT_MIN;\n        int res = 0;\n        bool flag = false;\n        for(auto it:st)\n            {\n                minnum = max(minnum,it);\n                if(it > 0)\n                {\n                    res+=it;\n                    flag= true;\n                }\n            }\n        if(flag)\n        return res;\n        else return minnum;\n    }\n};","author":"code_sunflowers","submissionId":"611242680"},[]]},{"1845":[{"id":"1845","fileName":"611243970.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        set<int>   rem;\n        for(int  nn:nums){\n            rem.insert(nn);\n        }\n        auto  item=rem.rbegin();\n        if(*item<=0){\n            return  *item;\n        }\n        int res=0;\n        for(;item!=rem.rend();item++){\n            if(*item>0){\n                res+=*item;\n            }else{\n                break;\n            }\n        }\n        return  res;\n        \n    }\n};","author":"Dong","submissionId":"611243970"},[]]},{"1846":[{"id":"1846","fileName":"611244623.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        const int inf = 1e9;\n        int ma = -inf, d = 100, ma_nega = -inf;\n        vector <int> cnts(206);\n        \n        for (int i = 0; i < n; ++ i){\n            cnts[nums[i]+d] += 1;\n            if (nums[i] <= 0) ma_nega = max(ma_nega, nums[i]);\n        }\n        \n        int cur = 0;\n        for (int i = 200; i > 100; -- i){\n            if (cnts[i]) cur += i-d;  \n        }\n        return cur ? cur : ma_nega;\n    }\n};","author":"lambour","submissionId":"611244623"},[]]},{"1848":[{"id":"1848","fileName":"611245624.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        set_nums = set(nums)\n        return sum(num if num > 0 else 0 for num in set_nums) if max(set_nums) > 0 else max(set_nums)","author":"","submissionId":"611245624"},[]]},{"1849":[{"id":"1849","fileName":"611245004.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        tmp = []\n        for i in nums:\n            if i > 0:\n                tmp.append(i)\n        if len(tmp) == 0: return max(nums)\n\n        res = -inf\n        for i in range(len(tmp)):\n            for j in range(i, len(tmp)):\n                this = sum(set(tmp[i:j+1]))\n                res = max(res, this)\n        return res","author":"君影草","submissionId":"611245004"},[]]},{"1850":[{"id":"1850","fileName":"611246034.txt","sourceCode":"#include <limits.h>\n\nint maxSum(int* nums, int numsSize) {\n    int distinct[201] = {0};\n    int positiveSum = 0;\n    for (int i = 0; i < numsSize; i++) {\n        int index = nums[i] + 100;\n        if (nums[i] > 0 && distinct[index] == 0) {\n            positiveSum += nums[i];\n            distinct[index] = 1;\n        }\n    }\n    if (positiveSum == 0) {\n        int maxElement = nums[0];\n        for (int i = 1; i < numsSize; i++) {\n            if (nums[i] > maxElement) {\n                maxElement = nums[i];\n            }\n        }\n        return maxElement;\n    }\n    return positiveSum;\n}","author":"sinkDink","submissionId":"611246034"},[]]},{"1851":[{"id":"1851","fileName":"611244686.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        c = Counter(nums)\n        cnt = 0\n        tmp = []\n        for x, v in c.items():\n            tmp.append(x)\n        tmp.sort()\n\n        ans = 0\n        for i, x in enumerate(tmp):\n            if i < len(tmp) - 1 and x < 0:\n                continue\n            ans += x\n        return ans\n\n\n\n        \n        ","author":"Beautiful Shawsfr","submissionId":"611244686"},[]]},{"1853":[{"id":"1853","fileName":"611248119.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n       set<int> s(nums.begin(),nums.end());\n        nums.assign(s.begin(),s.end());\n        sort(nums.begin(),nums.end());\n        int i;\n        if(nums[nums.size()-1]<=0) return nums[nums.size()-1];\n        for( i=0;i<nums.size();i++){\n            if(nums[i]>0) break;\n        }\n        int result=0;\n        for(i;i<nums.size();i++){\n            result+=nums[i];\n        }\n        return result;\n    }\n};","author":"斟晚秋","submissionId":"611248119"},[]]},{"1855":[{"id":"1855","fileName":"611248169.txt","sourceCode":"# -*- coding: utf-8 -*-\nfrom typing import List, Tuple, Optional, DefaultDict\nfrom collections import deque, Counter\nfrom queue import PriorityQueue\nimport math\nfrom functools import lru_cache\nfrom sortedcontainers import SortedDict, SortedSet\nimport random\nimport copy\nimport sys\n\nMOD = 10**9 + 7\n\n\nINF = 0x7f7f7f7f7f7f7f7\n\n\n\n\nclass Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        tot = 0\n        vis = set()\n        for v in nums:\n            if v >= 0 and v not in vis:\n                tot += v\n                vis.add(v)\n\n\n        if len(vis):\n            return tot\n\n        return max(nums)","author":"皓首不倦.GRH","submissionId":"611248169"},[]]},{"1857":[{"id":"1857","fileName":"611248919.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        vector<bool> vis(105, 0); // 存储元素是否出现过\n        int ans = 0;\n        bool flag = false;\n        for(int& x: nums){\n            if(x < 0 || vis[x]) continue;\n            flag = true;\n            vis[x] = 1;\n            ans += x;\n        }\n        if(flag) return ans;\n        return *max_element(nums.begin(), nums.end());\n    }\n};","author":"a碟","submissionId":"611248919"},[]]},{"1859":[{"id":"1859","fileName":"611248832.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        s=sorted(set(nums))\n        if s[-1]<=0:\n            return s[-1]\n        res=0\n        for i in range(len(s)-1,-1,-1):\n            if s[i]>0:\n                res+=s[i]\n            else:\n                break\n        return res\n        ","author":"凉薄一夏","submissionId":"611248832"},[]]},{"1860":[{"id":"1860","fileName":"611248900.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        dp = [0] * n\n        pre = [set() for _ in range(n)]\n        for i in range(n):\n            dp[i] = nums[i]\n            pre[i].add(nums[i])\n            for j in range(i):\n                if nums[i] not in pre[j]:\n                    x = dp[j] + nums[i]\n                    if x > dp[i]:\n                        dp[i] = x\n                        pre[i] = set(pre[j])\n                        pre[i].add(nums[i])\n        return max(dp)","author":"Li Yixin","submissionId":"611248900"},[]]},{"1861":[{"id":"1861","fileName":"611249381.txt","sourceCode":"import java.util.Arrays;\nimport java.util.HashSet;\n\nclass Solution {\n    public int maxSum(int[] nums) {\n        int n = nums.length;\n\n\n        Arrays.sort(nums);\n        if(nums[n-1]<=0)return nums[n-1];\n\n        int res=0;\n        HashSet<Integer> set=new HashSet<>();\n        for(int i=n-1;i>=0 && nums[i]>0;i--){\n            if(set.contains(nums[i])){\n                continue;\n            }\n            set.add(nums[i]);\n            res += nums[i];\n\n        }\n\n\n\n\n        return res;\n    }\n}","author":"nickname","submissionId":"611249381"},[]]},{"1862":[{"id":"1862","fileName":"611250175.txt","sourceCode":"class Solution {\n    public int maxSum(int[] nums) {\n        int max = Integer.MIN_VALUE;\n        boolean[] isAppear = new boolean[101];\n        int res = 0;\n        for (int n : nums) {\n            max = Math.max(max, n);\n            if (n >= 0) {\n                if (!isAppear[n]) {\n                    res += n;\n                    isAppear[n] = true;\n                }\n            }\n        }\n        if (max < 0) {\n            return max;\n        }\n        return res;\n    }\n}","author":"NeoStart","submissionId":"611250175"},[]]},{"1863":[{"id":"1863","fileName":"611251139.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        res=-10**9\n        n=len(nums)\n        temp=[]\n        for i in nums:\n            if i>0:temp.append(i)\n        s=set(temp)\n        res=max(res,sum(s))\n        return res if len(s) else max(nums)","author":"audience","submissionId":"611251139"},[]]},{"1871":[{"id":"1871","fileName":"611258577.txt","sourceCode":"const(\n    MIN = -101\n)\n\nfunc maxSum(nums []int) int {\n    rs := 0\n    numMap := map[int]bool{}\n    for _, num := range nums {\n        if num > 0 { numMap[num] = true }\n    }\n    if len(numMap) > 0 { for key, _ := range numMap { rs += key } \n    } else {\n        rs = MIN\n        for _, num := range nums {\n            rs = max(rs, num)\n        }        \n    }\n    return rs\n}","author":"我啊","submissionId":"611258577"},[]]},{"1874":[{"id":"1874","fileName":"611255768.txt","sourceCode":"func maxSum(nums []int) int {\n\tn := len(nums)\n    res := math.MinInt64\n    for l:=0;l < n;l++{\n        dis := make(map[int]struct{})\n        for r:=l;r<n;r++{\n            dis[nums[r]] = struct{}{}\n            posSum := 0\n            hasPos := false\n            maxVal := math.MinInt64\n            for v := range dis{\n                if v > 0{\n                    posSum += v\n                    hasPos = true\n                }\n                if v > maxVal{\n                    maxVal = v\n                }\n            }\n            candidate := 0\n            if hasPos{\n                candidate = posSum\n            }else{\n                candidate = maxVal\n            }\n            if candidate > res{\n                res = candidate\n            }\n        }\n    }\n    return res\n}","author":"汪星银","submissionId":"611255768"},[]]},{"1876":[{"id":"1876","fileName":"611263456.txt","sourceCode":"class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        cnt = Counter(nums)\n        arr = [x for x in cnt.keys()]\n        arr = sorted(arr, reverse=True)\n        if arr[0] < 0:\n            return arr[0]\n        \n        ans = 0\n        for x in arr:\n            if x > 0:\n                ans += x\n        return ans","author":"magiccircle","submissionId":"611263456"},[]]},{"1877":[{"id":"1877","fileName":"611256709.txt","sourceCode":"#include <bits/stdc++.h>  \nusing namespace std;  \n\n#define INF (int)(1e9)\n#define LL_INF (long long)(1e14) \n#define mod (int)(1e9 + 7) \n\nlong long gcd(long long a, long long b) { \n    return b > 0 ? gcd(b, a % b) : a; \n}\n\nlong long lcm(long long a, long long b) { \n    return a / gcd(a, b) * b; \n}\n\nvoid _mod(int &a, int b) {\n    if (a > b) a -= b;\n    return ;\n}\n\ndouble myPow(double x, int N) {\n    double ans = 1.0;\n    long long n = N;\n\n    if (n < 0) {\n        n = -n;\n        x = 1/x;\n\t}\n\n    while (n) {\n        if (n & 1) {\n            ans *= x;\n        }\n\n        x *= x;\n        n >>= 1;\n    }\n\n    return ans;\n}\n\n\nstruct Matrix {  \n    long long a[26][26];\n\t\n\tMatrix () {\n        memset(a, 0, sizeof(a));\n    }  \n\n    void init() {  \n        for (int i = 0; i < 26; i++) {  \n            a[i][i] = 1;  \n        }  \n        return;  \n    }  \n\n    Matrix operator*(const Matrix& b) const {  \n        Matrix res;  \n        for (int i = 0; i < 26; i++) {  \n            for (int j = 0; j < 26; j++) {  \n                for (int k = 0; k < 26; k++) {  \n                    res.a[i][j] = (res.a[i][j] + a[i][k] * b.a[k][j]) % mod;  \n                }  \n            }  \n        }  \n        return res;  \n    }  \n};\n\n\nMatrix qpow(Matrix a, int n) {\n    Matrix res; res.init();\n    while (n) {\n        if (n & 1) {\n            res = res * a;\n        }\n        a = a * a;\n        n >>= 1;\n    }\n    return res;\n}\n\n\nint dijstra(vector<vector<int>>& grid) {\n    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> q;\n    int n = grid.size(), m = grid[0].size();\n    vector<vector<int>> vis(n, vector<int>(m, INT_MAX));\n    int dxy[4][2] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n\n    vis[0][0] = 0;\n    q.push({0, 0});\n    while (!q.empty()) {\n        auto [v, idx] = q.top(); q.pop();\n        int x = idx/m, y = idx % m;\n\n        for (int i = 0; i < 4; i++) {\n            int xx = x + dxy[i][0];\n            int yy = y + dxy[i][1];\n\n            if (xx < 0 || yy >= m || xx >= n || yy < 0) continue;\n            int mx = max(vis[x][y], grid[xx][yy]) + 1 + (x + y) % 2;\n            if (vis[xx][yy] > mx) {\n                vis[xx][yy] = mx;\n                q.push({vis[xx][yy], xx*m + yy});\n            }\n        }\n    }\n\n    return vis[n - 1][m - 1];\n}\n\nvector<vector<int>> floyd(int n, vector<vector<int>>& edges) {\n    vector<vector<int>> g(n, vector<int>(n, INT_MAX/2));\n    vector<vector<int>> dis(n + 1, vector<int>(n + 1));\n\n    for (auto &e : edges) {\n        g[e[0]][e[1]] = g[e[1]][e[0]] = e[2];\n    }\n\n    dis = g;\n    for (int k = 0; k < n; k++) {\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                dis[i][j] = fmin(dis[i][j], dis[i][k] + dis[k][j]);\n            }\n        }\n    }\n\n    return dis;\n}\n\n/*\nint isPrime[100001];\n//int prime[5000001];\n\nauto init_Prime = [] {\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n    vector<int> primes;\n    // memset(isPrime, 0, sizeof(isPrime));\n    isPrime[0] = isPrime[1] = 1;\n    for (int i = 2; i <= 100000; i++) {\n        if (isPrime[i] == 0) {\n            primes.push_back(i);\n        }\n\n        for (int j = 0; j < primes.size() && i * primes[j] <= 100000; j++) {\n            isPrime[i * primes[j]] = 1;\n            if (i % primes[j] == 0) {\n                break;\n            }\n        }\n    }\n\n//    for (int i = 1; i <= 100000; i++) {\n//        prime[i] = prime[i - 1];\n//        if (isPrime[i - 1] == 0) prime[i]++;\n//    }\n\n    return 0;\n}();\n*/\n\n\nstatic vector<int> getNext(const string& str) {\n    int n = (int)str.size();\n    vector<int> next(n);\n    int j = 0;\n    for (int i = 1; i < n; i++) {\n        while (j > 0 && str[i] != str[j]) {\n            j = next[j - 1];\n        }\n        if (str[i] == str[j]) {\n            j++;\n            next[i] = j;\n        }\n    }\n    return next;\n}\n\nstatic vector<int> kmp(const string& a, const string& b) {\n    if (a.size() < b.size()) {\n        return {};\n    }\n    int n = (int)a.size();\n    int m = (int)b.size();\n    vector<int> res;\n    vector<int> next = getNext(b);\n    for (int i = 0, j = 0; i < n; i++) {\n        while (j - 1 >= 0 && a[i] != b[j]) {\n            j = next[j - 1];\n        }\n        if (a[i] == b[j]) {\n            j++;\n        }\n        if (j == m) {\n            res.push_back(i - j + 1);\n            j = next[j - 1]; \n        }\n    }\n    return res;\n}\n\n\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nconst long long base1 = uniform_int_distribution<>(8e8, 9e8)(rng);\nconst long long base2 = uniform_int_distribution<>(8e8, 9e8)(rng);\n\nstruct stringhash {\n    string s;\n    long long mod1 = 1e9 + 7, mod2 = 998244353, n;\n//    long long  base1 = 131, base2 = 13131;\n    vector<long long> hash1;\n    vector<long long> hash2;\n    vector<long long> hash3;\n    vector<long long> hash4;\n    vector<long long> p1;\n    vector<long long> p2;\n    void init(string str){\n    \tios::sync_with_stdio(false);  \n\t\tcin.tie(0), cout.tie(0);\n        str = \" \" + str;\n        n = str.size() - 1;\n        hash1.resize(n + 1, 0);\n        hash2.resize(n + 1, 0);\n        hash3.resize(n + 2, 0);\n        hash4.resize(n + 2, 0);\n        p1.resize(n + 1, 0);\n        p2.resize(n + 1, 0);\n        s = str;\n        p1[0] = p2[0] = 1;\n        for(int i = 1; i <= n; i++){\n            p1[i] = p1[i - 1] * base1 % mod1;\n            p2[i] = p2[i - 1] * base2 % mod2;\n            hash1[i] = (hash1[i - 1] * base1 + (s[i] - 'a')) % mod1;\n            hash2[i] = (hash2[i - 1] * base2 + (s[i] - 'a')) % mod2;\n        }\n        for(int i = n; i >= 1; i--){\n            hash3[i] = (hash3[i + 1] * base1 + (s[i] - 'a')) % mod1;\n            hash4[i] = (hash4[i + 1] * base2 + (s[i] - 'a')) % mod2;\n        }\n    }\n    \n//    pair<long long, long long> getz(int l, int r){\n//        if(r < l){\n//            assert(0);\n//        }\n//        long long res1 = ((hash1[r] - hash1[l - 1] * p1[r - l + 1]) % mod1 + mod1) % mod1;\n//        long long res2 = ((hash2[r] - hash2[l - 1] * p2[r - l + 1]) % mod2 + mod2) % mod2;\n//        return {res1, res2};\n//    }\n//    pair<long long, long long> getf(int l, int r){\n//        if(r < l){\n//            assert(0);\n//        }\n//        long long res1 = ((hash3[l] - hash3[r + 1] * p1[r - l + 1]) % mod1 + mod1) % mod1;\n//        long long res2 = ((hash4[l] - hash4[r + 1] * p2[r - l + 1]) % mod2 + mod2) % mod2;\n//        return {res1, res2};\n//    }\n    \n    long long getz(int l, int r){\n        if(r < l){\n            assert(0);\n        }\n        long long res1 = ((hash1[r] - hash1[l - 1] * p1[r - l + 1]) % mod1 + mod1) % mod1;\n        long long res2 = ((hash2[r] - hash2[l - 1] * p2[r - l + 1]) % mod2 + mod2) % mod2;\n        long long res = ((res1 << 32) | res2);\n        return res;\n    }\n    long long getf(int l, int r){\n        if(r < l){\n            assert(0);\n        }\n        long long res1 = ((hash3[l] - hash3[r + 1] * p1[r - l + 1]) % mod1 + mod1) % mod1;\n        long long res2 = ((hash4[l] - hash4[r + 1] * p2[r - l + 1]) % mod2 + mod2) % mod2;\n        long long res = ((res1 << 32) | res2);\n        return res;\n    }\n};\n\nstruct Trie {\n\tbool isEnd;\n    Trie* children[26];\n    \n    Trie() {\n        isEnd = false;\n        memset(children, 0, sizeof(children));\n    }\n\n    void TrieInsert(const string &word) {\n        Trie* node = this;\n        for (char c : word) {\n            if (node->children[c - 'a'] == NULL) {\n                node->children[c - 'a'] = new Trie();\n            }\n            node = node->children[c - 'a'];\n        }\n\n        node->isEnd = true;\n        return;\n    }\n\n    bool TrieSearch(const string &word) {\n        Trie* node = this;\n        for (char c : word) {\n            if (node->children[c - 'a'] == NULL)\n                return false;\n            node = node->children[c - 'a'];\n        }\n\n        return node->isEnd;\n    }\n};\n\n\nclass FenwickTree {\n    vector<int> tree;\npublic :\n    FenwickTree(int n) : tree(n + 1) {}\n\n    void update(int i, int val) {\n        for (; i < tree.size(); i += i & -i) {\n            tree[i] += val;\n        }\n        return ;\n    } \n\n    int query(int i) {\n        int sum = 0;\n        for (; i > 0; i -= i & -i) {\n            sum += tree[i];\n        }\n        return sum;\n    }\n};\n\nint dfs_child_count(vector<vector<int>>& g, int x, int fa) {\n    int ret = 1;\n\n    for (int y : g[x]) {\n        if (y != fa) {\n            ret += dfs_child_count(g, y, x);\n        }\n    }\n\n    return ret;\n}\n\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int mp[201] = {0};\n        int ans;\n\n        for (int &x : nums) {\n            mp[x + 100]++;\n        }\n\n        ans = 0;\n        for (int i = 100; i <= 200; i++) {\n            if (mp[i] == 0) continue;\n            ans += i - 100;\n        }\n\n        if (ans == 0) {\n            for (int i = 100; i >= 0; i--) {\n                if (mp[i] >= 1) {\n                    return i - 100;\n                }\n            }\n        } \n        \n        return ans;\n    }\n};","author":"silent","submissionId":"611256709"},[]]},{"1878":[{"id":"1878","fileName":"611262177.txt","sourceCode":"class Solution {\npublic:\n    int cnt[105];\n    int maxSum(vector<int>& nums) {\n        int n=nums.size(),ans=-100;\n        // for(int i=0;i<n;i++){\n        //     for(int j=i;j<n;j++){\n        //         bool flag=true;\n        //         map<int,int> mp;\n        //         int sum=0;\n        //         for(int k=i;k<=j;k++){\n        //             if(mp[nums[k]]){\n        //                 flag=false;\n        //                 break;\n        //             }\n        //             sum+=nums[k];\n        //             mp[nums[k]]++;\n        //         }\n        //         if(flag) ans=max(ans,sum);\n        //     }\n        // }\n        int sum=0;\n        set<int> st;\n        bool flag=flag;\n        for(int i=0;i<n;i++){\n            if(nums[i]>0&&!st.count(nums[i])){\n                sum+=nums[i];\n                flag=true;\n            }\n            st.insert(nums[i]);\n            ans=max(ans,nums[i]);\n        }\n        if(flag) return max(ans,sum);\n        else return ans;\n    }\n};","author":"Boring NapierhcR","submissionId":"611262177"},[]]},{"1879":[{"id":"1879","fileName":"611266368.txt","sourceCode":"class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        int n = nums.size();\n        int sum = 0;\n        int ans = INT_MIN;\n        sort(nums.begin(),nums.end());\n        vector<int> temp;\n        for(int i=0;i<n;i++){\n            if(i==0||nums[i]!=nums[i-1])temp.push_back(nums[i]);\n        }\n        for(int i=0;i<temp.size();i++){\n            if(temp[i]>0){\n                sum+=temp[i];\n            ans=max(sum,ans);\n            }\n            ans=max(ans,temp[i]);\n        }\n        \n      \n        return ans;\n    }\n};","author":"xiuxiu","submissionId":"611266368"},[]]},{"1881":[{"id":"1881","fileName":"611261934.txt","sourceCode":"#define repi(i, a, b) for (int i = (a), i##len = (b); i <= i##len; ++i)\n#define peri(i, a, b) for (int i = (a), i##len = (b); i >= i##len; --i)\n#define ll long long\n#define pii pair<int, int>\n#define x first\n#define y second\n#define vi vector<int>\n#define gi greater<int>\n#define pb push_back\n#define eb emplace_back\n#define all(x) x.begin(), x.end()\n#define lowbit(t) ((t) & (-(t)))\nconstexpr const int MAXN = 1e5 + 5;\nconstexpr const int MOD = 1e9 + 7;\nconstexpr const int BASE = 233;\nconstexpr const int MOD2 = 998244353;\nconstexpr const int INF = 0x3f3f3f3f;\nint dx[] = {0, 0, -1, 1, -1, 1, 1, -1};\nint dy[] = {-1, 1, 0, 0, -1, -1, 1, 1};\ntemplate <class U, class T> void Max(U &x, T y) {\n  if (x < y)\n    x = y;\n}\ntemplate <class U, class T> void Min(U &x, T y) {\n  if (x > y)\n    x = y;\n}\ninline ll qpow(ll b, ll k, int MOD) {\n  ll ans = 1;\n  while (k) {\n    if (k & 1) {\n      (ans *= b) %= MOD;\n    }\n    (b *= b) %= MOD;\n    k >>= 1;\n  }\n  return ans;\n}\n\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        sort(all(nums));\n        int n = unique(all(nums)) - nums.begin();\n        int ans{};\n        bool f{};\n        repi(i,0,n-1) {\n          if (nums[i] < 0) {\n            continue;\n          }\n            f=1;\n          ans+=nums[i];\n        }\n        if (!f) {\n            ans = nums[n-1];\n        }\n        return ans;\n    }\n};","author":"carrot","submissionId":"611261934"},[]]}]}